=begin
#FX Historical REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Contact: support@apibricks.io
Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MetadataApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MetadataApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MetadataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MetadataApi' do
    it 'should create an instance of MetadataApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MetadataApi)
    end
  end

  # unit tests for v1_assets_asset_id_get
  # List all assets by asset ID
  # @param asset_id The asset ID.
  # @param [Hash] opts the optional parameters
  # @return [Array<V1Asset>]
  describe 'v1_assets_asset_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_assets_get
  # List all assets
  # Retrieves all assets.              :::info Our asset identifiers are aligned with the ISO 4217 currency codes standard only for fiat money (government or law regulated currency). :::              :::info Properties of the output are providing aggregated information from across all symbols related to the specific asset. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source. :::
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter_asset_id Comma or semicolon delimited asset identifiers used to filter response. (optional, eg. &#x60;BTC;ETH&#x60;).
  # @return [Array<V1Asset>]
  describe 'v1_assets_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_assets_icons_size_get
  # List all asset icons
  # Gets the list of icons (of the given size) for all the assets.
  # @param size The size of the icons.
  # @param [Hash] opts the optional parameters
  # @return [Array<V1Icon>]
  describe 'v1_assets_icons_size_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
