/*
 * FX Historical REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents an asset.
 */
public class OASV1Asset implements OAS.MappedProperties {
    /**
     * Gets or sets the asset ID.
     * @return assetId
     */
    public String assetId { get; set; }

    /**
     * Gets or sets the name of the asset.
     * @return name
     */
    public String name { get; set; }

    /**
     * Gets or sets a value indicating whether the asset is a cryptocurrency.
     * @return typeIsCrypto
     */
    public Integer typeIsCrypto { get; set; }

    /**
     * Gets or sets the start date of quote data.
     * @return dataQuoteStart
     */
    public Datetime dataQuoteStart { get; set; }

    /**
     * Gets or sets the end date of quote data.
     * @return dataQuoteEnd
     */
    public Datetime dataQuoteEnd { get; set; }

    /**
     * Gets or sets the start date of order book data.
     * @return dataOrderbookStart
     */
    public Datetime dataOrderbookStart { get; set; }

    /**
     * Gets or sets the end date of order book data.
     * @return dataOrderbookEnd
     */
    public Datetime dataOrderbookEnd { get; set; }

    /**
     * Gets or sets the start date of trade data.
     * @return dataTradeStart
     */
    public Datetime dataTradeStart { get; set; }

    /**
     * Gets or sets the end date of trade data.
     * @return dataTradeEnd
     */
    public Datetime dataTradeEnd { get; set; }

    /**
     * Gets or sets the number of symbols.
     * @return dataSymbolsCount
     */
    public Long dataSymbolsCount { get; set; }

    /**
     * Gets or sets the USD volume in the last 1 hour.
     * @return volume1hrsUsd
     */
    public Double volume1hrsUsd { get; set; }

    /**
     * Gets or sets the USD volume in the last 1 day.
     * @return volume1dayUsd
     */
    public Double volume1dayUsd { get; set; }

    /**
     * Gets or sets the USD volume in the last 1 month.
     * @return volume1mthUsd
     */
    public Double volume1mthUsd { get; set; }

    /**
     * Gets or sets the USD price of the asset.
     * @return priceUsd
     */
    public Double priceUsd { get; set; }

    /**
     * Gets or sets the ID of the icon for the asset.
     * @return idIcon
     */
    public String idIcon { get; set; }

    /**
     * Gets or sets the current supply of the asset.
     * @return supplyCurrent
     */
    public Double supplyCurrent { get; set; }

    /**
     * Gets or sets the total supply of the asset.
     * @return supplyTotal
     */
    public Double supplyTotal { get; set; }

    /**
     * Gets or sets the maximum supply of the asset.
     * @return supplyMax
     */
    public Double supplyMax { get; set; }

    /**
     * 
     * @return chainAddresses
     */
    public List<OASV1ChainNetworkAddress> chainAddresses { get; set; }

    /**
     * Get dataStart
     * @return dataStart
     */
    public String dataStart { get; private set; }

    /**
     * Get dataEnd
     * @return dataEnd
     */
    public String dataEnd { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'asset_id' => 'assetId',
        'type_is_crypto' => 'typeIsCrypto',
        'data_quote_start' => 'dataQuoteStart',
        'data_quote_end' => 'dataQuoteEnd',
        'data_orderbook_start' => 'dataOrderbookStart',
        'data_orderbook_end' => 'dataOrderbookEnd',
        'data_trade_start' => 'dataTradeStart',
        'data_trade_end' => 'dataTradeEnd',
        'data_symbols_count' => 'dataSymbolsCount',
        'volume_1hrs_usd' => 'volume1hrsUsd',
        'volume_1day_usd' => 'volume1dayUsd',
        'volume_1mth_usd' => 'volume1mthUsd',
        'price_usd' => 'priceUsd',
        'id_icon' => 'idIcon',
        'supply_current' => 'supplyCurrent',
        'supply_total' => 'supplyTotal',
        'supply_max' => 'supplyMax',
        'chain_addresses' => 'chainAddresses',
        'data_start' => 'dataStart',
        'data_end' => 'dataEnd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASV1Asset() {
        chainAddresses = new List<OASV1ChainNetworkAddress>();
    }

    public static OASV1Asset getExample() {
        OASV1Asset v1Asset = new OASV1Asset();
          v1Asset.assetId = '';
          v1Asset.name = '';
          v1Asset.typeIsCrypto = 0;
          v1Asset.dataQuoteStart = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataQuoteEnd = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataOrderbookStart = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataOrderbookEnd = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataTradeStart = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataTradeEnd = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          v1Asset.dataSymbolsCount = 123456789L;
          v1Asset.volume1hrsUsd = 1.3579;
          v1Asset.volume1dayUsd = 1.3579;
          v1Asset.volume1mthUsd = 1.3579;
          v1Asset.priceUsd = 1.3579;
          v1Asset.idIcon = '';
          v1Asset.supplyCurrent = 1.3579;
          v1Asset.supplyTotal = 1.3579;
          v1Asset.supplyMax = 1.3579;
          v1Asset.chainAddresses = new List<OASV1ChainNetworkAddress>{OASV1ChainNetworkAddress.getExample()};
          v1Asset.dataStart = '';
          v1Asset.dataEnd = '';
        return v1Asset;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASV1Asset) {           
            OASV1Asset v1Asset = (OASV1Asset) obj;
            return this.assetId == v1Asset.assetId
                && this.name == v1Asset.name
                && this.typeIsCrypto == v1Asset.typeIsCrypto
                && this.dataQuoteStart == v1Asset.dataQuoteStart
                && this.dataQuoteEnd == v1Asset.dataQuoteEnd
                && this.dataOrderbookStart == v1Asset.dataOrderbookStart
                && this.dataOrderbookEnd == v1Asset.dataOrderbookEnd
                && this.dataTradeStart == v1Asset.dataTradeStart
                && this.dataTradeEnd == v1Asset.dataTradeEnd
                && this.dataSymbolsCount == v1Asset.dataSymbolsCount
                && this.volume1hrsUsd == v1Asset.volume1hrsUsd
                && this.volume1dayUsd == v1Asset.volume1dayUsd
                && this.volume1mthUsd == v1Asset.volume1mthUsd
                && this.priceUsd == v1Asset.priceUsd
                && this.idIcon == v1Asset.idIcon
                && this.supplyCurrent == v1Asset.supplyCurrent
                && this.supplyTotal == v1Asset.supplyTotal
                && this.supplyMax == v1Asset.supplyMax
                && this.chainAddresses == v1Asset.chainAddresses
                && this.dataStart == v1Asset.dataStart
                && this.dataEnd == v1Asset.dataEnd;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (assetId == null ? 0 : System.hashCode(assetId));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (typeIsCrypto == null ? 0 : System.hashCode(typeIsCrypto));
        hashCode = (17 * hashCode) + (dataQuoteStart == null ? 0 : System.hashCode(dataQuoteStart));
        hashCode = (17 * hashCode) + (dataQuoteEnd == null ? 0 : System.hashCode(dataQuoteEnd));
        hashCode = (17 * hashCode) + (dataOrderbookStart == null ? 0 : System.hashCode(dataOrderbookStart));
        hashCode = (17 * hashCode) + (dataOrderbookEnd == null ? 0 : System.hashCode(dataOrderbookEnd));
        hashCode = (17 * hashCode) + (dataTradeStart == null ? 0 : System.hashCode(dataTradeStart));
        hashCode = (17 * hashCode) + (dataTradeEnd == null ? 0 : System.hashCode(dataTradeEnd));
        hashCode = (17 * hashCode) + (dataSymbolsCount == null ? 0 : System.hashCode(dataSymbolsCount));
        hashCode = (17 * hashCode) + (volume1hrsUsd == null ? 0 : System.hashCode(volume1hrsUsd));
        hashCode = (17 * hashCode) + (volume1dayUsd == null ? 0 : System.hashCode(volume1dayUsd));
        hashCode = (17 * hashCode) + (volume1mthUsd == null ? 0 : System.hashCode(volume1mthUsd));
        hashCode = (17 * hashCode) + (priceUsd == null ? 0 : System.hashCode(priceUsd));
        hashCode = (17 * hashCode) + (idIcon == null ? 0 : System.hashCode(idIcon));
        hashCode = (17 * hashCode) + (supplyCurrent == null ? 0 : System.hashCode(supplyCurrent));
        hashCode = (17 * hashCode) + (supplyTotal == null ? 0 : System.hashCode(supplyTotal));
        hashCode = (17 * hashCode) + (supplyMax == null ? 0 : System.hashCode(supplyMax));
        hashCode = (17 * hashCode) + (chainAddresses == null ? 0 : System.hashCode(chainAddresses));
        hashCode = (17 * hashCode) + (dataStart == null ? 0 : System.hashCode(dataStart));
        hashCode = (17 * hashCode) + (dataEnd == null ? 0 : System.hashCode(dataEnd));
        return hashCode;
    }
}

