#
# REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

Query SEC filing metadata

.DESCRIPTION

No description available.

.PARAMETER Cik
Filter by Central Index Key (CIK)

.PARAMETER FormType
Filter by form type(s) (e.g., ""10-K"", ""8-K""). Multiple values can be comma-separated

.PARAMETER FillingDateStart
Filter by filling date start (inclusive), format YYYY-MM-DD

.PARAMETER FillingDateEnd
Filter by filling date end (inclusive), format YYYY-MM-DD

.PARAMETER ReportDateStart
Filter by report date start (inclusive), format YYYY-MM-DD

.PARAMETER ReportDateEnd
Filter by report date end (inclusive), format YYYY-MM-DD

.PARAMETER ItemsContain
Filter filings where the 'Items' field contains the specified text

.PARAMETER PageSize
Number of results per page (default: 50, max: 200)

.PARAMETER PageNumber
Page number to retrieve (default: 1)

.PARAMETER SortBy
Field to sort results by (default: AccessionNumber)

.PARAMETER SortOrder
Sort order (asc or desc, default: desc)

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

DTOFilingMetadataDto[]
#>
function Invoke-V1FilingsGet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int64]]
        ${Cik},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${FormType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${FillingDateStart},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${FillingDateEnd},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${ReportDateStart},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${ReportDateEnd},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${ItemsContain},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageNumber},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${SortBy},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${SortOrder},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-V1FilingsGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/v1/filings'

        if ($Cik) {
            $LocalVarQueryParameters['cik'] = $Cik
        }

        if ($FormType) {
            $LocalVarQueryParameters['form_type'] = $FormType
        }

        if ($FillingDateStart) {
            $LocalVarQueryParameters['filling_date_start'] = $FillingDateStart
        }

        if ($FillingDateEnd) {
            $LocalVarQueryParameters['filling_date_end'] = $FillingDateEnd
        }

        if ($ReportDateStart) {
            $LocalVarQueryParameters['report_date_start'] = $ReportDateStart
        }

        if ($ReportDateEnd) {
            $LocalVarQueryParameters['report_date_end'] = $ReportDateEnd
        }

        if ($ItemsContain) {
            $LocalVarQueryParameters['items_contain'] = $ItemsContain
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($PageNumber) {
            $LocalVarQueryParameters['page_number'] = $PageNumber
        }

        if ($SortBy) {
            $LocalVarQueryParameters['sort_by'] = $SortBy
        }

        if ($SortOrder) {
            $LocalVarQueryParameters['sort_order'] = $SortOrder
        }

        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "DTOFilingMetadataDto[]" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

