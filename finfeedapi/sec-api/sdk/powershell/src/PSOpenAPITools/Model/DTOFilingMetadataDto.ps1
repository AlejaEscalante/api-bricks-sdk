#
# REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the response for a single SEC filing metadata record.  Maps fields from the edgar_submissions table.

.PARAMETER Cik
No description available.
.PARAMETER AccessionNumber
No description available.
.PARAMETER FilingDate
No description available.
.PARAMETER ReportDate
No description available.
.PARAMETER AcceptanceDateTime
No description available.
.PARAMETER Act
No description available.
.PARAMETER Form
No description available.
.PARAMETER FileNumber
No description available.
.PARAMETER FilmNumber
No description available.
.PARAMETER Items
No description available.
.PARAMETER CoreType
No description available.
.PARAMETER Size
No description available.
.PARAMETER IsXbrl
No description available.
.PARAMETER IsInlineXbrl
No description available.
.PARAMETER PrimaryDocument
No description available.
.PARAMETER PrimaryDocDescription
No description available.
.PARAMETER SourceFile
No description available.
.OUTPUTS

DTOFilingMetadataDto<PSCustomObject>
#>

function Initialize-DTOFilingMetadataDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Cik},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccessionNumber},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${FilingDate},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ReportDate},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${AcceptanceDateTime},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Act},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Form},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FileNumber},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FilmNumber},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Items},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CoreType},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Size},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsXbrl},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsInlineXbrl},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PrimaryDocument},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PrimaryDocDescription},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SourceFile}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DTOFilingMetadataDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cik" = ${Cik}
            "accession_number" = ${AccessionNumber}
            "filing_date" = ${FilingDate}
            "report_date" = ${ReportDate}
            "acceptance_date_time" = ${AcceptanceDateTime}
            "act" = ${Act}
            "form" = ${Form}
            "file_number" = ${FileNumber}
            "film_number" = ${FilmNumber}
            "items" = ${Items}
            "core_type" = ${CoreType}
            "size" = ${Size}
            "is_xbrl" = ${IsXbrl}
            "is_inline_xbrl" = ${IsInlineXbrl}
            "primary_document" = ${PrimaryDocument}
            "primary_doc_description" = ${PrimaryDocDescription}
            "source_file" = ${SourceFile}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DTOFilingMetadataDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DTOFilingMetadataDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DTOFilingMetadataDto<PSCustomObject>
#>
function ConvertFrom-JsonToDTOFilingMetadataDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DTOFilingMetadataDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DTOFilingMetadataDto
        $AllProperties = ("cik", "accession_number", "filing_date", "report_date", "acceptance_date_time", "act", "form", "file_number", "film_number", "items", "core_type", "size", "is_xbrl", "is_inline_xbrl", "primary_document", "primary_doc_description", "source_file")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cik"))) { #optional property not found
            $Cik = $null
        } else {
            $Cik = $JsonParameters.PSobject.Properties["cik"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accession_number"))) { #optional property not found
            $AccessionNumber = $null
        } else {
            $AccessionNumber = $JsonParameters.PSobject.Properties["accession_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "filing_date"))) { #optional property not found
            $FilingDate = $null
        } else {
            $FilingDate = $JsonParameters.PSobject.Properties["filing_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "report_date"))) { #optional property not found
            $ReportDate = $null
        } else {
            $ReportDate = $JsonParameters.PSobject.Properties["report_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "acceptance_date_time"))) { #optional property not found
            $AcceptanceDateTime = $null
        } else {
            $AcceptanceDateTime = $JsonParameters.PSobject.Properties["acceptance_date_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "act"))) { #optional property not found
            $Act = $null
        } else {
            $Act = $JsonParameters.PSobject.Properties["act"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "form"))) { #optional property not found
            $Form = $null
        } else {
            $Form = $JsonParameters.PSobject.Properties["form"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "file_number"))) { #optional property not found
            $FileNumber = $null
        } else {
            $FileNumber = $JsonParameters.PSobject.Properties["file_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "film_number"))) { #optional property not found
            $FilmNumber = $null
        } else {
            $FilmNumber = $JsonParameters.PSobject.Properties["film_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "items"))) { #optional property not found
            $Items = $null
        } else {
            $Items = $JsonParameters.PSobject.Properties["items"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "core_type"))) { #optional property not found
            $CoreType = $null
        } else {
            $CoreType = $JsonParameters.PSobject.Properties["core_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "size"))) { #optional property not found
            $Size = $null
        } else {
            $Size = $JsonParameters.PSobject.Properties["size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_xbrl"))) { #optional property not found
            $IsXbrl = $null
        } else {
            $IsXbrl = $JsonParameters.PSobject.Properties["is_xbrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_inline_xbrl"))) { #optional property not found
            $IsInlineXbrl = $null
        } else {
            $IsInlineXbrl = $JsonParameters.PSobject.Properties["is_inline_xbrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "primary_document"))) { #optional property not found
            $PrimaryDocument = $null
        } else {
            $PrimaryDocument = $JsonParameters.PSobject.Properties["primary_document"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "primary_doc_description"))) { #optional property not found
            $PrimaryDocDescription = $null
        } else {
            $PrimaryDocDescription = $JsonParameters.PSobject.Properties["primary_doc_description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "source_file"))) { #optional property not found
            $SourceFile = $null
        } else {
            $SourceFile = $JsonParameters.PSobject.Properties["source_file"].value
        }

        $PSO = [PSCustomObject]@{
            "cik" = ${Cik}
            "accession_number" = ${AccessionNumber}
            "filing_date" = ${FilingDate}
            "report_date" = ${ReportDate}
            "acceptance_date_time" = ${AcceptanceDateTime}
            "act" = ${Act}
            "form" = ${Form}
            "file_number" = ${FileNumber}
            "film_number" = ${FilmNumber}
            "items" = ${Items}
            "core_type" = ${CoreType}
            "size" = ${Size}
            "is_xbrl" = ${IsXbrl}
            "is_inline_xbrl" = ${IsInlineXbrl}
            "primary_document" = ${PrimaryDocument}
            "primary_doc_description" = ${PrimaryDocDescription}
            "source_file" = ${SourceFile}
        }

        return $PSO
    }

}

