/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DTOFilingItemDto model module.
 * @module model/DTOFilingItemDto
 * @version v1
 */
class DTOFilingItemDto {
    /**
     * Constructs a new <code>DTOFilingItemDto</code>.
     * @alias module:model/DTOFilingItemDto
     */
    constructor() { 
        
        DTOFilingItemDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DTOFilingItemDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DTOFilingItemDto} obj Optional instance to populate.
     * @return {module:model/DTOFilingItemDto} The populated <code>DTOFilingItemDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DTOFilingItemDto();

            if (data.hasOwnProperty('item_number')) {
                obj['item_number'] = ApiClient.convertToType(data['item_number'], 'String');
            }
            if (data.hasOwnProperty('item_title')) {
                obj['item_title'] = ApiClient.convertToType(data['item_title'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DTOFilingItemDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DTOFilingItemDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['item_number'] && !(typeof data['item_number'] === 'string' || data['item_number'] instanceof String)) {
            throw new Error("Expected the field `item_number` to be a primitive type in the JSON string but got " + data['item_number']);
        }
        // ensure the json data is a string
        if (data['item_title'] && !(typeof data['item_title'] === 'string' || data['item_title'] instanceof String)) {
            throw new Error("Expected the field `item_title` to be a primitive type in the JSON string but got " + data['item_title']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }

        return true;
    }


}



/**
 * @member {String} item_number
 */
DTOFilingItemDto.prototype['item_number'] = undefined;

/**
 * @member {String} item_title
 */
DTOFilingItemDto.prototype['item_title'] = undefined;

/**
 * @member {String} content
 */
DTOFilingItemDto.prototype['content'] = undefined;






export default DTOFilingItemDto;

