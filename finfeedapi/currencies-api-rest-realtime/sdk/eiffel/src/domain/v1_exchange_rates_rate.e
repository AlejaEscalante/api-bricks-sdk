note
 description:"[
		FX Realtime REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_EXCHANGE_RATES_RATE




feature --Access

    time: detachable DATE_TIME
      -- Gets or sets the time of the exchange rate.
    asset_id_quote: detachable STRING_32
      -- Gets or sets the quote asset ID of the exchange rate.
    rate: REAL_64
      -- Gets or sets the exchange rate value.

feature -- Change Element

    set_time (a_name: like time)
        -- Set 'time' with 'a_name'.
      do
        time := a_name
      ensure
        time_set: time = a_name
      end

    set_asset_id_quote (a_name: like asset_id_quote)
        -- Set 'asset_id_quote' with 'a_name'.
      do
        asset_id_quote := a_name
      ensure
        asset_id_quote_set: asset_id_quote = a_name
      end

    set_rate (a_name: like rate)
        -- Set 'rate' with 'a_name'.
      do
        rate := a_name
      ensure
        rate_set: rate = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_EXCHANGE_RATES_RATE%N")
        if attached time as l_time then
          Result.append ("%Ntime:")
          Result.append (l_time.out)
          Result.append ("%N")
        end
        if attached asset_id_quote as l_asset_id_quote then
          Result.append ("%Nasset_id_quote:")
          Result.append (l_asset_id_quote.out)
          Result.append ("%N")
        end
        if attached rate as l_rate then
          Result.append ("%Nrate:")
          Result.append (l_rate.out)
          Result.append ("%N")
        end
      end
end

