/*
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdminAuctionInformationModel
 */
public class AdminAuctionInformationModelTest {
    private final AdminAuctionInformationModel model = new AdminAuctionInformationModel();

    /**
     * Model tests for AdminAuctionInformationModel
     */
    @Test
    public void testAdminAuctionInformationModel() {
        // TODO: test AdminAuctionInformationModel
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

    /**
     * Test the property 'timestampNanos'
     */
    @Test
    public void timestampNanosTest() {
        // TODO: test timestampNanos
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'auctionType'
     */
    @Test
    public void auctionTypeTest() {
        // TODO: test auctionType
    }

    /**
     * Test the property 'auctionTypeCode'
     */
    @Test
    public void auctionTypeCodeTest() {
        // TODO: test auctionTypeCode
    }

    /**
     * Test the property 'auctionTypeText'
     */
    @Test
    public void auctionTypeTextTest() {
        // TODO: test auctionTypeText
    }

    /**
     * Test the property 'isAuctionTypeOpening'
     */
    @Test
    public void isAuctionTypeOpeningTest() {
        // TODO: test isAuctionTypeOpening
    }

    /**
     * Test the property 'isAuctionTypeClosing'
     */
    @Test
    public void isAuctionTypeClosingTest() {
        // TODO: test isAuctionTypeClosing
    }

    /**
     * Test the property 'isAuctionTypeIpo'
     */
    @Test
    public void isAuctionTypeIpoTest() {
        // TODO: test isAuctionTypeIpo
    }

    /**
     * Test the property 'isAuctionTypeHalt'
     */
    @Test
    public void isAuctionTypeHaltTest() {
        // TODO: test isAuctionTypeHalt
    }

    /**
     * Test the property 'isAuctionTypeVolatility'
     */
    @Test
    public void isAuctionTypeVolatilityTest() {
        // TODO: test isAuctionTypeVolatility
    }

    /**
     * Test the property 'pairedShares'
     */
    @Test
    public void pairedSharesTest() {
        // TODO: test pairedShares
    }

    /**
     * Test the property 'referencePrice'
     */
    @Test
    public void referencePriceTest() {
        // TODO: test referencePrice
    }

    /**
     * Test the property 'indicativeClearingPrice'
     */
    @Test
    public void indicativeClearingPriceTest() {
        // TODO: test indicativeClearingPrice
    }

    /**
     * Test the property 'imbalanceShares'
     */
    @Test
    public void imbalanceSharesTest() {
        // TODO: test imbalanceShares
    }

    /**
     * Test the property 'imbalanceSide'
     */
    @Test
    public void imbalanceSideTest() {
        // TODO: test imbalanceSide
    }

    /**
     * Test the property 'imbalanceSideCode'
     */
    @Test
    public void imbalanceSideCodeTest() {
        // TODO: test imbalanceSideCode
    }

    /**
     * Test the property 'imbalanceSideText'
     */
    @Test
    public void imbalanceSideTextTest() {
        // TODO: test imbalanceSideText
    }

    /**
     * Test the property 'isImbalanceSideBuy'
     */
    @Test
    public void isImbalanceSideBuyTest() {
        // TODO: test isImbalanceSideBuy
    }

    /**
     * Test the property 'isImbalanceSideSell'
     */
    @Test
    public void isImbalanceSideSellTest() {
        // TODO: test isImbalanceSideSell
    }

    /**
     * Test the property 'isImbalanceSideNone'
     */
    @Test
    public void isImbalanceSideNoneTest() {
        // TODO: test isImbalanceSideNone
    }

    /**
     * Test the property 'extensionNumber'
     */
    @Test
    public void extensionNumberTest() {
        // TODO: test extensionNumber
    }

    /**
     * Test the property 'scheduledAuctionTimeSeconds'
     */
    @Test
    public void scheduledAuctionTimeSecondsTest() {
        // TODO: test scheduledAuctionTimeSeconds
    }

    /**
     * Test the property 'scheduledAuctionTime'
     */
    @Test
    public void scheduledAuctionTimeTest() {
        // TODO: test scheduledAuctionTime
    }

    /**
     * Test the property 'auctionBookClearingPrice'
     */
    @Test
    public void auctionBookClearingPriceTest() {
        // TODO: test auctionBookClearingPrice
    }

    /**
     * Test the property 'collarReferencePrice'
     */
    @Test
    public void collarReferencePriceTest() {
        // TODO: test collarReferencePrice
    }

    /**
     * Test the property 'lowerAuctionCollar'
     */
    @Test
    public void lowerAuctionCollarTest() {
        // TODO: test lowerAuctionCollar
    }

    /**
     * Test the property 'upperAuctionCollar'
     */
    @Test
    public void upperAuctionCollarTest() {
        // TODO: test upperAuctionCollar
    }

}
