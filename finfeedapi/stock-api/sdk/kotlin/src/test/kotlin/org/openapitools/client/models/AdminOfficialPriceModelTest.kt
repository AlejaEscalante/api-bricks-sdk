/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.AdminOfficialPriceModel

class AdminOfficialPriceModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdminOfficialPriceModel
        //val modelInstance = AdminOfficialPriceModel()

        // to test the property `symbol` - The stock symbol
        should("test symbol") {
            // uncomment below to test the property
            //modelInstance.symbol shouldBe ("TODO")
        }

        // to test the property `timestampNanos` - Original timestamp in nanoseconds since epoch
        should("test timestampNanos") {
            // uncomment below to test the property
            //modelInstance.timestampNanos shouldBe ("TODO")
        }

        // to test the property `timestamp` - Time when the official price was recorded as DateTime
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `priceType` - Type of price as byte value
        should("test priceType") {
            // uncomment below to test the property
            //modelInstance.priceType shouldBe ("TODO")
        }

        // to test the property `priceTypeCode` - Type of price as character string
        should("test priceTypeCode") {
            // uncomment below to test the property
            //modelInstance.priceTypeCode shouldBe ("TODO")
        }

        // to test the property `priceTypeText` - Human-readable description of the price type
        should("test priceTypeText") {
            // uncomment below to test the property
            //modelInstance.priceTypeText shouldBe ("TODO")
        }

        // to test the property `isPriceTypeOpening` - Indicates if the price type is 'IEX Official Opening Price' ('Q'/0x51).
        should("test isPriceTypeOpening") {
            // uncomment below to test the property
            //modelInstance.isPriceTypeOpening shouldBe ("TODO")
        }

        // to test the property `isPriceTypeClosing` - Indicates if the price type is 'IEX Official Closing Price' ('M'/0x4d).
        should("test isPriceTypeClosing") {
            // uncomment below to test the property
            //modelInstance.isPriceTypeClosing shouldBe ("TODO")
        }

        // to test the property `officialPrice` - Official price as decimal
        should("test officialPrice") {
            // uncomment below to test the property
            //modelInstance.officialPrice shouldBe ("TODO")
        }

    }
}
