/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.Level2PriceLevelUpdateModel

class Level2PriceLevelUpdateModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Level2PriceLevelUpdateModel
        //val modelInstance = Level2PriceLevelUpdateModel()

        // to test the property `symbol` - The stock symbol
        should("test symbol") {
            // uncomment below to test the property
            //modelInstance.symbol shouldBe ("TODO")
        }

        // to test the property `timestampNanos` - Original timestamp in nanoseconds since epoch
        should("test timestampNanos") {
            // uncomment below to test the property
            //modelInstance.timestampNanos shouldBe ("TODO")
        }

        // to test the property `timestamp` - Time when the price level update was recorded as DateTime
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `isSideBuy` - Indicates if this is a price level update for the Buy Side.
        should("test isSideBuy") {
            // uncomment below to test the property
            //modelInstance.isSideBuy shouldBe ("TODO")
        }

        // to test the property `isEventProcessingComplete` - Indicates if event processing is complete.
        should("test isEventProcessingComplete") {
            // uncomment below to test the property
            //modelInstance.isEventProcessingComplete shouldBe ("TODO")
        }

        // to test the property `propertySize` - Aggregate quoted size at the price level
        should("test propertySize") {
            // uncomment below to test the property
            //modelInstance.propertySize shouldBe ("TODO")
        }

        // to test the property `price` - Price level as decimal
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

    }
}
