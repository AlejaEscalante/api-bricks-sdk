/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.NativeIEXApi
import org.openapitools.client.models.AdminAdminMessageModel
import org.openapitools.client.models.AdminSystemEventModel
import org.openapitools.client.models.Level1QuoteUpdateModel
import org.openapitools.client.models.Level2PriceLevelUpdateModel
import org.openapitools.client.models.Level3OrderBookModel
import org.openapitools.client.models.TradeTradeModel

class NativeIEXApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of NativeIEXApi
        //val apiInstance = NativeIEXApi()

        // to test v1NativeIexAdminMessagesSymbolGet
        should("test v1NativeIexAdminMessagesSymbolGet") {
            // uncomment below to test v1NativeIexAdminMessagesSymbolGet
            //val symbol : kotlin.String = symbol_example // kotlin.String | The symbol identifier
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Optional date in format YYYY-MM-DD (defaults to latest available data)
            //val result : kotlin.collections.List<AdminAdminMessageModel> = apiInstance.v1NativeIexAdminMessagesSymbolGet(symbol, date)
            //result shouldBe ("TODO")
        }

        // to test v1NativeIexAdminSystemEventGet
        should("test v1NativeIexAdminSystemEventGet") {
            // uncomment below to test v1NativeIexAdminSystemEventGet
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Date in format YYYY-MM-DD
            //val result : kotlin.collections.List<AdminSystemEventModel> = apiInstance.v1NativeIexAdminSystemEventGet(date)
            //result shouldBe ("TODO")
        }

        // to test v1NativeIexLevel1QuoteSymbolGet
        should("test v1NativeIexLevel1QuoteSymbolGet") {
            // uncomment below to test v1NativeIexLevel1QuoteSymbolGet
            //val symbol : kotlin.String = symbol_example // kotlin.String | The symbol identifier
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Optional date in format YYYY-MM-DD (defaults to latest available data)
            //val result : kotlin.collections.List<Level1QuoteUpdateModel> = apiInstance.v1NativeIexLevel1QuoteSymbolGet(symbol, date)
            //result shouldBe ("TODO")
        }

        // to test v1NativeIexLevel2PriceLevelUpdateSymbolGet
        should("test v1NativeIexLevel2PriceLevelUpdateSymbolGet") {
            // uncomment below to test v1NativeIexLevel2PriceLevelUpdateSymbolGet
            //val symbol : kotlin.String = symbol_example // kotlin.String | The symbol identifier
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Optional date in format YYYY-MM-DD (defaults to latest available data)
            //val result : kotlin.collections.List<Level2PriceLevelUpdateModel> = apiInstance.v1NativeIexLevel2PriceLevelUpdateSymbolGet(symbol, date)
            //result shouldBe ("TODO")
        }

        // to test v1NativeIexLevel3OrderBookSymbolGet
        should("test v1NativeIexLevel3OrderBookSymbolGet") {
            // uncomment below to test v1NativeIexLevel3OrderBookSymbolGet
            //val symbol : kotlin.String = symbol_example // kotlin.String | The symbol identifier
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Optional date in format YYYY-MM-DD (defaults to latest available data)
            //val result : kotlin.collections.List<Level3OrderBookModel> = apiInstance.v1NativeIexLevel3OrderBookSymbolGet(symbol, date)
            //result shouldBe ("TODO")
        }

        // to test v1NativeIexTradeSymbolGet
        should("test v1NativeIexTradeSymbolGet") {
            // uncomment below to test v1NativeIexTradeSymbolGet
            //val symbol : kotlin.String = symbol_example // kotlin.String | The symbol identifier
            //val date : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Optional date in format YYYY-MM-DD (defaults to latest available data)
            //val result : kotlin.collections.List<TradeTradeModel> = apiInstance.v1NativeIexTradeSymbolGet(symbol, date)
            //result shouldBe ("TODO")
        }

    }
}
