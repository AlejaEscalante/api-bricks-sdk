/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.AdminSecurityEventModel

class AdminSecurityEventModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdminSecurityEventModel
        //val modelInstance = AdminSecurityEventModel()

        // to test the property `symbol` - The stock symbol
        should("test symbol") {
            // uncomment below to test the property
            //modelInstance.symbol shouldBe ("TODO")
        }

        // to test the property `timestampNanos` - Original timestamp in nanoseconds since epoch
        should("test timestampNanos") {
            // uncomment below to test the property
            //modelInstance.timestampNanos shouldBe ("TODO")
        }

        // to test the property `timestamp` - Time when the security event was recorded as DateTime
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `securityEvent` - Security event as byte value
        should("test securityEvent") {
            // uncomment below to test the property
            //modelInstance.securityEvent shouldBe ("TODO")
        }

        // to test the property `securityEventCode` - Security event as character string ('O' or 'C')
        should("test securityEventCode") {
            // uncomment below to test the property
            //modelInstance.securityEventCode shouldBe ("TODO")
        }

        // to test the property `securityEventText` - Human-readable description of the security event
        should("test securityEventText") {
            // uncomment below to test the property
            //modelInstance.securityEventText shouldBe ("TODO")
        }

        // to test the property `isOpeningProcessComplete` - Indicates if the security event is 'Opening Process Complete' ('O'/0x4f).
        should("test isOpeningProcessComplete") {
            // uncomment below to test the property
            //modelInstance.isOpeningProcessComplete shouldBe ("TODO")
        }

        // to test the property `isClosingProcessComplete` - Indicates if the security event is 'Closing Process Complete' ('C'/0x43).
        should("test isClosingProcessComplete") {
            // uncomment below to test the property
            //modelInstance.isClosingProcessComplete shouldBe ("TODO")
        }

    }
}
