/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.AdminRetailLiquidityIndicatorModel

class AdminRetailLiquidityIndicatorModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdminRetailLiquidityIndicatorModel
        //val modelInstance = AdminRetailLiquidityIndicatorModel()

        // to test the property `symbol` - The stock symbol
        should("test symbol") {
            // uncomment below to test the property
            //modelInstance.symbol shouldBe ("TODO")
        }

        // to test the property `timestampNanos` - Original timestamp in nanoseconds since epoch
        should("test timestampNanos") {
            // uncomment below to test the property
            //modelInstance.timestampNanos shouldBe ("TODO")
        }

        // to test the property `timestamp` - Time when the retail liquidity indicator was recorded as DateTime
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `retailLiquidityIndicator` - Retail liquidity indicator as byte value
        should("test retailLiquidityIndicator") {
            // uncomment below to test the property
            //modelInstance.retailLiquidityIndicator shouldBe ("TODO")
        }

        // to test the property `retailLiquidityIndicatorCode` - Retail liquidity indicator as character string
        should("test retailLiquidityIndicatorCode") {
            // uncomment below to test the property
            //modelInstance.retailLiquidityIndicatorCode shouldBe ("TODO")
        }

        // to test the property `retailLiquidityIndicatorText` - Human-readable description of the retail liquidity indicator
        should("test retailLiquidityIndicatorText") {
            // uncomment below to test the property
            //modelInstance.retailLiquidityIndicatorText shouldBe ("TODO")
        }

        // to test the property `isRetailIndicatorNotApplicable` - Indicates if the indicator is 'Not Applicable' (' '/0x20).
        should("test isRetailIndicatorNotApplicable") {
            // uncomment below to test the property
            //modelInstance.isRetailIndicatorNotApplicable shouldBe ("TODO")
        }

        // to test the property `isRetailIndicatorBuyInterest` - Indicates if there is 'Buy interest for Retail' ('A'/0x41).
        should("test isRetailIndicatorBuyInterest") {
            // uncomment below to test the property
            //modelInstance.isRetailIndicatorBuyInterest shouldBe ("TODO")
        }

        // to test the property `isRetailIndicatorSellInterest` - Indicates if there is 'Sell interest for Retail' ('B'/0x42).
        should("test isRetailIndicatorSellInterest") {
            // uncomment below to test the property
            //modelInstance.isRetailIndicatorSellInterest shouldBe ("TODO")
        }

        // to test the property `isRetailIndicatorBuyAndSellInterest` - Indicates if there is 'Buy and sell interest for Retail' ('C'/0x43).
        should("test isRetailIndicatorBuyAndSellInterest") {
            // uncomment below to test the property
            //modelInstance.isRetailIndicatorBuyAndSellInterest shouldBe ("TODO")
        }

    }
}
