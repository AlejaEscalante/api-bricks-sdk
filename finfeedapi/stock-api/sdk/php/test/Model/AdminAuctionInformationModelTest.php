<?php
/**
 * AdminAuctionInformationModelTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * AdminAuctionInformationModelTest Class Doc Comment
 *
 * @category    Class
 * @description Represents the response DTO for auction information
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class AdminAuctionInformationModelTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "AdminAuctionInformationModel"
     */
    public function testAdminAuctionInformationModel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "symbol"
     */
    public function testPropertySymbol()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timestamp_nanos"
     */
    public function testPropertyTimestampNanos()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auction_type"
     */
    public function testPropertyAuctionType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auction_type_code"
     */
    public function testPropertyAuctionTypeCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auction_type_text"
     */
    public function testPropertyAuctionTypeText()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auction_type_opening"
     */
    public function testPropertyIsAuctionTypeOpening()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auction_type_closing"
     */
    public function testPropertyIsAuctionTypeClosing()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auction_type_ipo"
     */
    public function testPropertyIsAuctionTypeIpo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auction_type_halt"
     */
    public function testPropertyIsAuctionTypeHalt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auction_type_volatility"
     */
    public function testPropertyIsAuctionTypeVolatility()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paired_shares"
     */
    public function testPropertyPairedShares()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_price"
     */
    public function testPropertyReferencePrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "indicative_clearing_price"
     */
    public function testPropertyIndicativeClearingPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "imbalance_shares"
     */
    public function testPropertyImbalanceShares()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "imbalance_side"
     */
    public function testPropertyImbalanceSide()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "imbalance_side_code"
     */
    public function testPropertyImbalanceSideCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "imbalance_side_text"
     */
    public function testPropertyImbalanceSideText()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_imbalance_side_buy"
     */
    public function testPropertyIsImbalanceSideBuy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_imbalance_side_sell"
     */
    public function testPropertyIsImbalanceSideSell()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_imbalance_side_none"
     */
    public function testPropertyIsImbalanceSideNone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extension_number"
     */
    public function testPropertyExtensionNumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scheduled_auction_time_seconds"
     */
    public function testPropertyScheduledAuctionTimeSeconds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scheduled_auction_time"
     */
    public function testPropertyScheduledAuctionTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auction_book_clearing_price"
     */
    public function testPropertyAuctionBookClearingPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "collar_reference_price"
     */
    public function testPropertyCollarReferencePrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lower_auction_collar"
     */
    public function testPropertyLowerAuctionCollar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "upper_auction_collar"
     */
    public function testPropertyUpperAuctionCollar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
