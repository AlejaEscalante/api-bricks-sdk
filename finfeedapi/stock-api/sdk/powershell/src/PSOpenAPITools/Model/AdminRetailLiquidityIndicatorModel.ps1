#
# REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the response DTO for retail liquidity indicator information

.PARAMETER Symbol
The stock symbol
.PARAMETER TimestampNanos
Original timestamp in nanoseconds since epoch
.PARAMETER Timestamp
Time when the retail liquidity indicator was recorded as DateTime
.PARAMETER RetailLiquidityIndicator
Retail liquidity indicator as byte value
.PARAMETER RetailLiquidityIndicatorCode
Retail liquidity indicator as character string
.PARAMETER RetailLiquidityIndicatorText
Human-readable description of the retail liquidity indicator
.PARAMETER IsRetailIndicatorNotApplicable
Indicates if the indicator is 'Not Applicable' (' '/0x20).
.PARAMETER IsRetailIndicatorBuyInterest
Indicates if there is 'Buy interest for Retail' ('A'/0x41).
.PARAMETER IsRetailIndicatorSellInterest
Indicates if there is 'Sell interest for Retail' ('B'/0x42).
.PARAMETER IsRetailIndicatorBuyAndSellInterest
Indicates if there is 'Buy and sell interest for Retail' ('C'/0x43).
.OUTPUTS

AdminRetailLiquidityIndicatorModel<PSCustomObject>
#>

function Initialize-AdminRetailLiquidityIndicatorModel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Symbol},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TimestampNanos},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${RetailLiquidityIndicator},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RetailLiquidityIndicatorCode},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RetailLiquidityIndicatorText},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsRetailIndicatorNotApplicable},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsRetailIndicatorBuyInterest},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsRetailIndicatorSellInterest},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsRetailIndicatorBuyAndSellInterest}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdminRetailLiquidityIndicatorModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "symbol" = ${Symbol}
            "timestamp_nanos" = ${TimestampNanos}
            "timestamp" = ${Timestamp}
            "retail_liquidity_indicator" = ${RetailLiquidityIndicator}
            "retail_liquidity_indicator_code" = ${RetailLiquidityIndicatorCode}
            "retail_liquidity_indicator_text" = ${RetailLiquidityIndicatorText}
            "is_retail_indicator_not_applicable" = ${IsRetailIndicatorNotApplicable}
            "is_retail_indicator_buy_interest" = ${IsRetailIndicatorBuyInterest}
            "is_retail_indicator_sell_interest" = ${IsRetailIndicatorSellInterest}
            "is_retail_indicator_buy_and_sell_interest" = ${IsRetailIndicatorBuyAndSellInterest}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdminRetailLiquidityIndicatorModel<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdminRetailLiquidityIndicatorModel<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdminRetailLiquidityIndicatorModel<PSCustomObject>
#>
function ConvertFrom-JsonToAdminRetailLiquidityIndicatorModel {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdminRetailLiquidityIndicatorModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdminRetailLiquidityIndicatorModel
        $AllProperties = ("symbol", "timestamp_nanos", "timestamp", "retail_liquidity_indicator", "retail_liquidity_indicator_code", "retail_liquidity_indicator_text", "is_retail_indicator_not_applicable", "is_retail_indicator_buy_interest", "is_retail_indicator_sell_interest", "is_retail_indicator_buy_and_sell_interest")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "symbol"))) { #optional property not found
            $Symbol = $null
        } else {
            $Symbol = $JsonParameters.PSobject.Properties["symbol"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp_nanos"))) { #optional property not found
            $TimestampNanos = $null
        } else {
            $TimestampNanos = $JsonParameters.PSobject.Properties["timestamp_nanos"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "retail_liquidity_indicator"))) { #optional property not found
            $RetailLiquidityIndicator = $null
        } else {
            $RetailLiquidityIndicator = $JsonParameters.PSobject.Properties["retail_liquidity_indicator"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "retail_liquidity_indicator_code"))) { #optional property not found
            $RetailLiquidityIndicatorCode = $null
        } else {
            $RetailLiquidityIndicatorCode = $JsonParameters.PSobject.Properties["retail_liquidity_indicator_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "retail_liquidity_indicator_text"))) { #optional property not found
            $RetailLiquidityIndicatorText = $null
        } else {
            $RetailLiquidityIndicatorText = $JsonParameters.PSobject.Properties["retail_liquidity_indicator_text"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_retail_indicator_not_applicable"))) { #optional property not found
            $IsRetailIndicatorNotApplicable = $null
        } else {
            $IsRetailIndicatorNotApplicable = $JsonParameters.PSobject.Properties["is_retail_indicator_not_applicable"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_retail_indicator_buy_interest"))) { #optional property not found
            $IsRetailIndicatorBuyInterest = $null
        } else {
            $IsRetailIndicatorBuyInterest = $JsonParameters.PSobject.Properties["is_retail_indicator_buy_interest"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_retail_indicator_sell_interest"))) { #optional property not found
            $IsRetailIndicatorSellInterest = $null
        } else {
            $IsRetailIndicatorSellInterest = $JsonParameters.PSobject.Properties["is_retail_indicator_sell_interest"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_retail_indicator_buy_and_sell_interest"))) { #optional property not found
            $IsRetailIndicatorBuyAndSellInterest = $null
        } else {
            $IsRetailIndicatorBuyAndSellInterest = $JsonParameters.PSobject.Properties["is_retail_indicator_buy_and_sell_interest"].value
        }

        $PSO = [PSCustomObject]@{
            "symbol" = ${Symbol}
            "timestamp_nanos" = ${TimestampNanos}
            "timestamp" = ${Timestamp}
            "retail_liquidity_indicator" = ${RetailLiquidityIndicator}
            "retail_liquidity_indicator_code" = ${RetailLiquidityIndicatorCode}
            "retail_liquidity_indicator_text" = ${RetailLiquidityIndicatorText}
            "is_retail_indicator_not_applicable" = ${IsRetailIndicatorNotApplicable}
            "is_retail_indicator_buy_interest" = ${IsRetailIndicatorBuyInterest}
            "is_retail_indicator_sell_interest" = ${IsRetailIndicatorSellInterest}
            "is_retail_indicator_buy_and_sell_interest" = ${IsRetailIndicatorBuyAndSellInterest}
        }

        return $PSO
    }

}

