{-
   FinFeedAPI Stock REST API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.4
   FinFeedAPI Stock REST API API version: v1
   Contact: support@apibricks.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : FinFeedAPIStockREST.API.Metadata
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module FinFeedAPIStockREST.API.Metadata where

import FinFeedAPIStockREST.Core
import FinFeedAPIStockREST.MimeTypes
import FinFeedAPIStockREST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Metadata

-- *** v1ExchangesGet

-- | @GET \/v1\/exchanges@
-- 
-- List of exchanges
-- 
-- AuthMethod: 'AuthApiKeyAPIKey', 'AuthBasicJWT'
-- 
v1ExchangesGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> FinFeedAPIStockRESTRequest V1ExchangesGet MimeNoContent [FinFeedAPIExchangeModel] accept
v1ExchangesGet  _ =
  _mkRequest "GET" ["/v1/exchanges"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyAPIKey)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicJWT)

data V1ExchangesGet  
-- | @application/json@
instance Produces V1ExchangesGet MimeJSON
-- | @text/json@
instance Produces V1ExchangesGet MimeTextJson
-- | @text/plain@
instance Produces V1ExchangesGet MimePlainText


-- *** v1SymbolsExchangeIdGet

-- | @GET \/v1\/symbols\/{exchange_id}@
-- 
-- List of symbols for the exchange
-- 
-- AuthMethod: 'AuthApiKeyAPIKey', 'AuthBasicJWT'
-- 
v1SymbolsExchangeIdGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> ExchangeId -- ^ "exchangeId"
  -> FinFeedAPIStockRESTRequest V1SymbolsExchangeIdGet MimeNoContent [FinFeedAPISymbolModel] accept
v1SymbolsExchangeIdGet  _ (ExchangeId exchangeId) =
  _mkRequest "GET" ["/v1/symbols/",toPath exchangeId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyAPIKey)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicJWT)

data V1SymbolsExchangeIdGet  
-- | @application/json@
instance Produces V1SymbolsExchangeIdGet MimeJSON
-- | @text/json@
instance Produces V1SymbolsExchangeIdGet MimeTextJson
-- | @text/plain@
instance Produces V1SymbolsExchangeIdGet MimePlainText

