// <auto-generated>
/*
 * REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using OpenAPIClientUtils = APIBricks.FinFeedAPI.STOCKAPI.REST.V1.Client.ClientUtils;
using APIBricks.FinFeedAPI.STOCKAPI.REST.V1.Client;

namespace APIBricks.FinFeedAPI.STOCKAPI.REST.V1.Model
{
    /// <summary>
    /// Represents the response DTO for Level-3 order book information
    /// </summary>
    public partial class Level3OrderBookModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Level3OrderBookModel" /> class.
        /// </summary>
        /// <param name="addOrder">addOrder</param>
        /// <param name="deleteOrder">deleteOrder</param>
        /// <param name="modifyOrder">modifyOrder</param>
        /// <param name="executedOrder">executedOrder</param>
        /// <param name="clearBook">clearBook</param>
        [JsonConstructor]
        public Level3OrderBookModel(Option<Level3AddOrderModel?> addOrder = default, Option<Level3DeleteOrderModel?> deleteOrder = default, Option<Level3ModifyOrderModel?> modifyOrder = default, Option<Level3ExecutedOrderModel?> executedOrder = default, Option<Level3ClearBookModel?> clearBook = default)
        {
            AddOrderOption = addOrder;
            DeleteOrderOption = deleteOrder;
            ModifyOrderOption = modifyOrder;
            ExecutedOrderOption = executedOrder;
            ClearBookOption = clearBook;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of AddOrder
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Level3AddOrderModel?> AddOrderOption { get; private set; }

        /// <summary>
        /// Gets or Sets AddOrder
        /// </summary>
        [JsonPropertyName("add_order")]
        public Level3AddOrderModel? AddOrder { get { return this.AddOrderOption; } set { this.AddOrderOption = new(value); } }

        /// <summary>
        /// Used to track the state of DeleteOrder
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Level3DeleteOrderModel?> DeleteOrderOption { get; private set; }

        /// <summary>
        /// Gets or Sets DeleteOrder
        /// </summary>
        [JsonPropertyName("delete_order")]
        public Level3DeleteOrderModel? DeleteOrder { get { return this.DeleteOrderOption; } set { this.DeleteOrderOption = new(value); } }

        /// <summary>
        /// Used to track the state of ModifyOrder
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Level3ModifyOrderModel?> ModifyOrderOption { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyOrder
        /// </summary>
        [JsonPropertyName("modify_order")]
        public Level3ModifyOrderModel? ModifyOrder { get { return this.ModifyOrderOption; } set { this.ModifyOrderOption = new(value); } }

        /// <summary>
        /// Used to track the state of ExecutedOrder
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Level3ExecutedOrderModel?> ExecutedOrderOption { get; private set; }

        /// <summary>
        /// Gets or Sets ExecutedOrder
        /// </summary>
        [JsonPropertyName("executed_order")]
        public Level3ExecutedOrderModel? ExecutedOrder { get { return this.ExecutedOrderOption; } set { this.ExecutedOrderOption = new(value); } }

        /// <summary>
        /// Used to track the state of ClearBook
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Level3ClearBookModel?> ClearBookOption { get; private set; }

        /// <summary>
        /// Gets or Sets ClearBook
        /// </summary>
        [JsonPropertyName("clear_book")]
        public Level3ClearBookModel? ClearBook { get { return this.ClearBookOption; } set { this.ClearBookOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Level3OrderBookModel {\n");
            sb.Append("  AddOrder: ").Append(AddOrder).Append("\n");
            sb.Append("  DeleteOrder: ").Append(DeleteOrder).Append("\n");
            sb.Append("  ModifyOrder: ").Append(ModifyOrder).Append("\n");
            sb.Append("  ExecutedOrder: ").Append(ExecutedOrder).Append("\n");
            sb.Append("  ClearBook: ").Append(ClearBook).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="Level3OrderBookModel" />
    /// </summary>
    public class Level3OrderBookModelJsonConverter : JsonConverter<Level3OrderBookModel>
    {
        /// <summary>
        /// Deserializes json to <see cref="Level3OrderBookModel" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override Level3OrderBookModel Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<Level3AddOrderModel?> addOrder = default;
            Option<Level3DeleteOrderModel?> deleteOrder = default;
            Option<Level3ModifyOrderModel?> modifyOrder = default;
            Option<Level3ExecutedOrderModel?> executedOrder = default;
            Option<Level3ClearBookModel?> clearBook = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "add_order":
                            addOrder = new Option<Level3AddOrderModel?>(JsonSerializer.Deserialize<Level3AddOrderModel>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "delete_order":
                            deleteOrder = new Option<Level3DeleteOrderModel?>(JsonSerializer.Deserialize<Level3DeleteOrderModel>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "modify_order":
                            modifyOrder = new Option<Level3ModifyOrderModel?>(JsonSerializer.Deserialize<Level3ModifyOrderModel>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "executed_order":
                            executedOrder = new Option<Level3ExecutedOrderModel?>(JsonSerializer.Deserialize<Level3ExecutedOrderModel>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "clear_book":
                            clearBook = new Option<Level3ClearBookModel?>(JsonSerializer.Deserialize<Level3ClearBookModel>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (addOrder.IsSet && addOrder.Value == null)
                throw new ArgumentNullException(nameof(addOrder), "Property is not nullable for class Level3OrderBookModel.");

            if (deleteOrder.IsSet && deleteOrder.Value == null)
                throw new ArgumentNullException(nameof(deleteOrder), "Property is not nullable for class Level3OrderBookModel.");

            if (modifyOrder.IsSet && modifyOrder.Value == null)
                throw new ArgumentNullException(nameof(modifyOrder), "Property is not nullable for class Level3OrderBookModel.");

            if (executedOrder.IsSet && executedOrder.Value == null)
                throw new ArgumentNullException(nameof(executedOrder), "Property is not nullable for class Level3OrderBookModel.");

            if (clearBook.IsSet && clearBook.Value == null)
                throw new ArgumentNullException(nameof(clearBook), "Property is not nullable for class Level3OrderBookModel.");

            return new Level3OrderBookModel(addOrder, deleteOrder, modifyOrder, executedOrder, clearBook);
        }

        /// <summary>
        /// Serializes a <see cref="Level3OrderBookModel" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="level3OrderBookModel"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, Level3OrderBookModel level3OrderBookModel, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, level3OrderBookModel, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="Level3OrderBookModel" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="level3OrderBookModel"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, Level3OrderBookModel level3OrderBookModel, JsonSerializerOptions jsonSerializerOptions)
        {
            if (level3OrderBookModel.AddOrderOption.IsSet && level3OrderBookModel.AddOrder == null)
                throw new ArgumentNullException(nameof(level3OrderBookModel.AddOrder), "Property is required for class Level3OrderBookModel.");

            if (level3OrderBookModel.DeleteOrderOption.IsSet && level3OrderBookModel.DeleteOrder == null)
                throw new ArgumentNullException(nameof(level3OrderBookModel.DeleteOrder), "Property is required for class Level3OrderBookModel.");

            if (level3OrderBookModel.ModifyOrderOption.IsSet && level3OrderBookModel.ModifyOrder == null)
                throw new ArgumentNullException(nameof(level3OrderBookModel.ModifyOrder), "Property is required for class Level3OrderBookModel.");

            if (level3OrderBookModel.ExecutedOrderOption.IsSet && level3OrderBookModel.ExecutedOrder == null)
                throw new ArgumentNullException(nameof(level3OrderBookModel.ExecutedOrder), "Property is required for class Level3OrderBookModel.");

            if (level3OrderBookModel.ClearBookOption.IsSet && level3OrderBookModel.ClearBook == null)
                throw new ArgumentNullException(nameof(level3OrderBookModel.ClearBook), "Property is required for class Level3OrderBookModel.");

            if (level3OrderBookModel.AddOrderOption.IsSet)
            {
                writer.WritePropertyName("add_order");
                JsonSerializer.Serialize(writer, level3OrderBookModel.AddOrder, jsonSerializerOptions);
            }
            if (level3OrderBookModel.DeleteOrderOption.IsSet)
            {
                writer.WritePropertyName("delete_order");
                JsonSerializer.Serialize(writer, level3OrderBookModel.DeleteOrder, jsonSerializerOptions);
            }
            if (level3OrderBookModel.ModifyOrderOption.IsSet)
            {
                writer.WritePropertyName("modify_order");
                JsonSerializer.Serialize(writer, level3OrderBookModel.ModifyOrder, jsonSerializerOptions);
            }
            if (level3OrderBookModel.ExecutedOrderOption.IsSet)
            {
                writer.WritePropertyName("executed_order");
                JsonSerializer.Serialize(writer, level3OrderBookModel.ExecutedOrder, jsonSerializerOptions);
            }
            if (level3OrderBookModel.ClearBookOption.IsSet)
            {
                writer.WritePropertyName("clear_book");
                JsonSerializer.Serialize(writer, level3OrderBookModel.ClearBook, jsonSerializerOptions);
            }
        }
    }
}
