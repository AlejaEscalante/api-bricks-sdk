/*
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response DTO for operational halt status information
 */
public class OASAdminOperationalHaltStatusModel implements OAS.MappedProperties {
    /**
     * The stock symbol
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * Original timestamp in nanoseconds since epoch
     * @return timestampNanos
     */
    public Long timestampNanos { get; set; }

    /**
     * Time when the operational halt status was recorded as DateTime
     * @return timestamp
     */
    public Datetime timestamp { get; set; }

    /**
     * Operational halt status as byte value
     * @return operationalHaltStatus
     */
    public Integer operationalHaltStatus { get; set; }

    /**
     * Operational halt status as character string
     * @return operationalHaltStatusCode
     */
    public String operationalHaltStatusCode { get; set; }

    /**
     * Human-readable description of the operational halt status
     * @return operationalHaltStatusText
     */
    public String operationalHaltStatusText { get; set; }

    /**
     * Indicates if the status is \'IEX specific operational trading halt\' (\'O\'/0x4f).
     * @return isOperationallyHalted
     */
    public Boolean isOperationallyHalted { get; set; }

    /**
     * Indicates if the status is \'Not operationally halted on IEX\' (\'N\'/0x4e).
     * @return isNotOperationallyHalted
     */
    public Boolean isNotOperationallyHalted { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'operational_halt_status' => 'operationalHaltStatus',
        'operational_halt_status_code' => 'operationalHaltStatusCode',
        'operational_halt_status_text' => 'operationalHaltStatusText',
        'is_operationally_halted' => 'isOperationallyHalted',
        'is_not_operationally_halted' => 'isNotOperationallyHalted'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASAdminOperationalHaltStatusModel getExample() {
        OASAdminOperationalHaltStatusModel adminOperationalHaltStatusModel = new OASAdminOperationalHaltStatusModel();
          adminOperationalHaltStatusModel.symbol = '';
          adminOperationalHaltStatusModel.timestampNanos = 123456789L;
          adminOperationalHaltStatusModel.timestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          adminOperationalHaltStatusModel.operationalHaltStatus = 0;
          adminOperationalHaltStatusModel.operationalHaltStatusCode = '';
          adminOperationalHaltStatusModel.operationalHaltStatusText = '';
          adminOperationalHaltStatusModel.isOperationallyHalted = true;
          adminOperationalHaltStatusModel.isNotOperationallyHalted = true;
        return adminOperationalHaltStatusModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAdminOperationalHaltStatusModel) {           
            OASAdminOperationalHaltStatusModel adminOperationalHaltStatusModel = (OASAdminOperationalHaltStatusModel) obj;
            return this.symbol == adminOperationalHaltStatusModel.symbol
                && this.timestampNanos == adminOperationalHaltStatusModel.timestampNanos
                && this.timestamp == adminOperationalHaltStatusModel.timestamp
                && this.operationalHaltStatus == adminOperationalHaltStatusModel.operationalHaltStatus
                && this.operationalHaltStatusCode == adminOperationalHaltStatusModel.operationalHaltStatusCode
                && this.operationalHaltStatusText == adminOperationalHaltStatusModel.operationalHaltStatusText
                && this.isOperationallyHalted == adminOperationalHaltStatusModel.isOperationallyHalted
                && this.isNotOperationallyHalted == adminOperationalHaltStatusModel.isNotOperationallyHalted;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (timestampNanos == null ? 0 : System.hashCode(timestampNanos));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (operationalHaltStatus == null ? 0 : System.hashCode(operationalHaltStatus));
        hashCode = (17 * hashCode) + (operationalHaltStatusCode == null ? 0 : System.hashCode(operationalHaltStatusCode));
        hashCode = (17 * hashCode) + (operationalHaltStatusText == null ? 0 : System.hashCode(operationalHaltStatusText));
        hashCode = (17 * hashCode) + (isOperationallyHalted == null ? 0 : System.hashCode(isOperationallyHalted));
        hashCode = (17 * hashCode) + (isNotOperationallyHalted == null ? 0 : System.hashCode(isNotOperationallyHalted));
        return hashCode;
    }
}

