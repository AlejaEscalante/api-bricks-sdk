/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response DTO for clear book information
 */
public class OASLevel3ClearBookModel implements OAS.MappedProperties {
    /**
     * The stock symbol
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * Original timestamp in nanoseconds since epoch
     * @return timestampNanos
     */
    public Long timestampNanos { get; set; }

    /**
     * Time when the book was cleared as DateTime
     * @return timestamp
     */
    public Datetime timestamp { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASLevel3ClearBookModel getExample() {
        OASLevel3ClearBookModel level3ClearBookModel = new OASLevel3ClearBookModel();
          level3ClearBookModel.symbol = '';
          level3ClearBookModel.timestampNanos = 123456789L;
          level3ClearBookModel.timestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return level3ClearBookModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLevel3ClearBookModel) {           
            OASLevel3ClearBookModel level3ClearBookModel = (OASLevel3ClearBookModel) obj;
            return this.symbol == level3ClearBookModel.symbol
                && this.timestampNanos == level3ClearBookModel.timestampNanos
                && this.timestamp == level3ClearBookModel.timestamp;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (timestampNanos == null ? 0 : System.hashCode(timestampNanos));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        return hashCode;
    }
}

