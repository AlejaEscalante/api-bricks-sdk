/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response DTO for IEX admin information, combining all symbol-based admin message types
 */
public class OASAdminAdminMessageModel implements OAS.MappedProperties {
    /**
     * Get tradingStatus
     * @return tradingStatus
     */
    public OASAdminTradingStatusModel tradingStatus { get; set; }

    /**
     * Get officialPrice
     * @return officialPrice
     */
    public OASAdminOfficialPriceModel officialPrice { get; set; }

    /**
     * Get securityEvent
     * @return securityEvent
     */
    public OASAdminSecurityEventModel securityEvent { get; set; }

    /**
     * Get auctionInformation
     * @return auctionInformation
     */
    public OASAdminAuctionInformationModel auctionInformation { get; set; }

    /**
     * Get shortSalePriceTest
     * @return shortSalePriceTest
     */
    public OASAdminShortSalePriceTestStatusMode shortSalePriceTest { get; set; }

    /**
     * Get operationalHaltStatus
     * @return operationalHaltStatus
     */
    public OASAdminOperationalHaltStatusModel operationalHaltStatus { get; set; }

    /**
     * Get retailLiquidityIndicator
     * @return retailLiquidityIndicator
     */
    public OASAdminRetailLiquidityIndicatorMode retailLiquidityIndicator { get; set; }

    /**
     * Get systemEvent
     * @return systemEvent
     */
    public OASAdminSystemEventModel systemEvent { get; set; }

    /**
     * Get securityDirectory
     * @return securityDirectory
     */
    public OASAdminSecurityDirectoryModel securityDirectory { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trading_status' => 'tradingStatus',
        'official_price' => 'officialPrice',
        'security_event' => 'securityEvent',
        'auction_information' => 'auctionInformation',
        'short_sale_price_test' => 'shortSalePriceTest',
        'operational_halt_status' => 'operationalHaltStatus',
        'retail_liquidity_indicator' => 'retailLiquidityIndicator',
        'system_event' => 'systemEvent',
        'security_directory' => 'securityDirectory'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASAdminAdminMessageModel getExample() {
        OASAdminAdminMessageModel adminAdminMessageModel = new OASAdminAdminMessageModel();
          adminAdminMessageModel.tradingStatus = OASAdminTradingStatusModel.getExample();
          adminAdminMessageModel.officialPrice = OASAdminOfficialPriceModel.getExample();
          adminAdminMessageModel.securityEvent = OASAdminSecurityEventModel.getExample();
          adminAdminMessageModel.auctionInformation = OASAdminAuctionInformationModel.getExample();
          adminAdminMessageModel.shortSalePriceTest = OASAdminShortSalePriceTestStatusMode.getExample();
          adminAdminMessageModel.operationalHaltStatus = OASAdminOperationalHaltStatusModel.getExample();
          adminAdminMessageModel.retailLiquidityIndicator = OASAdminRetailLiquidityIndicatorMode.getExample();
          adminAdminMessageModel.systemEvent = OASAdminSystemEventModel.getExample();
          adminAdminMessageModel.securityDirectory = OASAdminSecurityDirectoryModel.getExample();
        return adminAdminMessageModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAdminAdminMessageModel) {           
            OASAdminAdminMessageModel adminAdminMessageModel = (OASAdminAdminMessageModel) obj;
            return this.tradingStatus == adminAdminMessageModel.tradingStatus
                && this.officialPrice == adminAdminMessageModel.officialPrice
                && this.securityEvent == adminAdminMessageModel.securityEvent
                && this.auctionInformation == adminAdminMessageModel.auctionInformation
                && this.shortSalePriceTest == adminAdminMessageModel.shortSalePriceTest
                && this.operationalHaltStatus == adminAdminMessageModel.operationalHaltStatus
                && this.retailLiquidityIndicator == adminAdminMessageModel.retailLiquidityIndicator
                && this.systemEvent == adminAdminMessageModel.systemEvent
                && this.securityDirectory == adminAdminMessageModel.securityDirectory;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (tradingStatus == null ? 0 : System.hashCode(tradingStatus));
        hashCode = (17 * hashCode) + (officialPrice == null ? 0 : System.hashCode(officialPrice));
        hashCode = (17 * hashCode) + (securityEvent == null ? 0 : System.hashCode(securityEvent));
        hashCode = (17 * hashCode) + (auctionInformation == null ? 0 : System.hashCode(auctionInformation));
        hashCode = (17 * hashCode) + (shortSalePriceTest == null ? 0 : System.hashCode(shortSalePriceTest));
        hashCode = (17 * hashCode) + (operationalHaltStatus == null ? 0 : System.hashCode(operationalHaltStatus));
        hashCode = (17 * hashCode) + (retailLiquidityIndicator == null ? 0 : System.hashCode(retailLiquidityIndicator));
        hashCode = (17 * hashCode) + (systemEvent == null ? 0 : System.hashCode(systemEvent));
        hashCode = (17 * hashCode) + (securityDirectory == null ? 0 : System.hashCode(securityDirectory));
        return hashCode;
    }
}

