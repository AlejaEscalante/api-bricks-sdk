/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response DTO for add order information
 */
public class OASLevel3AddOrderModel implements OAS.MappedProperties {
    /**
     * The stock symbol
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * Original timestamp in nanoseconds since epoch
     * @return timestampNanos
     */
    public Long timestampNanos { get; set; }

    /**
     * Time when the order was added as DateTime (UTC)
     * @return timestamp
     */
    public Datetime timestamp { get; set; }

    /**
     * Indicates if this is a Buy order (\'8\'/0x38).
     * @return isSideBuy
     */
    public Boolean isSideBuy { get; set; }

    /**
     * Quoted size in number of shares
     * @return size
     */
    public Integer size { get; set; }

    /**
     * Price as decimal
     * @return price
     */
    public Double price { get; set; }

    /**
     * Order identifier
     * @return orderId
     */
    public Long orderId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'is_side_buy' => 'isSideBuy',
        'order_id' => 'orderId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'is_side_buy' => 'isSideBuy',
        'order_id' => 'orderId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'is_side_buy' => 'isSideBuy',
        'order_id' => 'orderId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASLevel3AddOrderModel getExample() {
        OASLevel3AddOrderModel level3AddOrderModel = new OASLevel3AddOrderModel();
          level3AddOrderModel.symbol = '';
          level3AddOrderModel.timestampNanos = 123456789L;
          level3AddOrderModel.timestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          level3AddOrderModel.isSideBuy = true;
          level3AddOrderModel.size = 0;
          level3AddOrderModel.price = 1.3579;
          level3AddOrderModel.orderId = 123456789L;
        return level3AddOrderModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLevel3AddOrderModel) {           
            OASLevel3AddOrderModel level3AddOrderModel = (OASLevel3AddOrderModel) obj;
            return this.symbol == level3AddOrderModel.symbol
                && this.timestampNanos == level3AddOrderModel.timestampNanos
                && this.timestamp == level3AddOrderModel.timestamp
                && this.isSideBuy == level3AddOrderModel.isSideBuy
                && this.size == level3AddOrderModel.size
                && this.price == level3AddOrderModel.price
                && this.orderId == level3AddOrderModel.orderId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (timestampNanos == null ? 0 : System.hashCode(timestampNanos));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (isSideBuy == null ? 0 : System.hashCode(isSideBuy));
        hashCode = (17 * hashCode) + (size == null ? 0 : System.hashCode(size));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (orderId == null ? 0 : System.hashCode(orderId));
        return hashCode;
    }
}

