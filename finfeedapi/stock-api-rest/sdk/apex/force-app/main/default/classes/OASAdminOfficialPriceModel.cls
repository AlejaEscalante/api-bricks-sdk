/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response DTO for official price information
 */
public class OASAdminOfficialPriceModel implements OAS.MappedProperties {
    /**
     * The stock symbol
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * Original timestamp in nanoseconds since epoch
     * @return timestampNanos
     */
    public Long timestampNanos { get; set; }

    /**
     * Time when the official price was recorded as DateTime
     * @return timestamp
     */
    public Datetime timestamp { get; set; }

    /**
     * Type of price as byte value
     * @return priceType
     */
    public Integer priceType { get; set; }

    /**
     * Type of price as character string
     * @return priceTypeCode
     */
    public String priceTypeCode { get; set; }

    /**
     * Human-readable description of the price type
     * @return priceTypeText
     */
    public String priceTypeText { get; set; }

    /**
     * Indicates if the price type is \'IEX Official Opening Price\' (\'Q\'/0x51).
     * @return isPriceTypeOpening
     */
    public Boolean isPriceTypeOpening { get; set; }

    /**
     * Indicates if the price type is \'IEX Official Closing Price\' (\'M\'/0x4d).
     * @return isPriceTypeClosing
     */
    public Boolean isPriceTypeClosing { get; set; }

    /**
     * Official price as decimal
     * @return officialPrice
     */
    public Double officialPrice { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'timestamp_nanos' => 'timestampNanos',
        'price_type' => 'priceType',
        'price_type_code' => 'priceTypeCode',
        'price_type_text' => 'priceTypeText',
        'is_price_type_opening' => 'isPriceTypeOpening',
        'is_price_type_closing' => 'isPriceTypeClosing',
        'official_price' => 'officialPrice'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASAdminOfficialPriceModel getExample() {
        OASAdminOfficialPriceModel adminOfficialPriceModel = new OASAdminOfficialPriceModel();
          adminOfficialPriceModel.symbol = '';
          adminOfficialPriceModel.timestampNanos = 123456789L;
          adminOfficialPriceModel.timestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          adminOfficialPriceModel.priceType = 0;
          adminOfficialPriceModel.priceTypeCode = '';
          adminOfficialPriceModel.priceTypeText = '';
          adminOfficialPriceModel.isPriceTypeOpening = true;
          adminOfficialPriceModel.isPriceTypeClosing = true;
          adminOfficialPriceModel.officialPrice = 1.3579;
        return adminOfficialPriceModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAdminOfficialPriceModel) {           
            OASAdminOfficialPriceModel adminOfficialPriceModel = (OASAdminOfficialPriceModel) obj;
            return this.symbol == adminOfficialPriceModel.symbol
                && this.timestampNanos == adminOfficialPriceModel.timestampNanos
                && this.timestamp == adminOfficialPriceModel.timestamp
                && this.priceType == adminOfficialPriceModel.priceType
                && this.priceTypeCode == adminOfficialPriceModel.priceTypeCode
                && this.priceTypeText == adminOfficialPriceModel.priceTypeText
                && this.isPriceTypeOpening == adminOfficialPriceModel.isPriceTypeOpening
                && this.isPriceTypeClosing == adminOfficialPriceModel.isPriceTypeClosing
                && this.officialPrice == adminOfficialPriceModel.officialPrice;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (timestampNanos == null ? 0 : System.hashCode(timestampNanos));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (priceType == null ? 0 : System.hashCode(priceType));
        hashCode = (17 * hashCode) + (priceTypeCode == null ? 0 : System.hashCode(priceTypeCode));
        hashCode = (17 * hashCode) + (priceTypeText == null ? 0 : System.hashCode(priceTypeText));
        hashCode = (17 * hashCode) + (isPriceTypeOpening == null ? 0 : System.hashCode(isPriceTypeOpening));
        hashCode = (17 * hashCode) + (isPriceTypeClosing == null ? 0 : System.hashCode(isPriceTypeClosing));
        hashCode = (17 * hashCode) + (officialPrice == null ? 0 : System.hashCode(officialPrice));
        return hashCode;
    }
}

