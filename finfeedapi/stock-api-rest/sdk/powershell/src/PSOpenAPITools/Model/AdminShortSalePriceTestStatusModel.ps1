#
# FinFeedAPI Stock REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the response DTO for short sale price test status information

.PARAMETER Symbol
The stock symbol
.PARAMETER TimestampNanos
Original timestamp in nanoseconds since epoch
.PARAMETER Timestamp
Time when the short sale price test status was recorded as DateTime
.PARAMETER ShortSalePriceTestStatus
Short sale price test status as byte value
.PARAMETER ShortSalePriceTestStatusCode
Short sale price test status as hex string
.PARAMETER ShortSalePriceTestStatusText
Human-readable description of the short sale price test status
.PARAMETER IsShortSalePriceTestNotInEffect
Indicates if the short sale price test is not in effect
.PARAMETER IsShortSalePriceTestInEffect
Indicates if the short sale price test is in effect
.PARAMETER Detail
Detail of the short sale price test as byte value
.PARAMETER DetailCode
Detail of the short sale price test as character string
.PARAMETER DetailText
Human-readable description of the short sale price test detail
.PARAMETER IsDetailNoPriceTest
Indicates if there is no price test in place
.PARAMETER IsDetailActivated
Indicates if the short sale price test restriction is in effect due to an intraday price drop
.PARAMETER IsDetailContinued
Indicates if the short sale price test restriction remains in effect from prior day
.PARAMETER IsDetailDeactivated
Indicates if the short sale price test restriction is deactivated
.PARAMETER IsDetailNotAvailable
Indicates if the detail is not available
.OUTPUTS

AdminShortSalePriceTestStatusModel<PSCustomObject>
#>

function Initialize-AdminShortSalePriceTestStatusModel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Symbol},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TimestampNanos},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ShortSalePriceTestStatus},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShortSalePriceTestStatusCode},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShortSalePriceTestStatusText},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsShortSalePriceTestNotInEffect},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsShortSalePriceTestInEffect},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Detail},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DetailCode},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DetailText},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDetailNoPriceTest},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDetailActivated},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDetailContinued},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDetailDeactivated},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDetailNotAvailable}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdminShortSalePriceTestStatusModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "symbol" = ${Symbol}
            "timestamp_nanos" = ${TimestampNanos}
            "timestamp" = ${Timestamp}
            "short_sale_price_test_status" = ${ShortSalePriceTestStatus}
            "short_sale_price_test_status_code" = ${ShortSalePriceTestStatusCode}
            "short_sale_price_test_status_text" = ${ShortSalePriceTestStatusText}
            "is_short_sale_price_test_not_in_effect" = ${IsShortSalePriceTestNotInEffect}
            "is_short_sale_price_test_in_effect" = ${IsShortSalePriceTestInEffect}
            "detail" = ${Detail}
            "detail_code" = ${DetailCode}
            "detail_text" = ${DetailText}
            "is_detail_no_price_test" = ${IsDetailNoPriceTest}
            "is_detail_activated" = ${IsDetailActivated}
            "is_detail_continued" = ${IsDetailContinued}
            "is_detail_deactivated" = ${IsDetailDeactivated}
            "is_detail_not_available" = ${IsDetailNotAvailable}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdminShortSalePriceTestStatusModel<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdminShortSalePriceTestStatusModel<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdminShortSalePriceTestStatusModel<PSCustomObject>
#>
function ConvertFrom-JsonToAdminShortSalePriceTestStatusModel {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdminShortSalePriceTestStatusModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdminShortSalePriceTestStatusModel
        $AllProperties = ("symbol", "timestamp_nanos", "timestamp", "short_sale_price_test_status", "short_sale_price_test_status_code", "short_sale_price_test_status_text", "is_short_sale_price_test_not_in_effect", "is_short_sale_price_test_in_effect", "detail", "detail_code", "detail_text", "is_detail_no_price_test", "is_detail_activated", "is_detail_continued", "is_detail_deactivated", "is_detail_not_available")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "symbol"))) { #optional property not found
            $Symbol = $null
        } else {
            $Symbol = $JsonParameters.PSobject.Properties["symbol"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp_nanos"))) { #optional property not found
            $TimestampNanos = $null
        } else {
            $TimestampNanos = $JsonParameters.PSobject.Properties["timestamp_nanos"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "short_sale_price_test_status"))) { #optional property not found
            $ShortSalePriceTestStatus = $null
        } else {
            $ShortSalePriceTestStatus = $JsonParameters.PSobject.Properties["short_sale_price_test_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "short_sale_price_test_status_code"))) { #optional property not found
            $ShortSalePriceTestStatusCode = $null
        } else {
            $ShortSalePriceTestStatusCode = $JsonParameters.PSobject.Properties["short_sale_price_test_status_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "short_sale_price_test_status_text"))) { #optional property not found
            $ShortSalePriceTestStatusText = $null
        } else {
            $ShortSalePriceTestStatusText = $JsonParameters.PSobject.Properties["short_sale_price_test_status_text"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_short_sale_price_test_not_in_effect"))) { #optional property not found
            $IsShortSalePriceTestNotInEffect = $null
        } else {
            $IsShortSalePriceTestNotInEffect = $JsonParameters.PSobject.Properties["is_short_sale_price_test_not_in_effect"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_short_sale_price_test_in_effect"))) { #optional property not found
            $IsShortSalePriceTestInEffect = $null
        } else {
            $IsShortSalePriceTestInEffect = $JsonParameters.PSobject.Properties["is_short_sale_price_test_in_effect"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "detail"))) { #optional property not found
            $Detail = $null
        } else {
            $Detail = $JsonParameters.PSobject.Properties["detail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "detail_code"))) { #optional property not found
            $DetailCode = $null
        } else {
            $DetailCode = $JsonParameters.PSobject.Properties["detail_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "detail_text"))) { #optional property not found
            $DetailText = $null
        } else {
            $DetailText = $JsonParameters.PSobject.Properties["detail_text"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_detail_no_price_test"))) { #optional property not found
            $IsDetailNoPriceTest = $null
        } else {
            $IsDetailNoPriceTest = $JsonParameters.PSobject.Properties["is_detail_no_price_test"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_detail_activated"))) { #optional property not found
            $IsDetailActivated = $null
        } else {
            $IsDetailActivated = $JsonParameters.PSobject.Properties["is_detail_activated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_detail_continued"))) { #optional property not found
            $IsDetailContinued = $null
        } else {
            $IsDetailContinued = $JsonParameters.PSobject.Properties["is_detail_continued"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_detail_deactivated"))) { #optional property not found
            $IsDetailDeactivated = $null
        } else {
            $IsDetailDeactivated = $JsonParameters.PSobject.Properties["is_detail_deactivated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_detail_not_available"))) { #optional property not found
            $IsDetailNotAvailable = $null
        } else {
            $IsDetailNotAvailable = $JsonParameters.PSobject.Properties["is_detail_not_available"].value
        }

        $PSO = [PSCustomObject]@{
            "symbol" = ${Symbol}
            "timestamp_nanos" = ${TimestampNanos}
            "timestamp" = ${Timestamp}
            "short_sale_price_test_status" = ${ShortSalePriceTestStatus}
            "short_sale_price_test_status_code" = ${ShortSalePriceTestStatusCode}
            "short_sale_price_test_status_text" = ${ShortSalePriceTestStatusText}
            "is_short_sale_price_test_not_in_effect" = ${IsShortSalePriceTestNotInEffect}
            "is_short_sale_price_test_in_effect" = ${IsShortSalePriceTestInEffect}
            "detail" = ${Detail}
            "detail_code" = ${DetailCode}
            "detail_text" = ${DetailText}
            "is_detail_no_price_test" = ${IsDetailNoPriceTest}
            "is_detail_activated" = ${IsDetailActivated}
            "is_detail_continued" = ${IsDetailContinued}
            "is_detail_deactivated" = ${IsDetailDeactivated}
            "is_detail_not_available" = ${IsDetailNotAvailable}
        }

        return $PSO
    }

}

