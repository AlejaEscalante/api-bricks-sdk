#
# FinFeedAPI Stock REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ExchangeId
No description available.
.PARAMETER LastDatapointDate
No description available.
.PARAMETER Mic
No description available.
.PARAMETER OperatingMic
No description available.
.PARAMETER OprtSgmt
No description available.
.PARAMETER MarketNameInstitutionDescription
No description available.
.PARAMETER LegalEntityName
No description available.
.PARAMETER Lei
No description available.
.PARAMETER MarketCategoryCode
No description available.
.PARAMETER Acronym
No description available.
.PARAMETER IsoCountryCode
No description available.
.PARAMETER City
No description available.
.PARAMETER Website
No description available.
.PARAMETER Status
No description available.
.PARAMETER CreationDate
No description available.
.PARAMETER LastUpdateDate
No description available.
.PARAMETER LastValidationDate
No description available.
.PARAMETER ExpiryDate
No description available.
.PARAMETER Comments
No description available.
.OUTPUTS

FinFeedAPIExchangeModel<PSCustomObject>
#>

function Initialize-FinFeedAPIExchangeModel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExchangeId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastDatapointDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Mic},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OperatingMic},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OprtSgmt},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MarketNameInstitutionDescription},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LegalEntityName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Lei},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MarketCategoryCode},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Acronym},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IsoCountryCode},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${City},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Website},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${CreationDate},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastUpdateDate},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastValidationDate},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ExpiryDate},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comments}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => FinFeedAPIExchangeModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "exchange_id" = ${ExchangeId}
            "last_datapoint_date" = ${LastDatapointDate}
            "mic" = ${Mic}
            "operating_mic" = ${OperatingMic}
            "oprt_sgmt" = ${OprtSgmt}
            "market_name_institution_description" = ${MarketNameInstitutionDescription}
            "legal_entity_name" = ${LegalEntityName}
            "lei" = ${Lei}
            "market_category_code" = ${MarketCategoryCode}
            "acronym" = ${Acronym}
            "iso_country_code" = ${IsoCountryCode}
            "city" = ${City}
            "website" = ${Website}
            "status" = ${Status}
            "creation_date" = ${CreationDate}
            "last_update_date" = ${LastUpdateDate}
            "last_validation_date" = ${LastValidationDate}
            "expiry_date" = ${ExpiryDate}
            "comments" = ${Comments}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FinFeedAPIExchangeModel<PSCustomObject>

.DESCRIPTION

Convert from JSON to FinFeedAPIExchangeModel<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FinFeedAPIExchangeModel<PSCustomObject>
#>
function ConvertFrom-JsonToFinFeedAPIExchangeModel {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => FinFeedAPIExchangeModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $FinFeedAPIExchangeModelAdditionalProperties = @{}

        # check if Json contains properties not defined in FinFeedAPIExchangeModel
        $AllProperties = ("exchange_id", "last_datapoint_date", "mic", "operating_mic", "oprt_sgmt", "market_name_institution_description", "legal_entity_name", "lei", "market_category_code", "acronym", "iso_country_code", "city", "website", "status", "creation_date", "last_update_date", "last_validation_date", "expiry_date", "comments")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $FinFeedAPIExchangeModelAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "exchange_id"))) { #optional property not found
            $ExchangeId = $null
        } else {
            $ExchangeId = $JsonParameters.PSobject.Properties["exchange_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_datapoint_date"))) { #optional property not found
            $LastDatapointDate = $null
        } else {
            $LastDatapointDate = $JsonParameters.PSobject.Properties["last_datapoint_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mic"))) { #optional property not found
            $Mic = $null
        } else {
            $Mic = $JsonParameters.PSobject.Properties["mic"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operating_mic"))) { #optional property not found
            $OperatingMic = $null
        } else {
            $OperatingMic = $JsonParameters.PSobject.Properties["operating_mic"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "oprt_sgmt"))) { #optional property not found
            $OprtSgmt = $null
        } else {
            $OprtSgmt = $JsonParameters.PSobject.Properties["oprt_sgmt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "market_name_institution_description"))) { #optional property not found
            $MarketNameInstitutionDescription = $null
        } else {
            $MarketNameInstitutionDescription = $JsonParameters.PSobject.Properties["market_name_institution_description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "legal_entity_name"))) { #optional property not found
            $LegalEntityName = $null
        } else {
            $LegalEntityName = $JsonParameters.PSobject.Properties["legal_entity_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lei"))) { #optional property not found
            $Lei = $null
        } else {
            $Lei = $JsonParameters.PSobject.Properties["lei"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "market_category_code"))) { #optional property not found
            $MarketCategoryCode = $null
        } else {
            $MarketCategoryCode = $JsonParameters.PSobject.Properties["market_category_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "acronym"))) { #optional property not found
            $Acronym = $null
        } else {
            $Acronym = $JsonParameters.PSobject.Properties["acronym"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "iso_country_code"))) { #optional property not found
            $IsoCountryCode = $null
        } else {
            $IsoCountryCode = $JsonParameters.PSobject.Properties["iso_country_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "city"))) { #optional property not found
            $City = $null
        } else {
            $City = $JsonParameters.PSobject.Properties["city"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "website"))) { #optional property not found
            $Website = $null
        } else {
            $Website = $JsonParameters.PSobject.Properties["website"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creation_date"))) { #optional property not found
            $CreationDate = $null
        } else {
            $CreationDate = $JsonParameters.PSobject.Properties["creation_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_update_date"))) { #optional property not found
            $LastUpdateDate = $null
        } else {
            $LastUpdateDate = $JsonParameters.PSobject.Properties["last_update_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_validation_date"))) { #optional property not found
            $LastValidationDate = $null
        } else {
            $LastValidationDate = $JsonParameters.PSobject.Properties["last_validation_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "expiry_date"))) { #optional property not found
            $ExpiryDate = $null
        } else {
            $ExpiryDate = $JsonParameters.PSobject.Properties["expiry_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comments"))) { #optional property not found
            $Comments = $null
        } else {
            $Comments = $JsonParameters.PSobject.Properties["comments"].value
        }

        $PSO = [PSCustomObject]@{
            "exchange_id" = ${ExchangeId}
            "last_datapoint_date" = ${LastDatapointDate}
            "mic" = ${Mic}
            "operating_mic" = ${OperatingMic}
            "oprt_sgmt" = ${OprtSgmt}
            "market_name_institution_description" = ${MarketNameInstitutionDescription}
            "legal_entity_name" = ${LegalEntityName}
            "lei" = ${Lei}
            "market_category_code" = ${MarketCategoryCode}
            "acronym" = ${Acronym}
            "iso_country_code" = ${IsoCountryCode}
            "city" = ${City}
            "website" = ${Website}
            "status" = ${Status}
            "creation_date" = ${CreationDate}
            "last_update_date" = ${LastUpdateDate}
            "last_validation_date" = ${LastValidationDate}
            "expiry_date" = ${ExpiryDate}
            "comments" = ${Comments}
            "AdditionalProperties" = $FinFeedAPIExchangeModelAdditionalProperties
        }

        return $PSO
    }

}

