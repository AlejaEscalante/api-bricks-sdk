/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents the response DTO for official price information
 *
 * @param symbol The stock symbol
 * @param timestampNanos Original timestamp in nanoseconds since epoch
 * @param timestamp Time when the official price was recorded as DateTime
 * @param priceType Type of price as byte value
 * @param priceTypeCode Type of price as character string
 * @param priceTypeText Human-readable description of the price type
 * @param isPriceTypeOpening Indicates if the price type is 'IEX Official Opening Price' ('Q'/0x51).
 * @param isPriceTypeClosing Indicates if the price type is 'IEX Official Closing Price' ('M'/0x4d).
 * @param officialPrice Official price as decimal
 */


data class AdminOfficialPriceModel (

    /* The stock symbol */
    @Json(name = "symbol")
    val symbol: kotlin.String? = null,

    /* Original timestamp in nanoseconds since epoch */
    @Json(name = "timestamp_nanos")
    val timestampNanos: kotlin.Long? = null,

    /* Time when the official price was recorded as DateTime */
    @Json(name = "timestamp")
    val timestamp: java.time.OffsetDateTime? = null,

    /* Type of price as byte value */
    @Json(name = "price_type")
    val priceType: kotlin.Int? = null,

    /* Type of price as character string */
    @Json(name = "price_type_code")
    val priceTypeCode: kotlin.String? = null,

    /* Human-readable description of the price type */
    @Json(name = "price_type_text")
    val priceTypeText: kotlin.String? = null,

    /* Indicates if the price type is 'IEX Official Opening Price' ('Q'/0x51). */
    @Json(name = "is_price_type_opening")
    val isPriceTypeOpening: kotlin.Boolean? = null,

    /* Indicates if the price type is 'IEX Official Closing Price' ('M'/0x4d). */
    @Json(name = "is_price_type_closing")
    val isPriceTypeClosing: kotlin.Boolean? = null,

    /* Official price as decimal */
    @Json(name = "official_price")
    val officialPrice: kotlin.Double? = null

) {


}

