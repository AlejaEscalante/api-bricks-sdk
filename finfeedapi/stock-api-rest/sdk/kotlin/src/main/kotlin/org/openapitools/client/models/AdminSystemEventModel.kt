/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents the response DTO for system event information
 *
 * @param timestampNanos Original timestamp in nanoseconds since epoch
 * @param timestamp Time when the system event was recorded as DateTime
 * @param systemEvent System event as byte value
 * @param systemEventCode System event as string
 * @param systemEventText Human-readable description of the system event
 * @param isSystemEventStartOfMessages Indicates if the system event is 'Start of Messages' (O).  Outside of heartbeat messages on the lower level protocol,   the start of day message is the first message sent in any trading session.
 * @param isSystemEventStartOfSystemHours Indicates if the system event is 'Start of System Hours' (S).  This message indicates that IEX is open and ready to start accepting orders.
 * @param isSystemEventStartOfRegularMarketHours Indicates if the system event is 'Start of Regular Market Hours' (R).  This message indicates that DAY and GTX orders, as well as market orders and pegged orders,   are available for execution on IEX.
 * @param isSystemEventEndOfRegularMarketHours Indicates if the system event is 'End of Regular Market Hours' (M).  This message indicates that DAY orders, market orders, and pegged orders   are no longer accepted by IEX.
 * @param isSystemEventEndOfSystemHours Indicates if the system event is 'End of System Hours' (E).  This message indicates that IEX is now closed and will not accept   any new orders during this trading session. It is still possible   to receive messages after the end of day.
 * @param isSystemEventEndOfMessages Indicates if the system event is 'End of Messages' (C).  This is always the last message sent in any trading session.
 */


data class AdminSystemEventModel (

    /* Original timestamp in nanoseconds since epoch */
    @Json(name = "timestamp_nanos")
    val timestampNanos: kotlin.Long? = null,

    /* Time when the system event was recorded as DateTime */
    @Json(name = "timestamp")
    val timestamp: java.time.OffsetDateTime? = null,

    /* System event as byte value */
    @Json(name = "system_event")
    val systemEvent: kotlin.Int? = null,

    /* System event as string */
    @Json(name = "system_event_code")
    val systemEventCode: kotlin.String? = null,

    /* Human-readable description of the system event */
    @Json(name = "system_event_text")
    val systemEventText: kotlin.String? = null,

    /* Indicates if the system event is 'Start of Messages' (O).  Outside of heartbeat messages on the lower level protocol,   the start of day message is the first message sent in any trading session. */
    @Json(name = "is_system_event_start_of_messages")
    val isSystemEventStartOfMessages: kotlin.Boolean? = null,

    /* Indicates if the system event is 'Start of System Hours' (S).  This message indicates that IEX is open and ready to start accepting orders. */
    @Json(name = "is_system_event_start_of_system_hours")
    val isSystemEventStartOfSystemHours: kotlin.Boolean? = null,

    /* Indicates if the system event is 'Start of Regular Market Hours' (R).  This message indicates that DAY and GTX orders, as well as market orders and pegged orders,   are available for execution on IEX. */
    @Json(name = "is_system_event_start_of_regular_market_hours")
    val isSystemEventStartOfRegularMarketHours: kotlin.Boolean? = null,

    /* Indicates if the system event is 'End of Regular Market Hours' (M).  This message indicates that DAY orders, market orders, and pegged orders   are no longer accepted by IEX. */
    @Json(name = "is_system_event_end_of_regular_market_hours")
    val isSystemEventEndOfRegularMarketHours: kotlin.Boolean? = null,

    /* Indicates if the system event is 'End of System Hours' (E).  This message indicates that IEX is now closed and will not accept   any new orders during this trading session. It is still possible   to receive messages after the end of day. */
    @Json(name = "is_system_event_end_of_system_hours")
    val isSystemEventEndOfSystemHours: kotlin.Boolean? = null,

    /* Indicates if the system event is 'End of Messages' (C).  This is always the last message sent in any trading session. */
    @Json(name = "is_system_event_end_of_messages")
    val isSystemEventEndOfMessages: kotlin.Boolean? = null

) {


}

