/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.AdminAuctionInformationModel;
import org.openapitools.client.model.AdminOfficialPriceModel;
import org.openapitools.client.model.AdminOperationalHaltStatusModel;
import org.openapitools.client.model.AdminRetailLiquidityIndicatorModel;
import org.openapitools.client.model.AdminSecurityDirectoryModel;
import org.openapitools.client.model.AdminSecurityEventModel;
import org.openapitools.client.model.AdminShortSalePriceTestStatusModel;
import org.openapitools.client.model.AdminSystemEventModel;
import org.openapitools.client.model.AdminTradingStatusModel;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents the response DTO for IEX admin information, combining all symbol-based admin message types
 **/
@ApiModel(description = "Represents the response DTO for IEX admin information, combining all symbol-based admin message types")
public class AdminAdminMessageModel {
  
  @SerializedName("trading_status")
  private AdminTradingStatusModel tradingStatus = null;
  @SerializedName("official_price")
  private AdminOfficialPriceModel officialPrice = null;
  @SerializedName("security_event")
  private AdminSecurityEventModel securityEvent = null;
  @SerializedName("auction_information")
  private AdminAuctionInformationModel auctionInformation = null;
  @SerializedName("short_sale_price_test")
  private AdminShortSalePriceTestStatusModel shortSalePriceTest = null;
  @SerializedName("operational_halt_status")
  private AdminOperationalHaltStatusModel operationalHaltStatus = null;
  @SerializedName("retail_liquidity_indicator")
  private AdminRetailLiquidityIndicatorModel retailLiquidityIndicator = null;
  @SerializedName("system_event")
  private AdminSystemEventModel systemEvent = null;
  @SerializedName("security_directory")
  private AdminSecurityDirectoryModel securityDirectory = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminTradingStatusModel getTradingStatus() {
    return tradingStatus;
  }
  public void setTradingStatus(AdminTradingStatusModel tradingStatus) {
    this.tradingStatus = tradingStatus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminOfficialPriceModel getOfficialPrice() {
    return officialPrice;
  }
  public void setOfficialPrice(AdminOfficialPriceModel officialPrice) {
    this.officialPrice = officialPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminSecurityEventModel getSecurityEvent() {
    return securityEvent;
  }
  public void setSecurityEvent(AdminSecurityEventModel securityEvent) {
    this.securityEvent = securityEvent;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminAuctionInformationModel getAuctionInformation() {
    return auctionInformation;
  }
  public void setAuctionInformation(AdminAuctionInformationModel auctionInformation) {
    this.auctionInformation = auctionInformation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminShortSalePriceTestStatusModel getShortSalePriceTest() {
    return shortSalePriceTest;
  }
  public void setShortSalePriceTest(AdminShortSalePriceTestStatusModel shortSalePriceTest) {
    this.shortSalePriceTest = shortSalePriceTest;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminOperationalHaltStatusModel getOperationalHaltStatus() {
    return operationalHaltStatus;
  }
  public void setOperationalHaltStatus(AdminOperationalHaltStatusModel operationalHaltStatus) {
    this.operationalHaltStatus = operationalHaltStatus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminRetailLiquidityIndicatorModel getRetailLiquidityIndicator() {
    return retailLiquidityIndicator;
  }
  public void setRetailLiquidityIndicator(AdminRetailLiquidityIndicatorModel retailLiquidityIndicator) {
    this.retailLiquidityIndicator = retailLiquidityIndicator;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminSystemEventModel getSystemEvent() {
    return systemEvent;
  }
  public void setSystemEvent(AdminSystemEventModel systemEvent) {
    this.systemEvent = systemEvent;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdminSecurityDirectoryModel getSecurityDirectory() {
    return securityDirectory;
  }
  public void setSecurityDirectory(AdminSecurityDirectoryModel securityDirectory) {
    this.securityDirectory = securityDirectory;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminAdminMessageModel adminAdminMessageModel = (AdminAdminMessageModel) o;
    return (this.tradingStatus == null ? adminAdminMessageModel.tradingStatus == null : this.tradingStatus.equals(adminAdminMessageModel.tradingStatus)) &&
        (this.officialPrice == null ? adminAdminMessageModel.officialPrice == null : this.officialPrice.equals(adminAdminMessageModel.officialPrice)) &&
        (this.securityEvent == null ? adminAdminMessageModel.securityEvent == null : this.securityEvent.equals(adminAdminMessageModel.securityEvent)) &&
        (this.auctionInformation == null ? adminAdminMessageModel.auctionInformation == null : this.auctionInformation.equals(adminAdminMessageModel.auctionInformation)) &&
        (this.shortSalePriceTest == null ? adminAdminMessageModel.shortSalePriceTest == null : this.shortSalePriceTest.equals(adminAdminMessageModel.shortSalePriceTest)) &&
        (this.operationalHaltStatus == null ? adminAdminMessageModel.operationalHaltStatus == null : this.operationalHaltStatus.equals(adminAdminMessageModel.operationalHaltStatus)) &&
        (this.retailLiquidityIndicator == null ? adminAdminMessageModel.retailLiquidityIndicator == null : this.retailLiquidityIndicator.equals(adminAdminMessageModel.retailLiquidityIndicator)) &&
        (this.systemEvent == null ? adminAdminMessageModel.systemEvent == null : this.systemEvent.equals(adminAdminMessageModel.systemEvent)) &&
        (this.securityDirectory == null ? adminAdminMessageModel.securityDirectory == null : this.securityDirectory.equals(adminAdminMessageModel.securityDirectory));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.tradingStatus == null ? 0: this.tradingStatus.hashCode());
    result = 31 * result + (this.officialPrice == null ? 0: this.officialPrice.hashCode());
    result = 31 * result + (this.securityEvent == null ? 0: this.securityEvent.hashCode());
    result = 31 * result + (this.auctionInformation == null ? 0: this.auctionInformation.hashCode());
    result = 31 * result + (this.shortSalePriceTest == null ? 0: this.shortSalePriceTest.hashCode());
    result = 31 * result + (this.operationalHaltStatus == null ? 0: this.operationalHaltStatus.hashCode());
    result = 31 * result + (this.retailLiquidityIndicator == null ? 0: this.retailLiquidityIndicator.hashCode());
    result = 31 * result + (this.systemEvent == null ? 0: this.systemEvent.hashCode());
    result = 31 * result + (this.securityDirectory == null ? 0: this.securityDirectory.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminAdminMessageModel {\n");
    
    sb.append("  tradingStatus: ").append(tradingStatus).append("\n");
    sb.append("  officialPrice: ").append(officialPrice).append("\n");
    sb.append("  securityEvent: ").append(securityEvent).append("\n");
    sb.append("  auctionInformation: ").append(auctionInformation).append("\n");
    sb.append("  shortSalePriceTest: ").append(shortSalePriceTest).append("\n");
    sb.append("  operationalHaltStatus: ").append(operationalHaltStatus).append("\n");
    sb.append("  retailLiquidityIndicator: ").append(retailLiquidityIndicator).append("\n");
    sb.append("  systemEvent: ").append(systemEvent).append("\n");
    sb.append("  securityDirectory: ").append(securityDirectory).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
