/**
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents the response DTO for short sale price test status information
 **/
@ApiModel(description = "Represents the response DTO for short sale price test status information")
public class AdminShortSalePriceTestStatusModel {
  
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("timestamp_nanos")
  private Long timestampNanos = null;
  @SerializedName("timestamp")
  private Date timestamp = null;
  @SerializedName("short_sale_price_test_status")
  private Integer shortSalePriceTestStatus = null;
  @SerializedName("short_sale_price_test_status_code")
  private String shortSalePriceTestStatusCode = null;
  @SerializedName("short_sale_price_test_status_text")
  private String shortSalePriceTestStatusText = null;
  @SerializedName("is_short_sale_price_test_not_in_effect")
  private Boolean isShortSalePriceTestNotInEffect = null;
  @SerializedName("is_short_sale_price_test_in_effect")
  private Boolean isShortSalePriceTestInEffect = null;
  @SerializedName("detail")
  private Integer detail = null;
  @SerializedName("detail_code")
  private String detailCode = null;
  @SerializedName("detail_text")
  private String detailText = null;
  @SerializedName("is_detail_no_price_test")
  private Boolean isDetailNoPriceTest = null;
  @SerializedName("is_detail_activated")
  private Boolean isDetailActivated = null;
  @SerializedName("is_detail_continued")
  private Boolean isDetailContinued = null;
  @SerializedName("is_detail_deactivated")
  private Boolean isDetailDeactivated = null;
  @SerializedName("is_detail_not_available")
  private Boolean isDetailNotAvailable = null;

  /**
   * The stock symbol
   **/
  @ApiModelProperty(value = "The stock symbol")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   * Original timestamp in nanoseconds since epoch
   **/
  @ApiModelProperty(value = "Original timestamp in nanoseconds since epoch")
  public Long getTimestampNanos() {
    return timestampNanos;
  }
  public void setTimestampNanos(Long timestampNanos) {
    this.timestampNanos = timestampNanos;
  }

  /**
   * Time when the short sale price test status was recorded as DateTime
   **/
  @ApiModelProperty(value = "Time when the short sale price test status was recorded as DateTime")
  public Date getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Short sale price test status as byte value
   **/
  @ApiModelProperty(value = "Short sale price test status as byte value")
  public Integer getShortSalePriceTestStatus() {
    return shortSalePriceTestStatus;
  }
  public void setShortSalePriceTestStatus(Integer shortSalePriceTestStatus) {
    this.shortSalePriceTestStatus = shortSalePriceTestStatus;
  }

  /**
   * Short sale price test status as hex string
   **/
  @ApiModelProperty(value = "Short sale price test status as hex string")
  public String getShortSalePriceTestStatusCode() {
    return shortSalePriceTestStatusCode;
  }
  public void setShortSalePriceTestStatusCode(String shortSalePriceTestStatusCode) {
    this.shortSalePriceTestStatusCode = shortSalePriceTestStatusCode;
  }

  /**
   * Human-readable description of the short sale price test status
   **/
  @ApiModelProperty(value = "Human-readable description of the short sale price test status")
  public String getShortSalePriceTestStatusText() {
    return shortSalePriceTestStatusText;
  }
  public void setShortSalePriceTestStatusText(String shortSalePriceTestStatusText) {
    this.shortSalePriceTestStatusText = shortSalePriceTestStatusText;
  }

  /**
   * Indicates if the short sale price test is not in effect
   **/
  @ApiModelProperty(value = "Indicates if the short sale price test is not in effect")
  public Boolean getIsShortSalePriceTestNotInEffect() {
    return isShortSalePriceTestNotInEffect;
  }
  public void setIsShortSalePriceTestNotInEffect(Boolean isShortSalePriceTestNotInEffect) {
    this.isShortSalePriceTestNotInEffect = isShortSalePriceTestNotInEffect;
  }

  /**
   * Indicates if the short sale price test is in effect
   **/
  @ApiModelProperty(value = "Indicates if the short sale price test is in effect")
  public Boolean getIsShortSalePriceTestInEffect() {
    return isShortSalePriceTestInEffect;
  }
  public void setIsShortSalePriceTestInEffect(Boolean isShortSalePriceTestInEffect) {
    this.isShortSalePriceTestInEffect = isShortSalePriceTestInEffect;
  }

  /**
   * Detail of the short sale price test as byte value
   **/
  @ApiModelProperty(value = "Detail of the short sale price test as byte value")
  public Integer getDetail() {
    return detail;
  }
  public void setDetail(Integer detail) {
    this.detail = detail;
  }

  /**
   * Detail of the short sale price test as character string
   **/
  @ApiModelProperty(value = "Detail of the short sale price test as character string")
  public String getDetailCode() {
    return detailCode;
  }
  public void setDetailCode(String detailCode) {
    this.detailCode = detailCode;
  }

  /**
   * Human-readable description of the short sale price test detail
   **/
  @ApiModelProperty(value = "Human-readable description of the short sale price test detail")
  public String getDetailText() {
    return detailText;
  }
  public void setDetailText(String detailText) {
    this.detailText = detailText;
  }

  /**
   * Indicates if there is no price test in place
   **/
  @ApiModelProperty(value = "Indicates if there is no price test in place")
  public Boolean getIsDetailNoPriceTest() {
    return isDetailNoPriceTest;
  }
  public void setIsDetailNoPriceTest(Boolean isDetailNoPriceTest) {
    this.isDetailNoPriceTest = isDetailNoPriceTest;
  }

  /**
   * Indicates if the short sale price test restriction is in effect due to an intraday price drop
   **/
  @ApiModelProperty(value = "Indicates if the short sale price test restriction is in effect due to an intraday price drop")
  public Boolean getIsDetailActivated() {
    return isDetailActivated;
  }
  public void setIsDetailActivated(Boolean isDetailActivated) {
    this.isDetailActivated = isDetailActivated;
  }

  /**
   * Indicates if the short sale price test restriction remains in effect from prior day
   **/
  @ApiModelProperty(value = "Indicates if the short sale price test restriction remains in effect from prior day")
  public Boolean getIsDetailContinued() {
    return isDetailContinued;
  }
  public void setIsDetailContinued(Boolean isDetailContinued) {
    this.isDetailContinued = isDetailContinued;
  }

  /**
   * Indicates if the short sale price test restriction is deactivated
   **/
  @ApiModelProperty(value = "Indicates if the short sale price test restriction is deactivated")
  public Boolean getIsDetailDeactivated() {
    return isDetailDeactivated;
  }
  public void setIsDetailDeactivated(Boolean isDetailDeactivated) {
    this.isDetailDeactivated = isDetailDeactivated;
  }

  /**
   * Indicates if the detail is not available
   **/
  @ApiModelProperty(value = "Indicates if the detail is not available")
  public Boolean getIsDetailNotAvailable() {
    return isDetailNotAvailable;
  }
  public void setIsDetailNotAvailable(Boolean isDetailNotAvailable) {
    this.isDetailNotAvailable = isDetailNotAvailable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminShortSalePriceTestStatusModel adminShortSalePriceTestStatusModel = (AdminShortSalePriceTestStatusModel) o;
    return (this.symbol == null ? adminShortSalePriceTestStatusModel.symbol == null : this.symbol.equals(adminShortSalePriceTestStatusModel.symbol)) &&
        (this.timestampNanos == null ? adminShortSalePriceTestStatusModel.timestampNanos == null : this.timestampNanos.equals(adminShortSalePriceTestStatusModel.timestampNanos)) &&
        (this.timestamp == null ? adminShortSalePriceTestStatusModel.timestamp == null : this.timestamp.equals(adminShortSalePriceTestStatusModel.timestamp)) &&
        (this.shortSalePriceTestStatus == null ? adminShortSalePriceTestStatusModel.shortSalePriceTestStatus == null : this.shortSalePriceTestStatus.equals(adminShortSalePriceTestStatusModel.shortSalePriceTestStatus)) &&
        (this.shortSalePriceTestStatusCode == null ? adminShortSalePriceTestStatusModel.shortSalePriceTestStatusCode == null : this.shortSalePriceTestStatusCode.equals(adminShortSalePriceTestStatusModel.shortSalePriceTestStatusCode)) &&
        (this.shortSalePriceTestStatusText == null ? adminShortSalePriceTestStatusModel.shortSalePriceTestStatusText == null : this.shortSalePriceTestStatusText.equals(adminShortSalePriceTestStatusModel.shortSalePriceTestStatusText)) &&
        (this.isShortSalePriceTestNotInEffect == null ? adminShortSalePriceTestStatusModel.isShortSalePriceTestNotInEffect == null : this.isShortSalePriceTestNotInEffect.equals(adminShortSalePriceTestStatusModel.isShortSalePriceTestNotInEffect)) &&
        (this.isShortSalePriceTestInEffect == null ? adminShortSalePriceTestStatusModel.isShortSalePriceTestInEffect == null : this.isShortSalePriceTestInEffect.equals(adminShortSalePriceTestStatusModel.isShortSalePriceTestInEffect)) &&
        (this.detail == null ? adminShortSalePriceTestStatusModel.detail == null : this.detail.equals(adminShortSalePriceTestStatusModel.detail)) &&
        (this.detailCode == null ? adminShortSalePriceTestStatusModel.detailCode == null : this.detailCode.equals(adminShortSalePriceTestStatusModel.detailCode)) &&
        (this.detailText == null ? adminShortSalePriceTestStatusModel.detailText == null : this.detailText.equals(adminShortSalePriceTestStatusModel.detailText)) &&
        (this.isDetailNoPriceTest == null ? adminShortSalePriceTestStatusModel.isDetailNoPriceTest == null : this.isDetailNoPriceTest.equals(adminShortSalePriceTestStatusModel.isDetailNoPriceTest)) &&
        (this.isDetailActivated == null ? adminShortSalePriceTestStatusModel.isDetailActivated == null : this.isDetailActivated.equals(adminShortSalePriceTestStatusModel.isDetailActivated)) &&
        (this.isDetailContinued == null ? adminShortSalePriceTestStatusModel.isDetailContinued == null : this.isDetailContinued.equals(adminShortSalePriceTestStatusModel.isDetailContinued)) &&
        (this.isDetailDeactivated == null ? adminShortSalePriceTestStatusModel.isDetailDeactivated == null : this.isDetailDeactivated.equals(adminShortSalePriceTestStatusModel.isDetailDeactivated)) &&
        (this.isDetailNotAvailable == null ? adminShortSalePriceTestStatusModel.isDetailNotAvailable == null : this.isDetailNotAvailable.equals(adminShortSalePriceTestStatusModel.isDetailNotAvailable));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.timestampNanos == null ? 0: this.timestampNanos.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.shortSalePriceTestStatus == null ? 0: this.shortSalePriceTestStatus.hashCode());
    result = 31 * result + (this.shortSalePriceTestStatusCode == null ? 0: this.shortSalePriceTestStatusCode.hashCode());
    result = 31 * result + (this.shortSalePriceTestStatusText == null ? 0: this.shortSalePriceTestStatusText.hashCode());
    result = 31 * result + (this.isShortSalePriceTestNotInEffect == null ? 0: this.isShortSalePriceTestNotInEffect.hashCode());
    result = 31 * result + (this.isShortSalePriceTestInEffect == null ? 0: this.isShortSalePriceTestInEffect.hashCode());
    result = 31 * result + (this.detail == null ? 0: this.detail.hashCode());
    result = 31 * result + (this.detailCode == null ? 0: this.detailCode.hashCode());
    result = 31 * result + (this.detailText == null ? 0: this.detailText.hashCode());
    result = 31 * result + (this.isDetailNoPriceTest == null ? 0: this.isDetailNoPriceTest.hashCode());
    result = 31 * result + (this.isDetailActivated == null ? 0: this.isDetailActivated.hashCode());
    result = 31 * result + (this.isDetailContinued == null ? 0: this.isDetailContinued.hashCode());
    result = 31 * result + (this.isDetailDeactivated == null ? 0: this.isDetailDeactivated.hashCode());
    result = 31 * result + (this.isDetailNotAvailable == null ? 0: this.isDetailNotAvailable.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminShortSalePriceTestStatusModel {\n");
    
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  timestampNanos: ").append(timestampNanos).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  shortSalePriceTestStatus: ").append(shortSalePriceTestStatus).append("\n");
    sb.append("  shortSalePriceTestStatusCode: ").append(shortSalePriceTestStatusCode).append("\n");
    sb.append("  shortSalePriceTestStatusText: ").append(shortSalePriceTestStatusText).append("\n");
    sb.append("  isShortSalePriceTestNotInEffect: ").append(isShortSalePriceTestNotInEffect).append("\n");
    sb.append("  isShortSalePriceTestInEffect: ").append(isShortSalePriceTestInEffect).append("\n");
    sb.append("  detail: ").append(detail).append("\n");
    sb.append("  detailCode: ").append(detailCode).append("\n");
    sb.append("  detailText: ").append(detailText).append("\n");
    sb.append("  isDetailNoPriceTest: ").append(isDetailNoPriceTest).append("\n");
    sb.append("  isDetailActivated: ").append(isDetailActivated).append("\n");
    sb.append("  isDetailContinued: ").append(isDetailContinued).append("\n");
    sb.append("  isDetailDeactivated: ").append(isDetailDeactivated).append("\n");
    sb.append("  isDetailNotAvailable: ").append(isDetailNotAvailable).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
