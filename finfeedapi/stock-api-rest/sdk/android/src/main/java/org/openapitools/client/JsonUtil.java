/**
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AdminAdminMessageModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminAdminMessageModel>>(){}.getType();
    }
    
    if ("AdminAuctionInformationModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminAuctionInformationModel>>(){}.getType();
    }
    
    if ("AdminOfficialPriceModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminOfficialPriceModel>>(){}.getType();
    }
    
    if ("AdminOperationalHaltStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminOperationalHaltStatusModel>>(){}.getType();
    }
    
    if ("AdminRetailLiquidityIndicatorModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminRetailLiquidityIndicatorModel>>(){}.getType();
    }
    
    if ("AdminSecurityDirectoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminSecurityDirectoryModel>>(){}.getType();
    }
    
    if ("AdminSecurityEventModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminSecurityEventModel>>(){}.getType();
    }
    
    if ("AdminShortSalePriceTestStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminShortSalePriceTestStatusModel>>(){}.getType();
    }
    
    if ("AdminSystemEventModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminSystemEventModel>>(){}.getType();
    }
    
    if ("AdminTradingStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdminTradingStatusModel>>(){}.getType();
    }
    
    if ("FinFeedAPIExchangeModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FinFeedAPIExchangeModel>>(){}.getType();
    }
    
    if ("FinFeedAPISymbolModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FinFeedAPISymbolModel>>(){}.getType();
    }
    
    if ("Level1QuoteUpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level1QuoteUpdateModel>>(){}.getType();
    }
    
    if ("Level2PriceLevelUpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level2PriceLevelUpdateModel>>(){}.getType();
    }
    
    if ("Level3AddOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3AddOrderModel>>(){}.getType();
    }
    
    if ("Level3ClearBookModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3ClearBookModel>>(){}.getType();
    }
    
    if ("Level3DeleteOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3DeleteOrderModel>>(){}.getType();
    }
    
    if ("Level3ExecutedOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3ExecutedOrderModel>>(){}.getType();
    }
    
    if ("Level3ModifyOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3ModifyOrderModel>>(){}.getType();
    }
    
    if ("Level3OrderBookModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Level3OrderBookModel>>(){}.getType();
    }
    
    if ("OHLCVExchangeTimeseriesItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<OHLCVExchangeTimeseriesItem>>(){}.getType();
    }
    
    if ("OHLCVTimeseriesItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<OHLCVTimeseriesItem>>(){}.getType();
    }
    
    if ("OHLCVTimeseriesPeriod".equalsIgnoreCase(className)) {
      return new TypeToken<List<OHLCVTimeseriesPeriod>>(){}.getType();
    }
    
    if ("TradeTradeModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradeTradeModel>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AdminAdminMessageModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminAdminMessageModel>(){}.getType();
    }
    
    if ("AdminAuctionInformationModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminAuctionInformationModel>(){}.getType();
    }
    
    if ("AdminOfficialPriceModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminOfficialPriceModel>(){}.getType();
    }
    
    if ("AdminOperationalHaltStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminOperationalHaltStatusModel>(){}.getType();
    }
    
    if ("AdminRetailLiquidityIndicatorModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminRetailLiquidityIndicatorModel>(){}.getType();
    }
    
    if ("AdminSecurityDirectoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminSecurityDirectoryModel>(){}.getType();
    }
    
    if ("AdminSecurityEventModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminSecurityEventModel>(){}.getType();
    }
    
    if ("AdminShortSalePriceTestStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminShortSalePriceTestStatusModel>(){}.getType();
    }
    
    if ("AdminSystemEventModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminSystemEventModel>(){}.getType();
    }
    
    if ("AdminTradingStatusModel".equalsIgnoreCase(className)) {
      return new TypeToken<AdminTradingStatusModel>(){}.getType();
    }
    
    if ("FinFeedAPIExchangeModel".equalsIgnoreCase(className)) {
      return new TypeToken<FinFeedAPIExchangeModel>(){}.getType();
    }
    
    if ("FinFeedAPISymbolModel".equalsIgnoreCase(className)) {
      return new TypeToken<FinFeedAPISymbolModel>(){}.getType();
    }
    
    if ("Level1QuoteUpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level1QuoteUpdateModel>(){}.getType();
    }
    
    if ("Level2PriceLevelUpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level2PriceLevelUpdateModel>(){}.getType();
    }
    
    if ("Level3AddOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3AddOrderModel>(){}.getType();
    }
    
    if ("Level3ClearBookModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3ClearBookModel>(){}.getType();
    }
    
    if ("Level3DeleteOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3DeleteOrderModel>(){}.getType();
    }
    
    if ("Level3ExecutedOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3ExecutedOrderModel>(){}.getType();
    }
    
    if ("Level3ModifyOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3ModifyOrderModel>(){}.getType();
    }
    
    if ("Level3OrderBookModel".equalsIgnoreCase(className)) {
      return new TypeToken<Level3OrderBookModel>(){}.getType();
    }
    
    if ("OHLCVExchangeTimeseriesItem".equalsIgnoreCase(className)) {
      return new TypeToken<OHLCVExchangeTimeseriesItem>(){}.getType();
    }
    
    if ("OHLCVTimeseriesItem".equalsIgnoreCase(className)) {
      return new TypeToken<OHLCVTimeseriesItem>(){}.getType();
    }
    
    if ("OHLCVTimeseriesPeriod".equalsIgnoreCase(className)) {
      return new TypeToken<OHLCVTimeseriesPeriod>(){}.getType();
    }
    
    if ("TradeTradeModel".equalsIgnoreCase(className)) {
      return new TypeToken<TradeTradeModel>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
