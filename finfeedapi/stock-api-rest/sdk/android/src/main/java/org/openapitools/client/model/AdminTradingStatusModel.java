/*
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents the response DTO for trading status information
 **/
@ApiModel(description = "Represents the response DTO for trading status information")
public class AdminTradingStatusModel {
  
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("timestamp_nanos")
  private Long timestampNanos = null;
  @SerializedName("timestamp")
  private Date timestamp = null;
  @SerializedName("is_trading_live")
  private Boolean isTradingLive = null;
  @SerializedName("is_trading_halted")
  private Boolean isTradingHalted = null;
  @SerializedName("is_trading_in_order_acceptance_period")
  private Boolean isTradingInOrderAcceptancePeriod = null;
  @SerializedName("is_trading_paused")
  private Boolean isTradingPaused = null;
  @SerializedName("is_reason_halt_news_pending")
  private Boolean isReasonHaltNewsPending = null;
  @SerializedName("is_reason_ipo_not_yet_trading")
  private Boolean isReasonIpoNotYetTrading = null;
  @SerializedName("is_reason_ipo_deferred")
  private Boolean isReasonIpoDeferred = null;
  @SerializedName("is_reason_halt_news_dissemination")
  private Boolean isReasonHaltNewsDissemination = null;
  @SerializedName("is_reason_ipo_order_acceptance_period")
  private Boolean isReasonIpoOrderAcceptancePeriod = null;
  @SerializedName("is_reason_ipo_pre_launch_period")
  private Boolean isReasonIpoPreLaunchPeriod = null;
  @SerializedName("is_reason_market_wide_circuit_breaker_level1")
  private Boolean isReasonMarketWideCircuitBreakerLevel1 = null;
  @SerializedName("is_reason_market_wide_circuit_breaker_level2")
  private Boolean isReasonMarketWideCircuitBreakerLevel2 = null;
  @SerializedName("is_reason_market_wide_circuit_breaker_level3")
  private Boolean isReasonMarketWideCircuitBreakerLevel3 = null;
  @SerializedName("is_reason_not_applicable")
  private Boolean isReasonNotApplicable = null;
  @SerializedName("is_reason_not_available")
  private Boolean isReasonNotAvailable = null;

  /**
   * The stock symbol
   **/
  @ApiModelProperty(value = "The stock symbol")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   * Original timestamp in nanoseconds since epoch
   **/
  @ApiModelProperty(value = "Original timestamp in nanoseconds since epoch")
  public Long getTimestampNanos() {
    return timestampNanos;
  }
  public void setTimestampNanos(Long timestampNanos) {
    this.timestampNanos = timestampNanos;
  }

  /**
   * Time when the trading status was recorded as DateTime
   **/
  @ApiModelProperty(value = "Time when the trading status was recorded as DateTime")
  public Date getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Gets whether the security is currently trading on IEX
   **/
  @ApiModelProperty(value = "Gets whether the security is currently trading on IEX")
  public Boolean getIsTradingLive() {
    return isTradingLive;
  }
  public void setIsTradingLive(Boolean isTradingLive) {
    this.isTradingLive = isTradingLive;
  }

  /**
   * Gets whether the security is halted across all US equity markets
   **/
  @ApiModelProperty(value = "Gets whether the security is halted across all US equity markets")
  public Boolean getIsTradingHalted() {
    return isTradingHalted;
  }
  public void setIsTradingHalted(Boolean isTradingHalted) {
    this.isTradingHalted = isTradingHalted;
  }

  /**
   * Gets whether the security is in Order Acceptance Period on IEX
   **/
  @ApiModelProperty(value = "Gets whether the security is in Order Acceptance Period on IEX")
  public Boolean getIsTradingInOrderAcceptancePeriod() {
    return isTradingInOrderAcceptancePeriod;
  }
  public void setIsTradingInOrderAcceptancePeriod(Boolean isTradingInOrderAcceptancePeriod) {
    this.isTradingInOrderAcceptancePeriod = isTradingInOrderAcceptancePeriod;
  }

  /**
   * Gets whether the security is paused and in Order Acceptance Period on IEX
   **/
  @ApiModelProperty(value = "Gets whether the security is paused and in Order Acceptance Period on IEX")
  public Boolean getIsTradingPaused() {
    return isTradingPaused;
  }
  public void setIsTradingPaused(Boolean isTradingPaused) {
    this.isTradingPaused = isTradingPaused;
  }

  /**
   * Gets whether the halt reason is News Pending
   **/
  @ApiModelProperty(value = "Gets whether the halt reason is News Pending")
  public Boolean getIsReasonHaltNewsPending() {
    return isReasonHaltNewsPending;
  }
  public void setIsReasonHaltNewsPending(Boolean isReasonHaltNewsPending) {
    this.isReasonHaltNewsPending = isReasonHaltNewsPending;
  }

  /**
   * Gets whether the halt reason is IPO Not Yet Trading
   **/
  @ApiModelProperty(value = "Gets whether the halt reason is IPO Not Yet Trading")
  public Boolean getIsReasonIpoNotYetTrading() {
    return isReasonIpoNotYetTrading;
  }
  public void setIsReasonIpoNotYetTrading(Boolean isReasonIpoNotYetTrading) {
    this.isReasonIpoNotYetTrading = isReasonIpoNotYetTrading;
  }

  /**
   * Gets whether the halt reason is IPO Deferred
   **/
  @ApiModelProperty(value = "Gets whether the halt reason is IPO Deferred")
  public Boolean getIsReasonIpoDeferred() {
    return isReasonIpoDeferred;
  }
  public void setIsReasonIpoDeferred(Boolean isReasonIpoDeferred) {
    this.isReasonIpoDeferred = isReasonIpoDeferred;
  }

  /**
   * Gets whether the order acceptance period reason is Halt News Dissemination
   **/
  @ApiModelProperty(value = "Gets whether the order acceptance period reason is Halt News Dissemination")
  public Boolean getIsReasonHaltNewsDissemination() {
    return isReasonHaltNewsDissemination;
  }
  public void setIsReasonHaltNewsDissemination(Boolean isReasonHaltNewsDissemination) {
    this.isReasonHaltNewsDissemination = isReasonHaltNewsDissemination;
  }

  /**
   * Gets whether the order acceptance period reason is IPO Order Acceptance Period
   **/
  @ApiModelProperty(value = "Gets whether the order acceptance period reason is IPO Order Acceptance Period")
  public Boolean getIsReasonIpoOrderAcceptancePeriod() {
    return isReasonIpoOrderAcceptancePeriod;
  }
  public void setIsReasonIpoOrderAcceptancePeriod(Boolean isReasonIpoOrderAcceptancePeriod) {
    this.isReasonIpoOrderAcceptancePeriod = isReasonIpoOrderAcceptancePeriod;
  }

  /**
   * Gets whether the order acceptance period reason is IPO Pre-Launch Period
   **/
  @ApiModelProperty(value = "Gets whether the order acceptance period reason is IPO Pre-Launch Period")
  public Boolean getIsReasonIpoPreLaunchPeriod() {
    return isReasonIpoPreLaunchPeriod;
  }
  public void setIsReasonIpoPreLaunchPeriod(Boolean isReasonIpoPreLaunchPeriod) {
    this.isReasonIpoPreLaunchPeriod = isReasonIpoPreLaunchPeriod;
  }

  /**
   * Gets whether the order acceptance period reason is Market-Wide Circuit Breaker Level 1 – Breached
   **/
  @ApiModelProperty(value = "Gets whether the order acceptance period reason is Market-Wide Circuit Breaker Level 1 – Breached")
  public Boolean getIsReasonMarketWideCircuitBreakerLevel1() {
    return isReasonMarketWideCircuitBreakerLevel1;
  }
  public void setIsReasonMarketWideCircuitBreakerLevel1(Boolean isReasonMarketWideCircuitBreakerLevel1) {
    this.isReasonMarketWideCircuitBreakerLevel1 = isReasonMarketWideCircuitBreakerLevel1;
  }

  /**
   * Gets whether the order acceptance period reason is Market-Wide Circuit Breaker Level 2 – Breached
   **/
  @ApiModelProperty(value = "Gets whether the order acceptance period reason is Market-Wide Circuit Breaker Level 2 – Breached")
  public Boolean getIsReasonMarketWideCircuitBreakerLevel2() {
    return isReasonMarketWideCircuitBreakerLevel2;
  }
  public void setIsReasonMarketWideCircuitBreakerLevel2(Boolean isReasonMarketWideCircuitBreakerLevel2) {
    this.isReasonMarketWideCircuitBreakerLevel2 = isReasonMarketWideCircuitBreakerLevel2;
  }

  /**
   * Gets whether the halt reason is Market-Wide Circuit Breaker Level 3 – Breached
   **/
  @ApiModelProperty(value = "Gets whether the halt reason is Market-Wide Circuit Breaker Level 3 – Breached")
  public Boolean getIsReasonMarketWideCircuitBreakerLevel3() {
    return isReasonMarketWideCircuitBreakerLevel3;
  }
  public void setIsReasonMarketWideCircuitBreakerLevel3(Boolean isReasonMarketWideCircuitBreakerLevel3) {
    this.isReasonMarketWideCircuitBreakerLevel3 = isReasonMarketWideCircuitBreakerLevel3;
  }

  /**
   * Gets whether the reason is Not Applicable
   **/
  @ApiModelProperty(value = "Gets whether the reason is Not Applicable")
  public Boolean getIsReasonNotApplicable() {
    return isReasonNotApplicable;
  }
  public void setIsReasonNotApplicable(Boolean isReasonNotApplicable) {
    this.isReasonNotApplicable = isReasonNotApplicable;
  }

  /**
   * Gets whether the halt reason is Not Available
   **/
  @ApiModelProperty(value = "Gets whether the halt reason is Not Available")
  public Boolean getIsReasonNotAvailable() {
    return isReasonNotAvailable;
  }
  public void setIsReasonNotAvailable(Boolean isReasonNotAvailable) {
    this.isReasonNotAvailable = isReasonNotAvailable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminTradingStatusModel adminTradingStatusModel = (AdminTradingStatusModel) o;
    return (this.symbol == null ? adminTradingStatusModel.symbol == null : this.symbol.equals(adminTradingStatusModel.symbol)) &&
        (this.timestampNanos == null ? adminTradingStatusModel.timestampNanos == null : this.timestampNanos.equals(adminTradingStatusModel.timestampNanos)) &&
        (this.timestamp == null ? adminTradingStatusModel.timestamp == null : this.timestamp.equals(adminTradingStatusModel.timestamp)) &&
        (this.isTradingLive == null ? adminTradingStatusModel.isTradingLive == null : this.isTradingLive.equals(adminTradingStatusModel.isTradingLive)) &&
        (this.isTradingHalted == null ? adminTradingStatusModel.isTradingHalted == null : this.isTradingHalted.equals(adminTradingStatusModel.isTradingHalted)) &&
        (this.isTradingInOrderAcceptancePeriod == null ? adminTradingStatusModel.isTradingInOrderAcceptancePeriod == null : this.isTradingInOrderAcceptancePeriod.equals(adminTradingStatusModel.isTradingInOrderAcceptancePeriod)) &&
        (this.isTradingPaused == null ? adminTradingStatusModel.isTradingPaused == null : this.isTradingPaused.equals(adminTradingStatusModel.isTradingPaused)) &&
        (this.isReasonHaltNewsPending == null ? adminTradingStatusModel.isReasonHaltNewsPending == null : this.isReasonHaltNewsPending.equals(adminTradingStatusModel.isReasonHaltNewsPending)) &&
        (this.isReasonIpoNotYetTrading == null ? adminTradingStatusModel.isReasonIpoNotYetTrading == null : this.isReasonIpoNotYetTrading.equals(adminTradingStatusModel.isReasonIpoNotYetTrading)) &&
        (this.isReasonIpoDeferred == null ? adminTradingStatusModel.isReasonIpoDeferred == null : this.isReasonIpoDeferred.equals(adminTradingStatusModel.isReasonIpoDeferred)) &&
        (this.isReasonHaltNewsDissemination == null ? adminTradingStatusModel.isReasonHaltNewsDissemination == null : this.isReasonHaltNewsDissemination.equals(adminTradingStatusModel.isReasonHaltNewsDissemination)) &&
        (this.isReasonIpoOrderAcceptancePeriod == null ? adminTradingStatusModel.isReasonIpoOrderAcceptancePeriod == null : this.isReasonIpoOrderAcceptancePeriod.equals(adminTradingStatusModel.isReasonIpoOrderAcceptancePeriod)) &&
        (this.isReasonIpoPreLaunchPeriod == null ? adminTradingStatusModel.isReasonIpoPreLaunchPeriod == null : this.isReasonIpoPreLaunchPeriod.equals(adminTradingStatusModel.isReasonIpoPreLaunchPeriod)) &&
        (this.isReasonMarketWideCircuitBreakerLevel1 == null ? adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel1 == null : this.isReasonMarketWideCircuitBreakerLevel1.equals(adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel1)) &&
        (this.isReasonMarketWideCircuitBreakerLevel2 == null ? adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel2 == null : this.isReasonMarketWideCircuitBreakerLevel2.equals(adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel2)) &&
        (this.isReasonMarketWideCircuitBreakerLevel3 == null ? adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel3 == null : this.isReasonMarketWideCircuitBreakerLevel3.equals(adminTradingStatusModel.isReasonMarketWideCircuitBreakerLevel3)) &&
        (this.isReasonNotApplicable == null ? adminTradingStatusModel.isReasonNotApplicable == null : this.isReasonNotApplicable.equals(adminTradingStatusModel.isReasonNotApplicable)) &&
        (this.isReasonNotAvailable == null ? adminTradingStatusModel.isReasonNotAvailable == null : this.isReasonNotAvailable.equals(adminTradingStatusModel.isReasonNotAvailable));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.timestampNanos == null ? 0: this.timestampNanos.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.isTradingLive == null ? 0: this.isTradingLive.hashCode());
    result = 31 * result + (this.isTradingHalted == null ? 0: this.isTradingHalted.hashCode());
    result = 31 * result + (this.isTradingInOrderAcceptancePeriod == null ? 0: this.isTradingInOrderAcceptancePeriod.hashCode());
    result = 31 * result + (this.isTradingPaused == null ? 0: this.isTradingPaused.hashCode());
    result = 31 * result + (this.isReasonHaltNewsPending == null ? 0: this.isReasonHaltNewsPending.hashCode());
    result = 31 * result + (this.isReasonIpoNotYetTrading == null ? 0: this.isReasonIpoNotYetTrading.hashCode());
    result = 31 * result + (this.isReasonIpoDeferred == null ? 0: this.isReasonIpoDeferred.hashCode());
    result = 31 * result + (this.isReasonHaltNewsDissemination == null ? 0: this.isReasonHaltNewsDissemination.hashCode());
    result = 31 * result + (this.isReasonIpoOrderAcceptancePeriod == null ? 0: this.isReasonIpoOrderAcceptancePeriod.hashCode());
    result = 31 * result + (this.isReasonIpoPreLaunchPeriod == null ? 0: this.isReasonIpoPreLaunchPeriod.hashCode());
    result = 31 * result + (this.isReasonMarketWideCircuitBreakerLevel1 == null ? 0: this.isReasonMarketWideCircuitBreakerLevel1.hashCode());
    result = 31 * result + (this.isReasonMarketWideCircuitBreakerLevel2 == null ? 0: this.isReasonMarketWideCircuitBreakerLevel2.hashCode());
    result = 31 * result + (this.isReasonMarketWideCircuitBreakerLevel3 == null ? 0: this.isReasonMarketWideCircuitBreakerLevel3.hashCode());
    result = 31 * result + (this.isReasonNotApplicable == null ? 0: this.isReasonNotApplicable.hashCode());
    result = 31 * result + (this.isReasonNotAvailable == null ? 0: this.isReasonNotAvailable.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminTradingStatusModel {\n");
    
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  timestampNanos: ").append(timestampNanos).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  isTradingLive: ").append(isTradingLive).append("\n");
    sb.append("  isTradingHalted: ").append(isTradingHalted).append("\n");
    sb.append("  isTradingInOrderAcceptancePeriod: ").append(isTradingInOrderAcceptancePeriod).append("\n");
    sb.append("  isTradingPaused: ").append(isTradingPaused).append("\n");
    sb.append("  isReasonHaltNewsPending: ").append(isReasonHaltNewsPending).append("\n");
    sb.append("  isReasonIpoNotYetTrading: ").append(isReasonIpoNotYetTrading).append("\n");
    sb.append("  isReasonIpoDeferred: ").append(isReasonIpoDeferred).append("\n");
    sb.append("  isReasonHaltNewsDissemination: ").append(isReasonHaltNewsDissemination).append("\n");
    sb.append("  isReasonIpoOrderAcceptancePeriod: ").append(isReasonIpoOrderAcceptancePeriod).append("\n");
    sb.append("  isReasonIpoPreLaunchPeriod: ").append(isReasonIpoPreLaunchPeriod).append("\n");
    sb.append("  isReasonMarketWideCircuitBreakerLevel1: ").append(isReasonMarketWideCircuitBreakerLevel1).append("\n");
    sb.append("  isReasonMarketWideCircuitBreakerLevel2: ").append(isReasonMarketWideCircuitBreakerLevel2).append("\n");
    sb.append("  isReasonMarketWideCircuitBreakerLevel3: ").append(isReasonMarketWideCircuitBreakerLevel3).append("\n");
    sb.append("  isReasonNotApplicable: ").append(isReasonNotApplicable).append("\n");
    sb.append("  isReasonNotAvailable: ").append(isReasonNotAvailable).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
