/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FinFeedAPI_SymbolModel.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_FinFeedAPI_SymbolModel_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_FinFeedAPI_SymbolModel_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include "CppRestOpenAPIClient/AnyType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  FinFeedAPI_SymbolModel
    : public ModelBase
{
public:
    FinFeedAPI_SymbolModel();
    virtual ~FinFeedAPI_SymbolModel();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// FinFeedAPI_SymbolModel members


    utility::string_t getSymbolId() const;
    bool symbolIdIsSet() const;
    void unsetSymbol_id();
    void setSymbolId(const utility::string_t& value);

    utility::string_t getExchangeId() const;
    bool exchangeIdIsSet() const;
    void unsetExchange_id();
    void setExchangeId(const utility::string_t& value);

    utility::string_t getSecurityCategory() const;
    bool securityCategoryIsSet() const;
    void unsetSecurity_category();
    void setSecurityCategory(const utility::string_t& value);

    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(const utility::string_t& value);

    utility::string_t getDate() const;
    bool dateIsSet() const;
    void unsetdate();
    void setDate(const utility::string_t& value);

    utility::string_t getAssetClass() const;
    bool assetClassIsSet() const;
    void unsetAsset_class();
    void setAssetClass(const utility::string_t& value);


protected:
    utility::string_t m_Symbol_id;
    bool m_Symbol_idIsSet;

    utility::string_t m_Exchange_id;
    bool m_Exchange_idIsSet;

    utility::string_t m_Security_category;
    bool m_Security_categoryIsSet;

    utility::string_t m_Name;
    bool m_NameIsSet;

    utility::string_t m_date;
    bool m_dateIsSet;

    utility::string_t m_Asset_class;
    bool m_Asset_classIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_FinFeedAPI_SymbolModel_H_ */
