/*
FinFeedAPI Stock REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Level3ModifyOrderModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Level3ModifyOrderModel{}

// Level3ModifyOrderModel Represents the response DTO for order modify information
type Level3ModifyOrderModel struct {
	// The stock symbol
	Symbol NullableString `json:"symbol,omitempty"`
	// Original timestamp in nanoseconds since epoch
	TimestampNanos *int64 `json:"timestamp_nanos,omitempty"`
	// Time when the order was modified as DateTime (UTC)
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// Order identifier reference
	OrderIdReference *int64 `json:"order_id_reference,omitempty"`
	// Indicates if priority is reseted
	IsPriorityReset *bool `json:"is_priority_reset,omitempty"`
	// New total quoted size in number of shares
	Size *int32 `json:"size,omitempty"`
	// Price as decimal
	Price *float64 `json:"price,omitempty"`
}

// NewLevel3ModifyOrderModel instantiates a new Level3ModifyOrderModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLevel3ModifyOrderModel() *Level3ModifyOrderModel {
	this := Level3ModifyOrderModel{}
	return &this
}

// NewLevel3ModifyOrderModelWithDefaults instantiates a new Level3ModifyOrderModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLevel3ModifyOrderModelWithDefaults() *Level3ModifyOrderModel {
	this := Level3ModifyOrderModel{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Level3ModifyOrderModel) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Level3ModifyOrderModel) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *Level3ModifyOrderModel) SetSymbol(v string) {
	o.Symbol.Set(&v)
}
// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *Level3ModifyOrderModel) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *Level3ModifyOrderModel) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetTimestampNanos returns the TimestampNanos field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetTimestampNanos() int64 {
	if o == nil || IsNil(o.TimestampNanos) {
		var ret int64
		return ret
	}
	return *o.TimestampNanos
}

// GetTimestampNanosOk returns a tuple with the TimestampNanos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetTimestampNanosOk() (*int64, bool) {
	if o == nil || IsNil(o.TimestampNanos) {
		return nil, false
	}
	return o.TimestampNanos, true
}

// HasTimestampNanos returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasTimestampNanos() bool {
	if o != nil && !IsNil(o.TimestampNanos) {
		return true
	}

	return false
}

// SetTimestampNanos gets a reference to the given int64 and assigns it to the TimestampNanos field.
func (o *Level3ModifyOrderModel) SetTimestampNanos(v int64) {
	o.TimestampNanos = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *Level3ModifyOrderModel) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetOrderIdReference returns the OrderIdReference field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetOrderIdReference() int64 {
	if o == nil || IsNil(o.OrderIdReference) {
		var ret int64
		return ret
	}
	return *o.OrderIdReference
}

// GetOrderIdReferenceOk returns a tuple with the OrderIdReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetOrderIdReferenceOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderIdReference) {
		return nil, false
	}
	return o.OrderIdReference, true
}

// HasOrderIdReference returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasOrderIdReference() bool {
	if o != nil && !IsNil(o.OrderIdReference) {
		return true
	}

	return false
}

// SetOrderIdReference gets a reference to the given int64 and assigns it to the OrderIdReference field.
func (o *Level3ModifyOrderModel) SetOrderIdReference(v int64) {
	o.OrderIdReference = &v
}

// GetIsPriorityReset returns the IsPriorityReset field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetIsPriorityReset() bool {
	if o == nil || IsNil(o.IsPriorityReset) {
		var ret bool
		return ret
	}
	return *o.IsPriorityReset
}

// GetIsPriorityResetOk returns a tuple with the IsPriorityReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetIsPriorityResetOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPriorityReset) {
		return nil, false
	}
	return o.IsPriorityReset, true
}

// HasIsPriorityReset returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasIsPriorityReset() bool {
	if o != nil && !IsNil(o.IsPriorityReset) {
		return true
	}

	return false
}

// SetIsPriorityReset gets a reference to the given bool and assigns it to the IsPriorityReset field.
func (o *Level3ModifyOrderModel) SetIsPriorityReset(v bool) {
	o.IsPriorityReset = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *Level3ModifyOrderModel) SetSize(v int32) {
	o.Size = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Level3ModifyOrderModel) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Level3ModifyOrderModel) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Level3ModifyOrderModel) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *Level3ModifyOrderModel) SetPrice(v float64) {
	o.Price = &v
}

func (o Level3ModifyOrderModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Level3ModifyOrderModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if !IsNil(o.TimestampNanos) {
		toSerialize["timestamp_nanos"] = o.TimestampNanos
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.OrderIdReference) {
		toSerialize["order_id_reference"] = o.OrderIdReference
	}
	if !IsNil(o.IsPriorityReset) {
		toSerialize["is_priority_reset"] = o.IsPriorityReset
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableLevel3ModifyOrderModel struct {
	value *Level3ModifyOrderModel
	isSet bool
}

func (v NullableLevel3ModifyOrderModel) Get() *Level3ModifyOrderModel {
	return v.value
}

func (v *NullableLevel3ModifyOrderModel) Set(val *Level3ModifyOrderModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLevel3ModifyOrderModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLevel3ModifyOrderModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLevel3ModifyOrderModel(val *Level3ModifyOrderModel) *NullableLevel3ModifyOrderModel {
	return &NullableLevel3ModifyOrderModel{value: val, isSet: true}
}

func (v NullableLevel3ModifyOrderModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLevel3ModifyOrderModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


