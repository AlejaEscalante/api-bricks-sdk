/*
FinFeedAPI Stock REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AdminShortSalePriceTestStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminShortSalePriceTestStatusModel{}

// AdminShortSalePriceTestStatusModel Represents the response DTO for short sale price test status information
type AdminShortSalePriceTestStatusModel struct {
	// The stock symbol
	Symbol NullableString `json:"symbol,omitempty"`
	// Original timestamp in nanoseconds since epoch
	TimestampNanos *int64 `json:"timestamp_nanos,omitempty"`
	// Time when the short sale price test status was recorded as DateTime
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// Short sale price test status as byte value
	ShortSalePriceTestStatus *int32 `json:"short_sale_price_test_status,omitempty"`
	// Short sale price test status as hex string
	ShortSalePriceTestStatusCode NullableString `json:"short_sale_price_test_status_code,omitempty"`
	// Human-readable description of the short sale price test status
	ShortSalePriceTestStatusText NullableString `json:"short_sale_price_test_status_text,omitempty"`
	// Indicates if the short sale price test is not in effect
	IsShortSalePriceTestNotInEffect *bool `json:"is_short_sale_price_test_not_in_effect,omitempty"`
	// Indicates if the short sale price test is in effect
	IsShortSalePriceTestInEffect *bool `json:"is_short_sale_price_test_in_effect,omitempty"`
	// Detail of the short sale price test as byte value
	Detail *int32 `json:"detail,omitempty"`
	// Detail of the short sale price test as character string
	DetailCode NullableString `json:"detail_code,omitempty"`
	// Human-readable description of the short sale price test detail
	DetailText NullableString `json:"detail_text,omitempty"`
	// Indicates if there is no price test in place
	IsDetailNoPriceTest *bool `json:"is_detail_no_price_test,omitempty"`
	// Indicates if the short sale price test restriction is in effect due to an intraday price drop
	IsDetailActivated *bool `json:"is_detail_activated,omitempty"`
	// Indicates if the short sale price test restriction remains in effect from prior day
	IsDetailContinued *bool `json:"is_detail_continued,omitempty"`
	// Indicates if the short sale price test restriction is deactivated
	IsDetailDeactivated *bool `json:"is_detail_deactivated,omitempty"`
	// Indicates if the detail is not available
	IsDetailNotAvailable *bool `json:"is_detail_not_available,omitempty"`
}

// NewAdminShortSalePriceTestStatusModel instantiates a new AdminShortSalePriceTestStatusModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminShortSalePriceTestStatusModel() *AdminShortSalePriceTestStatusModel {
	this := AdminShortSalePriceTestStatusModel{}
	return &this
}

// NewAdminShortSalePriceTestStatusModelWithDefaults instantiates a new AdminShortSalePriceTestStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminShortSalePriceTestStatusModelWithDefaults() *AdminShortSalePriceTestStatusModel {
	this := AdminShortSalePriceTestStatusModel{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminShortSalePriceTestStatusModel) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminShortSalePriceTestStatusModel) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *AdminShortSalePriceTestStatusModel) SetSymbol(v string) {
	o.Symbol.Set(&v)
}
// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *AdminShortSalePriceTestStatusModel) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *AdminShortSalePriceTestStatusModel) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetTimestampNanos returns the TimestampNanos field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetTimestampNanos() int64 {
	if o == nil || IsNil(o.TimestampNanos) {
		var ret int64
		return ret
	}
	return *o.TimestampNanos
}

// GetTimestampNanosOk returns a tuple with the TimestampNanos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetTimestampNanosOk() (*int64, bool) {
	if o == nil || IsNil(o.TimestampNanos) {
		return nil, false
	}
	return o.TimestampNanos, true
}

// HasTimestampNanos returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasTimestampNanos() bool {
	if o != nil && !IsNil(o.TimestampNanos) {
		return true
	}

	return false
}

// SetTimestampNanos gets a reference to the given int64 and assigns it to the TimestampNanos field.
func (o *AdminShortSalePriceTestStatusModel) SetTimestampNanos(v int64) {
	o.TimestampNanos = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *AdminShortSalePriceTestStatusModel) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetShortSalePriceTestStatus returns the ShortSalePriceTestStatus field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatus() int32 {
	if o == nil || IsNil(o.ShortSalePriceTestStatus) {
		var ret int32
		return ret
	}
	return *o.ShortSalePriceTestStatus
}

// GetShortSalePriceTestStatusOk returns a tuple with the ShortSalePriceTestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.ShortSalePriceTestStatus) {
		return nil, false
	}
	return o.ShortSalePriceTestStatus, true
}

// HasShortSalePriceTestStatus returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasShortSalePriceTestStatus() bool {
	if o != nil && !IsNil(o.ShortSalePriceTestStatus) {
		return true
	}

	return false
}

// SetShortSalePriceTestStatus gets a reference to the given int32 and assigns it to the ShortSalePriceTestStatus field.
func (o *AdminShortSalePriceTestStatusModel) SetShortSalePriceTestStatus(v int32) {
	o.ShortSalePriceTestStatus = &v
}

// GetShortSalePriceTestStatusCode returns the ShortSalePriceTestStatusCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatusCode() string {
	if o == nil || IsNil(o.ShortSalePriceTestStatusCode.Get()) {
		var ret string
		return ret
	}
	return *o.ShortSalePriceTestStatusCode.Get()
}

// GetShortSalePriceTestStatusCodeOk returns a tuple with the ShortSalePriceTestStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatusCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortSalePriceTestStatusCode.Get(), o.ShortSalePriceTestStatusCode.IsSet()
}

// HasShortSalePriceTestStatusCode returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasShortSalePriceTestStatusCode() bool {
	if o != nil && o.ShortSalePriceTestStatusCode.IsSet() {
		return true
	}

	return false
}

// SetShortSalePriceTestStatusCode gets a reference to the given NullableString and assigns it to the ShortSalePriceTestStatusCode field.
func (o *AdminShortSalePriceTestStatusModel) SetShortSalePriceTestStatusCode(v string) {
	o.ShortSalePriceTestStatusCode.Set(&v)
}
// SetShortSalePriceTestStatusCodeNil sets the value for ShortSalePriceTestStatusCode to be an explicit nil
func (o *AdminShortSalePriceTestStatusModel) SetShortSalePriceTestStatusCodeNil() {
	o.ShortSalePriceTestStatusCode.Set(nil)
}

// UnsetShortSalePriceTestStatusCode ensures that no value is present for ShortSalePriceTestStatusCode, not even an explicit nil
func (o *AdminShortSalePriceTestStatusModel) UnsetShortSalePriceTestStatusCode() {
	o.ShortSalePriceTestStatusCode.Unset()
}

// GetShortSalePriceTestStatusText returns the ShortSalePriceTestStatusText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatusText() string {
	if o == nil || IsNil(o.ShortSalePriceTestStatusText.Get()) {
		var ret string
		return ret
	}
	return *o.ShortSalePriceTestStatusText.Get()
}

// GetShortSalePriceTestStatusTextOk returns a tuple with the ShortSalePriceTestStatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminShortSalePriceTestStatusModel) GetShortSalePriceTestStatusTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortSalePriceTestStatusText.Get(), o.ShortSalePriceTestStatusText.IsSet()
}

// HasShortSalePriceTestStatusText returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasShortSalePriceTestStatusText() bool {
	if o != nil && o.ShortSalePriceTestStatusText.IsSet() {
		return true
	}

	return false
}

// SetShortSalePriceTestStatusText gets a reference to the given NullableString and assigns it to the ShortSalePriceTestStatusText field.
func (o *AdminShortSalePriceTestStatusModel) SetShortSalePriceTestStatusText(v string) {
	o.ShortSalePriceTestStatusText.Set(&v)
}
// SetShortSalePriceTestStatusTextNil sets the value for ShortSalePriceTestStatusText to be an explicit nil
func (o *AdminShortSalePriceTestStatusModel) SetShortSalePriceTestStatusTextNil() {
	o.ShortSalePriceTestStatusText.Set(nil)
}

// UnsetShortSalePriceTestStatusText ensures that no value is present for ShortSalePriceTestStatusText, not even an explicit nil
func (o *AdminShortSalePriceTestStatusModel) UnsetShortSalePriceTestStatusText() {
	o.ShortSalePriceTestStatusText.Unset()
}

// GetIsShortSalePriceTestNotInEffect returns the IsShortSalePriceTestNotInEffect field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsShortSalePriceTestNotInEffect() bool {
	if o == nil || IsNil(o.IsShortSalePriceTestNotInEffect) {
		var ret bool
		return ret
	}
	return *o.IsShortSalePriceTestNotInEffect
}

// GetIsShortSalePriceTestNotInEffectOk returns a tuple with the IsShortSalePriceTestNotInEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsShortSalePriceTestNotInEffectOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShortSalePriceTestNotInEffect) {
		return nil, false
	}
	return o.IsShortSalePriceTestNotInEffect, true
}

// HasIsShortSalePriceTestNotInEffect returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsShortSalePriceTestNotInEffect() bool {
	if o != nil && !IsNil(o.IsShortSalePriceTestNotInEffect) {
		return true
	}

	return false
}

// SetIsShortSalePriceTestNotInEffect gets a reference to the given bool and assigns it to the IsShortSalePriceTestNotInEffect field.
func (o *AdminShortSalePriceTestStatusModel) SetIsShortSalePriceTestNotInEffect(v bool) {
	o.IsShortSalePriceTestNotInEffect = &v
}

// GetIsShortSalePriceTestInEffect returns the IsShortSalePriceTestInEffect field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsShortSalePriceTestInEffect() bool {
	if o == nil || IsNil(o.IsShortSalePriceTestInEffect) {
		var ret bool
		return ret
	}
	return *o.IsShortSalePriceTestInEffect
}

// GetIsShortSalePriceTestInEffectOk returns a tuple with the IsShortSalePriceTestInEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsShortSalePriceTestInEffectOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShortSalePriceTestInEffect) {
		return nil, false
	}
	return o.IsShortSalePriceTestInEffect, true
}

// HasIsShortSalePriceTestInEffect returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsShortSalePriceTestInEffect() bool {
	if o != nil && !IsNil(o.IsShortSalePriceTestInEffect) {
		return true
	}

	return false
}

// SetIsShortSalePriceTestInEffect gets a reference to the given bool and assigns it to the IsShortSalePriceTestInEffect field.
func (o *AdminShortSalePriceTestStatusModel) SetIsShortSalePriceTestInEffect(v bool) {
	o.IsShortSalePriceTestInEffect = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetDetail() int32 {
	if o == nil || IsNil(o.Detail) {
		var ret int32
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetDetailOk() (*int32, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given int32 and assigns it to the Detail field.
func (o *AdminShortSalePriceTestStatusModel) SetDetail(v int32) {
	o.Detail = &v
}

// GetDetailCode returns the DetailCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminShortSalePriceTestStatusModel) GetDetailCode() string {
	if o == nil || IsNil(o.DetailCode.Get()) {
		var ret string
		return ret
	}
	return *o.DetailCode.Get()
}

// GetDetailCodeOk returns a tuple with the DetailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminShortSalePriceTestStatusModel) GetDetailCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DetailCode.Get(), o.DetailCode.IsSet()
}

// HasDetailCode returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasDetailCode() bool {
	if o != nil && o.DetailCode.IsSet() {
		return true
	}

	return false
}

// SetDetailCode gets a reference to the given NullableString and assigns it to the DetailCode field.
func (o *AdminShortSalePriceTestStatusModel) SetDetailCode(v string) {
	o.DetailCode.Set(&v)
}
// SetDetailCodeNil sets the value for DetailCode to be an explicit nil
func (o *AdminShortSalePriceTestStatusModel) SetDetailCodeNil() {
	o.DetailCode.Set(nil)
}

// UnsetDetailCode ensures that no value is present for DetailCode, not even an explicit nil
func (o *AdminShortSalePriceTestStatusModel) UnsetDetailCode() {
	o.DetailCode.Unset()
}

// GetDetailText returns the DetailText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminShortSalePriceTestStatusModel) GetDetailText() string {
	if o == nil || IsNil(o.DetailText.Get()) {
		var ret string
		return ret
	}
	return *o.DetailText.Get()
}

// GetDetailTextOk returns a tuple with the DetailText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminShortSalePriceTestStatusModel) GetDetailTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DetailText.Get(), o.DetailText.IsSet()
}

// HasDetailText returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasDetailText() bool {
	if o != nil && o.DetailText.IsSet() {
		return true
	}

	return false
}

// SetDetailText gets a reference to the given NullableString and assigns it to the DetailText field.
func (o *AdminShortSalePriceTestStatusModel) SetDetailText(v string) {
	o.DetailText.Set(&v)
}
// SetDetailTextNil sets the value for DetailText to be an explicit nil
func (o *AdminShortSalePriceTestStatusModel) SetDetailTextNil() {
	o.DetailText.Set(nil)
}

// UnsetDetailText ensures that no value is present for DetailText, not even an explicit nil
func (o *AdminShortSalePriceTestStatusModel) UnsetDetailText() {
	o.DetailText.Unset()
}

// GetIsDetailNoPriceTest returns the IsDetailNoPriceTest field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailNoPriceTest() bool {
	if o == nil || IsNil(o.IsDetailNoPriceTest) {
		var ret bool
		return ret
	}
	return *o.IsDetailNoPriceTest
}

// GetIsDetailNoPriceTestOk returns a tuple with the IsDetailNoPriceTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailNoPriceTestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetailNoPriceTest) {
		return nil, false
	}
	return o.IsDetailNoPriceTest, true
}

// HasIsDetailNoPriceTest returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsDetailNoPriceTest() bool {
	if o != nil && !IsNil(o.IsDetailNoPriceTest) {
		return true
	}

	return false
}

// SetIsDetailNoPriceTest gets a reference to the given bool and assigns it to the IsDetailNoPriceTest field.
func (o *AdminShortSalePriceTestStatusModel) SetIsDetailNoPriceTest(v bool) {
	o.IsDetailNoPriceTest = &v
}

// GetIsDetailActivated returns the IsDetailActivated field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailActivated() bool {
	if o == nil || IsNil(o.IsDetailActivated) {
		var ret bool
		return ret
	}
	return *o.IsDetailActivated
}

// GetIsDetailActivatedOk returns a tuple with the IsDetailActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailActivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetailActivated) {
		return nil, false
	}
	return o.IsDetailActivated, true
}

// HasIsDetailActivated returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsDetailActivated() bool {
	if o != nil && !IsNil(o.IsDetailActivated) {
		return true
	}

	return false
}

// SetIsDetailActivated gets a reference to the given bool and assigns it to the IsDetailActivated field.
func (o *AdminShortSalePriceTestStatusModel) SetIsDetailActivated(v bool) {
	o.IsDetailActivated = &v
}

// GetIsDetailContinued returns the IsDetailContinued field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailContinued() bool {
	if o == nil || IsNil(o.IsDetailContinued) {
		var ret bool
		return ret
	}
	return *o.IsDetailContinued
}

// GetIsDetailContinuedOk returns a tuple with the IsDetailContinued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailContinuedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetailContinued) {
		return nil, false
	}
	return o.IsDetailContinued, true
}

// HasIsDetailContinued returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsDetailContinued() bool {
	if o != nil && !IsNil(o.IsDetailContinued) {
		return true
	}

	return false
}

// SetIsDetailContinued gets a reference to the given bool and assigns it to the IsDetailContinued field.
func (o *AdminShortSalePriceTestStatusModel) SetIsDetailContinued(v bool) {
	o.IsDetailContinued = &v
}

// GetIsDetailDeactivated returns the IsDetailDeactivated field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailDeactivated() bool {
	if o == nil || IsNil(o.IsDetailDeactivated) {
		var ret bool
		return ret
	}
	return *o.IsDetailDeactivated
}

// GetIsDetailDeactivatedOk returns a tuple with the IsDetailDeactivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailDeactivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetailDeactivated) {
		return nil, false
	}
	return o.IsDetailDeactivated, true
}

// HasIsDetailDeactivated returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsDetailDeactivated() bool {
	if o != nil && !IsNil(o.IsDetailDeactivated) {
		return true
	}

	return false
}

// SetIsDetailDeactivated gets a reference to the given bool and assigns it to the IsDetailDeactivated field.
func (o *AdminShortSalePriceTestStatusModel) SetIsDetailDeactivated(v bool) {
	o.IsDetailDeactivated = &v
}

// GetIsDetailNotAvailable returns the IsDetailNotAvailable field value if set, zero value otherwise.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailNotAvailable() bool {
	if o == nil || IsNil(o.IsDetailNotAvailable) {
		var ret bool
		return ret
	}
	return *o.IsDetailNotAvailable
}

// GetIsDetailNotAvailableOk returns a tuple with the IsDetailNotAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminShortSalePriceTestStatusModel) GetIsDetailNotAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetailNotAvailable) {
		return nil, false
	}
	return o.IsDetailNotAvailable, true
}

// HasIsDetailNotAvailable returns a boolean if a field has been set.
func (o *AdminShortSalePriceTestStatusModel) HasIsDetailNotAvailable() bool {
	if o != nil && !IsNil(o.IsDetailNotAvailable) {
		return true
	}

	return false
}

// SetIsDetailNotAvailable gets a reference to the given bool and assigns it to the IsDetailNotAvailable field.
func (o *AdminShortSalePriceTestStatusModel) SetIsDetailNotAvailable(v bool) {
	o.IsDetailNotAvailable = &v
}

func (o AdminShortSalePriceTestStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminShortSalePriceTestStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if !IsNil(o.TimestampNanos) {
		toSerialize["timestamp_nanos"] = o.TimestampNanos
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.ShortSalePriceTestStatus) {
		toSerialize["short_sale_price_test_status"] = o.ShortSalePriceTestStatus
	}
	if o.ShortSalePriceTestStatusCode.IsSet() {
		toSerialize["short_sale_price_test_status_code"] = o.ShortSalePriceTestStatusCode.Get()
	}
	if o.ShortSalePriceTestStatusText.IsSet() {
		toSerialize["short_sale_price_test_status_text"] = o.ShortSalePriceTestStatusText.Get()
	}
	if !IsNil(o.IsShortSalePriceTestNotInEffect) {
		toSerialize["is_short_sale_price_test_not_in_effect"] = o.IsShortSalePriceTestNotInEffect
	}
	if !IsNil(o.IsShortSalePriceTestInEffect) {
		toSerialize["is_short_sale_price_test_in_effect"] = o.IsShortSalePriceTestInEffect
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if o.DetailCode.IsSet() {
		toSerialize["detail_code"] = o.DetailCode.Get()
	}
	if o.DetailText.IsSet() {
		toSerialize["detail_text"] = o.DetailText.Get()
	}
	if !IsNil(o.IsDetailNoPriceTest) {
		toSerialize["is_detail_no_price_test"] = o.IsDetailNoPriceTest
	}
	if !IsNil(o.IsDetailActivated) {
		toSerialize["is_detail_activated"] = o.IsDetailActivated
	}
	if !IsNil(o.IsDetailContinued) {
		toSerialize["is_detail_continued"] = o.IsDetailContinued
	}
	if !IsNil(o.IsDetailDeactivated) {
		toSerialize["is_detail_deactivated"] = o.IsDetailDeactivated
	}
	if !IsNil(o.IsDetailNotAvailable) {
		toSerialize["is_detail_not_available"] = o.IsDetailNotAvailable
	}
	return toSerialize, nil
}

type NullableAdminShortSalePriceTestStatusModel struct {
	value *AdminShortSalePriceTestStatusModel
	isSet bool
}

func (v NullableAdminShortSalePriceTestStatusModel) Get() *AdminShortSalePriceTestStatusModel {
	return v.value
}

func (v *NullableAdminShortSalePriceTestStatusModel) Set(val *AdminShortSalePriceTestStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminShortSalePriceTestStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminShortSalePriceTestStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminShortSalePriceTestStatusModel(val *AdminShortSalePriceTestStatusModel) *NullableAdminShortSalePriceTestStatusModel {
	return &NullableAdminShortSalePriceTestStatusModel{value: val, isSet: true}
}

func (v NullableAdminShortSalePriceTestStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminShortSalePriceTestStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


