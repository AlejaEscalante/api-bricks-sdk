--  FinFeedAPI Stock REST API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: v1
--  Contact: support@apibricks.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.14.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");



   type AdminAuctionInformationModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Auction_Type : Swagger.Nullable_Integer;
       Auction_Type_Code : Swagger.Nullable_UString;
       Auction_Type_Text : Swagger.Nullable_UString;
       Is_Auction_Type_Opening : Swagger.Nullable_Boolean;
       Is_Auction_Type_Closing : Swagger.Nullable_Boolean;
       Is_Auction_Type_Ipo : Swagger.Nullable_Boolean;
       Is_Auction_Type_Halt : Swagger.Nullable_Boolean;
       Is_Auction_Type_Volatility : Swagger.Nullable_Boolean;
       Paired_Shares : Swagger.Nullable_Integer;
       Reference_Price : Swagger.Number;
       Indicative_Clearing_Price : Swagger.Number;
       Imbalance_Shares : Swagger.Nullable_Integer;
       Imbalance_Side : Swagger.Nullable_Integer;
       Imbalance_Side_Code : Swagger.Nullable_UString;
       Imbalance_Side_Text : Swagger.Nullable_UString;
       Is_Imbalance_Side_Buy : Swagger.Nullable_Boolean;
       Is_Imbalance_Side_Sell : Swagger.Nullable_Boolean;
       Is_Imbalance_Side_None : Swagger.Nullable_Boolean;
       Extension_Number : Swagger.Nullable_Integer;
       Scheduled_Auction_Time_Seconds : Swagger.Nullable_Integer;
       Scheduled_Auction_Time : Swagger.Nullable_Date;
       Auction_Book_Clearing_Price : Swagger.Number;
       Collar_Reference_Price : Swagger.Number;
       Lower_Auction_Collar : Swagger.Number;
       Upper_Auction_Collar : Swagger.Number;
     end record;


   package AdminAuctionInformationModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminAuctionInformationModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminAuctionInformationModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminAuctionInformationModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminAuctionInformationModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminAuctionInformationModel_Type_Vectors.Vector);



   type AdminOfficialPriceModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Price_Type : Swagger.Nullable_Integer;
       Price_Type_Code : Swagger.Nullable_UString;
       Price_Type_Text : Swagger.Nullable_UString;
       Is_Price_Type_Opening : Swagger.Nullable_Boolean;
       Is_Price_Type_Closing : Swagger.Nullable_Boolean;
       Official_Price : Swagger.Number;
     end record;


   package AdminOfficialPriceModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminOfficialPriceModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminOfficialPriceModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminOfficialPriceModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminOfficialPriceModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminOfficialPriceModel_Type_Vectors.Vector);



   type AdminOperationalHaltStatusModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Operational_Halt_Status : Swagger.Nullable_Integer;
       Operational_Halt_Status_Code : Swagger.Nullable_UString;
       Operational_Halt_Status_Text : Swagger.Nullable_UString;
       Is_Operationally_Halted : Swagger.Nullable_Boolean;
       Is_Not_Operationally_Halted : Swagger.Nullable_Boolean;
     end record;


   package AdminOperationalHaltStatusModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminOperationalHaltStatusModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminOperationalHaltStatusModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminOperationalHaltStatusModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminOperationalHaltStatusModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminOperationalHaltStatusModel_Type_Vectors.Vector);



   type AdminRetailLiquidityIndicatorModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Retail_Liquidity_Indicator : Swagger.Nullable_Integer;
       Retail_Liquidity_Indicator_Code : Swagger.Nullable_UString;
       Retail_Liquidity_Indicator_Text : Swagger.Nullable_UString;
       Is_Retail_Indicator_Not_Applicable : Swagger.Nullable_Boolean;
       Is_Retail_Indicator_Buy_Interest : Swagger.Nullable_Boolean;
       Is_Retail_Indicator_Sell_Interest : Swagger.Nullable_Boolean;
       Is_Retail_Indicator_Buy_And_Sell_Interest : Swagger.Nullable_Boolean;
     end record;


   package AdminRetailLiquidityIndicatorModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminRetailLiquidityIndicatorModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminRetailLiquidityIndicatorModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminRetailLiquidityIndicatorModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminRetailLiquidityIndicatorModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminRetailLiquidityIndicatorModel_Type_Vectors.Vector);



   type AdminSecurityDirectoryModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Flags : Swagger.Nullable_Integer;
       Round_Lot_Size : Swagger.Nullable_Integer;
       Adjusted_Poc_Price : Swagger.Number;
       Luld_Tier : Swagger.Nullable_Integer;
       Luld_Tier_Code : Swagger.Nullable_UString;
       Luld_Tier_Text : Swagger.Nullable_UString;
       Is_Luld_Tier_Not_Applicable : Swagger.Nullable_Boolean;
       Is_Luld_Tier_1 : Swagger.Nullable_Boolean;
       Is_Luld_Tier_2 : Swagger.Nullable_Boolean;
     end record;


   package AdminSecurityDirectoryModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminSecurityDirectoryModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminSecurityDirectoryModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminSecurityDirectoryModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminSecurityDirectoryModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminSecurityDirectoryModel_Type_Vectors.Vector);



   type AdminSecurityEventModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Security_Event : Swagger.Nullable_Integer;
       Security_Event_Code : Swagger.Nullable_UString;
       Security_Event_Text : Swagger.Nullable_UString;
       Is_Opening_Process_Complete : Swagger.Nullable_Boolean;
       Is_Closing_Process_Complete : Swagger.Nullable_Boolean;
     end record;


   package AdminSecurityEventModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminSecurityEventModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminSecurityEventModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminSecurityEventModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminSecurityEventModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminSecurityEventModel_Type_Vectors.Vector);



   type AdminShortSalePriceTestStatusModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Short_Sale_Price_Test_Status : Swagger.Nullable_Integer;
       Short_Sale_Price_Test_Status_Code : Swagger.Nullable_UString;
       Short_Sale_Price_Test_Status_Text : Swagger.Nullable_UString;
       Is_Short_Sale_Price_Test_Not_In_Effect : Swagger.Nullable_Boolean;
       Is_Short_Sale_Price_Test_In_Effect : Swagger.Nullable_Boolean;
       Detail : Swagger.Nullable_Integer;
       Detail_Code : Swagger.Nullable_UString;
       Detail_Text : Swagger.Nullable_UString;
       Is_Detail_No_Price_Test : Swagger.Nullable_Boolean;
       Is_Detail_Activated : Swagger.Nullable_Boolean;
       Is_Detail_Continued : Swagger.Nullable_Boolean;
       Is_Detail_Deactivated : Swagger.Nullable_Boolean;
       Is_Detail_Not_Available : Swagger.Nullable_Boolean;
     end record;


   package AdminShortSalePriceTestStatusModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminShortSalePriceTestStatusModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminShortSalePriceTestStatusModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminShortSalePriceTestStatusModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminShortSalePriceTestStatusModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminShortSalePriceTestStatusModel_Type_Vectors.Vector);



   type AdminSystemEventModel_Type is
     record
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       System_Event : Swagger.Nullable_Integer;
       System_Event_Code : Swagger.Nullable_UString;
       System_Event_Text : Swagger.Nullable_UString;
       Is_System_Event_Start_Of_Messages : Swagger.Nullable_Boolean;
       Is_System_Event_Start_Of_System_Hours : Swagger.Nullable_Boolean;
       Is_System_Event_Start_Of_Regular_Market_Hours : Swagger.Nullable_Boolean;
       Is_System_Event_End_Of_Regular_Market_Hours : Swagger.Nullable_Boolean;
       Is_System_Event_End_Of_System_Hours : Swagger.Nullable_Boolean;
       Is_System_Event_End_Of_Messages : Swagger.Nullable_Boolean;
     end record;


   package AdminSystemEventModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminSystemEventModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminSystemEventModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminSystemEventModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminSystemEventModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminSystemEventModel_Type_Vectors.Vector);



   type AdminTradingStatusModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Is_Trading_Live : Swagger.Nullable_Boolean;
       Is_Trading_Halted : Swagger.Nullable_Boolean;
       Is_Trading_In_Order_Acceptance_Period : Swagger.Nullable_Boolean;
       Is_Trading_Paused : Swagger.Nullable_Boolean;
       Is_Reason_Halt_News_Pending : Swagger.Nullable_Boolean;
       Is_Reason_Ipo_Not_Yet_Trading : Swagger.Nullable_Boolean;
       Is_Reason_Ipo_Deferred : Swagger.Nullable_Boolean;
       Is_Reason_Halt_News_Dissemination : Swagger.Nullable_Boolean;
       Is_Reason_Ipo_Order_Acceptance_Period : Swagger.Nullable_Boolean;
       Is_Reason_Ipo_Pre_Launch_Period : Swagger.Nullable_Boolean;
       Is_Reason_Market_Wide_Circuit_Breaker_Level_1 : Swagger.Nullable_Boolean;
       Is_Reason_Market_Wide_Circuit_Breaker_Level_2 : Swagger.Nullable_Boolean;
       Is_Reason_Market_Wide_Circuit_Breaker_Level_3 : Swagger.Nullable_Boolean;
       Is_Reason_Not_Applicable : Swagger.Nullable_Boolean;
       Is_Reason_Not_Available : Swagger.Nullable_Boolean;
     end record;


   package AdminTradingStatusModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminTradingStatusModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminTradingStatusModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminTradingStatusModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminTradingStatusModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminTradingStatusModel_Type_Vectors.Vector);



   type FinFeedAPIExchangeModel_Type is
     record
       Exchange_Id : Swagger.Nullable_UString;
       Last_Datapoint_Date : Swagger.Nullable_UString;
       Mic : Swagger.Nullable_UString;
       Operating_Mic : Swagger.Nullable_UString;
       Oprt_Sgmt : Swagger.Nullable_UString;
       Market_Name_Institution_Description : Swagger.Nullable_UString;
       Legal_Entity_Name : Swagger.Nullable_UString;
       Lei : Swagger.Nullable_UString;
       Market_Category_Code : Swagger.Nullable_UString;
       Acronym : Swagger.Nullable_UString;
       Iso_Country_Code : Swagger.Nullable_UString;
       City : Swagger.Nullable_UString;
       Website : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Creation_Date : Swagger.Nullable_Date;
       Last_Update_Date : Swagger.Nullable_Date;
       Last_Validation_Date : Swagger.Nullable_Date;
       Expiry_Date : Swagger.Nullable_Date;
       Comments : Swagger.Nullable_UString;
     end record;


   package FinFeedAPIExchangeModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FinFeedAPIExchangeModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FinFeedAPIExchangeModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FinFeedAPIExchangeModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FinFeedAPIExchangeModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FinFeedAPIExchangeModel_Type_Vectors.Vector);



   type FinFeedAPISymbolModel_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Exchange_Id : Swagger.Nullable_UString;
       Security_Category : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Date : Swagger.Nullable_UString;
       Asset_Class : Swagger.Nullable_UString;
       Cfi_Code : Swagger.Nullable_UString;
       Cfi_Category : Swagger.Nullable_UString;
       Cfi_Group : Swagger.Nullable_UString;
       Cfi_Attribute_1 : Swagger.Nullable_UString;
       Cfi_Attribute_2 : Swagger.Nullable_UString;
       Cfi_Attribute_3 : Swagger.Nullable_UString;
       Cfi_Attribute_4 : Swagger.Nullable_UString;
       Cfi_Category_Desc : Swagger.Nullable_UString;
       Cfi_Group_Desc : Swagger.Nullable_UString;
       Cfi_Attribute_1_Desc : Swagger.Nullable_UString;
       Cfi_Attribute_2_Desc : Swagger.Nullable_UString;
       Cfi_Attribute_3_Desc : Swagger.Nullable_UString;
       Cfi_Attribute_4_Desc : Swagger.Nullable_UString;
     end record;


   package FinFeedAPISymbolModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FinFeedAPISymbolModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FinFeedAPISymbolModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FinFeedAPISymbolModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FinFeedAPISymbolModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FinFeedAPISymbolModel_Type_Vectors.Vector);



   type Level1QuoteUpdateModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Is_Symbol_Available : Swagger.Nullable_Boolean;
       Is_Pre_Post_Market_Session : Swagger.Nullable_Boolean;
       Ask_Size : Swagger.Nullable_Integer;
       Ask_Price : Swagger.Number;
       Bid_Price : Swagger.Number;
       Bid_Size : Swagger.Nullable_Integer;
     end record;


   package Level1QuoteUpdateModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level1QuoteUpdateModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level1QuoteUpdateModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level1QuoteUpdateModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level1QuoteUpdateModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level1QuoteUpdateModel_Type_Vectors.Vector);



   type Level2PriceLevelUpdateModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Is_Side_Buy : Swagger.Nullable_Boolean;
       Is_Event_Processing_Complete : Swagger.Nullable_Boolean;
       Size : Swagger.Nullable_Integer;
       Price : Swagger.Number;
     end record;


   package Level2PriceLevelUpdateModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level2PriceLevelUpdateModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level2PriceLevelUpdateModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level2PriceLevelUpdateModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level2PriceLevelUpdateModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level2PriceLevelUpdateModel_Type_Vectors.Vector);



   type Level3AddOrderModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Is_Side_Buy : Swagger.Nullable_Boolean;
       Size : Swagger.Nullable_Integer;
       Price : Swagger.Number;
       Order_Id : Swagger.Nullable_Long;
     end record;


   package Level3AddOrderModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3AddOrderModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3AddOrderModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3AddOrderModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3AddOrderModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3AddOrderModel_Type_Vectors.Vector);



   type Level3ClearBookModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
     end record;


   package Level3ClearBookModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3ClearBookModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3ClearBookModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3ClearBookModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3ClearBookModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3ClearBookModel_Type_Vectors.Vector);



   type Level3DeleteOrderModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Order_Id_Reference : Swagger.Nullable_Long;
     end record;


   package Level3DeleteOrderModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3DeleteOrderModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3DeleteOrderModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3DeleteOrderModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3DeleteOrderModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3DeleteOrderModel_Type_Vectors.Vector);



   type Level3ExecutedOrderModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Order_Id_Reference : Swagger.Nullable_Long;
       Sale_Condition_Flags : Swagger.Nullable_Integer;
       Is_Intermarket_Sweep : Swagger.Nullable_Boolean;
       Is_Extended_Hours_Trade : Swagger.Nullable_Boolean;
       Is_Odd_Lot_Trade : Swagger.Nullable_Boolean;
       Is_Trade_Through_Exempt : Swagger.Nullable_Boolean;
       Is_Single_Price_Cross_Trade : Swagger.Nullable_Boolean;
       Size : Swagger.Nullable_Integer;
       Price : Swagger.Number;
       Trade_Id : Swagger.Nullable_Long;
     end record;


   package Level3ExecutedOrderModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3ExecutedOrderModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3ExecutedOrderModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3ExecutedOrderModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3ExecutedOrderModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3ExecutedOrderModel_Type_Vectors.Vector);



   type Level3ModifyOrderModel_Type is
     record
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Order_Id_Reference : Swagger.Nullable_Long;
       Is_Priority_Reset : Swagger.Nullable_Boolean;
       Size : Swagger.Nullable_Integer;
       Price : Swagger.Number;
     end record;


   package Level3ModifyOrderModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3ModifyOrderModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3ModifyOrderModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3ModifyOrderModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3ModifyOrderModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3ModifyOrderModel_Type_Vectors.Vector);



   type OHLCVExchangeTimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Price_Open : Swagger.Number;
       Price_High : Swagger.Number;
       Price_Low : Swagger.Number;
       Price_Close : Swagger.Number;
       Volume_Traded : Swagger.Number;
       Trades_Count : Swagger.Nullable_Long;
       Symbol_Id_Exchange : Swagger.Nullable_UString;
     end record;


   package OHLCVExchangeTimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OHLCVExchangeTimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OHLCVExchangeTimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OHLCVExchangeTimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OHLCVExchangeTimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OHLCVExchangeTimeseriesItem_Type_Vectors.Vector);



   type OHLCVTimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Price_Open : Swagger.Number;
       Price_High : Swagger.Number;
       Price_Low : Swagger.Number;
       Price_Close : Swagger.Number;
       Volume_Traded : Swagger.Number;
       Trades_Count : Swagger.Nullable_Long;
     end record;


   package OHLCVTimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OHLCVTimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OHLCVTimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OHLCVTimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OHLCVTimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OHLCVTimeseriesItem_Type_Vectors.Vector);



   type OHLCVTimeseriesPeriod_Type is
     record
       Period_Id : Swagger.Nullable_UString;
       Length_Seconds : Swagger.Nullable_Integer;
       Length_Months : Swagger.Nullable_Integer;
       Unit_Count : Swagger.Nullable_Integer;
       Unit_Name : Swagger.Nullable_UString;
       Display_Name : Swagger.Nullable_UString;
     end record;


   package OHLCVTimeseriesPeriod_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OHLCVTimeseriesPeriod_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OHLCVTimeseriesPeriod_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OHLCVTimeseriesPeriod_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OHLCVTimeseriesPeriod_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OHLCVTimeseriesPeriod_Type_Vectors.Vector);



   type TradeTradeModel_Type is
     record
       Is_Trade_Break : Swagger.Nullable_Boolean;
       Symbol : Swagger.Nullable_UString;
       Timestamp_Nanos : Swagger.Nullable_Long;
       Timestamp : Swagger.Nullable_Date;
       Size : Swagger.Nullable_Integer;
       Price : Swagger.Number;
       Trade_Id : Swagger.Nullable_Long;
       Is_Intermarket_Sweep : Swagger.Nullable_Boolean;
       Is_Extended_Hours_Trade : Swagger.Nullable_Boolean;
       Is_Odd_Lot_Trade : Swagger.Nullable_Boolean;
       Is_Trade_Through_Exempt : Swagger.Nullable_Boolean;
       Is_Single_Price_Cross_Trade : Swagger.Nullable_Boolean;
     end record;


   package TradeTradeModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TradeTradeModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TradeTradeModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TradeTradeModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TradeTradeModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TradeTradeModel_Type_Vectors.Vector);



   type Level3OrderBookModel_Type is
     record
       Add_Order : .Models.Level3AddOrderModel_Type;
       Delete_Order : .Models.Level3DeleteOrderModel_Type;
       Modify_Order : .Models.Level3ModifyOrderModel_Type;
       Executed_Order : .Models.Level3ExecutedOrderModel_Type;
       Clear_Book : .Models.Level3ClearBookModel_Type;
     end record;


   package Level3OrderBookModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Level3OrderBookModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Level3OrderBookModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Level3OrderBookModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Level3OrderBookModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Level3OrderBookModel_Type_Vectors.Vector);



   type AdminAdminMessageModel_Type is
     record
       Trading_Status : .Models.AdminTradingStatusModel_Type;
       Official_Price : .Models.AdminOfficialPriceModel_Type;
       Security_Event : .Models.AdminSecurityEventModel_Type;
       Auction_Information : .Models.AdminAuctionInformationModel_Type;
       Short_Sale_Price_Test : .Models.AdminShortSalePriceTestStatusModel_Type;
       Operational_Halt_Status : .Models.AdminOperationalHaltStatusModel_Type;
       Retail_Liquidity_Indicator : .Models.AdminRetailLiquidityIndicatorModel_Type;
       System_Event : .Models.AdminSystemEventModel_Type;
       Security_Directory : .Models.AdminSecurityDirectoryModel_Type;
     end record;


   package AdminAdminMessageModel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdminAdminMessageModel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdminAdminMessageModel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdminAdminMessageModel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdminAdminMessageModel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdminAdminMessageModel_Type_Vectors.Vector);


end .Models;
