--  FinFeedAPI Stock REST API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: v1
--  Contact: support@apibricks.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.13.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-bmrIu");

   Mime_1 : aliased constant String := "text/json";
   Media_List_1 : constant Swagger.Mime_List := (
     1 => Swagger.Mime_Json   );
   Media_List_2 : constant Swagger.Mime_List := (
     1 => Swagger.Mime_Json,
   
     2 => Mime_1'Access,
   
     3 => Swagger.Mime_Text   );


   --  List of exchanges
   procedure V_1Exchanges_Get
      (Client : in out Client_Type;
       Result : out .Models.FinFeedAPIExchangeModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Set_Path ("/v1/exchanges");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Exchanges_Get;

   --  List of symbols for the exchange
   procedure V_1Symbols_Exchange_Id_Get
      (Client : in out Client_Type;
       Exchange_Id : in Swagger.UString;
       Result : out .Models.FinFeedAPISymbolModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Set_Path ("/v1/symbols/{exchange_id}");
      URI.Set_Path_Param ("exchange_id", Exchange_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Symbols_Exchange_Id_Get;

   --  Get Admin Messages
   procedure V_1Native_Iex_Admin_Messages_Symbol_Get
      (Client : in out Client_Type;
       Symbol : in Swagger.UString;
       Date : in Swagger.Datetime;
       Result : out .Models.AdminAdminMessageModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/admin/messages/{symbol}");
      URI.Set_Path_Param ("symbol", Symbol);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Admin_Messages_Symbol_Get;

   --  Get System Events
   procedure V_1Native_Iex_Admin_System_Event_Get
      (Client : in out Client_Type;
       Date : in Swagger.Datetime;
       Result : out .Models.AdminSystemEventModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/admin/system-event");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Admin_System_Event_Get;

   --  Get Level_1 Quotes
   procedure V_1Native_Iex_Level_1Quote_Symbol_Get
      (Client : in out Client_Type;
       Symbol : in Swagger.UString;
       Date : in Swagger.Datetime;
       Result : out .Models.Level1QuoteUpdateModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/level1-quote/{symbol}");
      URI.Set_Path_Param ("symbol", Symbol);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Level_1Quote_Symbol_Get;

   --  Get Level_2 Price Level Book
   procedure V_1Native_Iex_Level_2Price_Level_Update_Symbol_Get
      (Client : in out Client_Type;
       Symbol : in Swagger.UString;
       Date : in Swagger.Datetime;
       Result : out .Models.Level2PriceLevelUpdateModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/level2-price-level-update/{symbol}");
      URI.Set_Path_Param ("symbol", Symbol);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Level_2Price_Level_Update_Symbol_Get;

   --  Get Level_3 Order Book
   procedure V_1Native_Iex_Level_3Order_Book_Symbol_Get
      (Client : in out Client_Type;
       Symbol : in Swagger.UString;
       Date : in Swagger.Datetime;
       Result : out .Models.Level3OrderBookModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/level3-order-book/{symbol}");
      URI.Set_Path_Param ("symbol", Symbol);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Level_3Order_Book_Symbol_Get;

   --  Get Trades
   procedure V_1Native_Iex_Trade_Symbol_Get
      (Client : in out Client_Type;
       Symbol : in Swagger.UString;
       Date : in Swagger.Datetime;
       Result : out .Models.TradeTradeModel_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("date", Date);
      URI.Add_Param ("date", Date);
      URI.Set_Path ("/v1/native/iex/trade/{symbol}");
      URI.Set_Path_Param ("symbol", Symbol);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Native_Iex_Trade_Symbol_Get;

   --  Historical data by exchange
   --  Get OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange.
   procedure V_1Ohlcv_Exchange_Exchange_Id_History_Get
      (Client : in out Client_Type;
       Exchange_Id : in Swagger.UString;
       Period_Id : in Swagger.UString;
       Time_Start : in Swagger.UString;
       Time_End : in Swagger.UString;
       Result : out .Models.OHLCVExchangeTimeseriesItem_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Add_Param ("period_id", Period_Id);
      URI.Add_Param ("time_start", Time_Start);
      URI.Add_Param ("time_end", Time_End);
      URI.Set_Path ("/v1/ohlcv/exchange/{exchange_id}/history");
      URI.Set_Path_Param ("exchange_id", Exchange_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Ohlcv_Exchange_Exchange_Id_History_Get;

   --  Historical data
   --  Get OHLCV timeseries data returned in time ascending order.
   procedure V_1Ohlcv_Exchange_Symbol_Exchange_Id_Symbol_Id_History_Get
      (Client : in out Client_Type;
       Exchange_Id : in Swagger.UString;
       Symbol_Id : in Swagger.UString;
       Period_Id : in Swagger.UString;
       Time_Start : in Swagger.Nullable_UString;
       Time_End : in Swagger.Nullable_UString;
       Limit : in Swagger.Nullable_Integer;
       Result : out .Models.OHLCVTimeseriesItem_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Add_Param ("period_id", Period_Id);
      URI.Add_Param ("time_start", Time_Start);
      URI.Add_Param ("time_end", Time_End);
      URI.Add_Param ("limit", Limit);
      URI.Set_Path ("/v1/ohlcv/exchange-symbol/{exchange_id}/{symbol_id}/history");
      URI.Set_Path_Param ("exchange_id", Exchange_Id);
      URI.Set_Path_Param ("symbol_id", Symbol_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Ohlcv_Exchange_Symbol_Exchange_Id_Symbol_Id_History_Get;

   --  Latest data
   --  Get OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data
   --              
   --  :::info
   --  OHLCV Latest endpoint is just the shortcut to the OHLCV Historical endpoint with substituted `time_start` and `time_end` parameters. 
   --  The OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV real-time data stream to get data without delay.
   --  :::
   procedure V_1Ohlcv_Exchange_Symbol_Exchange_Id_Symbol_Id_Latest_Get
      (Client : in out Client_Type;
       Exchange_Id : in Swagger.UString;
       Symbol_Id : in Swagger.UString;
       Period_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Result : out .Models.OHLCVTimeseriesItem_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Add_Param ("period_id", Period_Id);
      URI.Add_Param ("limit", Limit);
      URI.Set_Path ("/v1/ohlcv/exchange-symbol/{exchange_id}/{symbol_id}/latest");
      URI.Set_Path_Param ("exchange_id", Exchange_Id);
      URI.Set_Path_Param ("symbol_id", Symbol_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Ohlcv_Exchange_Symbol_Exchange_Id_Symbol_Id_Latest_Get;

   --  List all periods
   --  Get full list of supported time periods available for requesting OHLCV timeseries data.
   --              
   --  ### Available periods
   --              
   --  Time unit | Period identifiers
   --  --------- | -----------
   --  Second | 1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC
   --  Minute | 1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN
   --  Hour | 1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRS
   --  Day | 1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAY
   --  Month | 1MTH, 2MTH, 3MTH, 4MTH, 6MTH
   --  Year | 1YRS, 2YRS, 3YRS, 4YRS, 5YRS
   --              
   --  :::tip
   --  You can assume that we will not remove any periods from this response, however, we may add new ones.
   --  :::
   procedure V_1Ohlcv_Periods_Get
      (Client : in out Client_Type;
       Result : out .Models.OHLCVTimeseriesPeriod_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_2);


      URI.Set_Path ("/v1/ohlcv/periods");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end V_1Ohlcv_Periods_Get;
end .Clients;
