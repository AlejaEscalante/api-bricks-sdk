/**
 * FinFeedAPI Stock REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.ExchangeModel
import org.openapitools.client.model.SymbolModel
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object MetadataApi {

  def apply(baseUrl: String = "https://api-historical.stock.finfeedapi.com") = new MetadataApi(baseUrl)
}

class MetadataApi(baseUrl: String) {

  /**
   * Expected answers:
   *   code 200 : Seq[ExchangeModel] (successful operation)
   * 
   * Available security schemes:
   *   APIKey (apiKey)
   *   JWT (http)
   */
  def v1ExchangesGet()(implicit apiKey: ApiKeyValue, bearerToken: BearerToken): ApiRequest[Seq[ExchangeModel]] =
    ApiRequest[Seq[ExchangeModel]](ApiMethods.GET, baseUrl, "/v1/exchanges", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withCredentials(bearerToken).withSuccessResponse[Seq[ExchangeModel]](200)
      

  /**
   * Expected answers:
   *   code 200 : Seq[SymbolModel] (successful operation)
   * 
   * Available security schemes:
   *   APIKey (apiKey)
   *   JWT (http)
   * 
   * @param exchangeId 
   */
  def v1SymbolsExchangeIdGet(exchangeId: String)(implicit apiKey: ApiKeyValue, bearerToken: BearerToken): ApiRequest[Seq[SymbolModel]] =
    ApiRequest[Seq[SymbolModel]](ApiMethods.GET, baseUrl, "/v1/symbols/{exchange_id}", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withCredentials(bearerToken).withPathParam("exchange_id", exchangeId)
      .withSuccessResponse[Seq[SymbolModel]](200)
      



}

