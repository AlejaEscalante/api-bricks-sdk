/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.model

import java.time.OffsetDateTime
import org.openapitools.client.core.ApiModel

case class AuctionInformationModel (
  /* The stock symbol */
  symbol: Option[String] = None,
  /* Original timestamp in nanoseconds since epoch */
  timestampNanos: Option[Long] = None,
  /* Time when the auction data was recorded as DateTime */
  timestamp: Option[OffsetDateTime] = None,
  /* Type of auction as byte value */
  auctionType: Option[Int] = None,
  /* Type of auction as character string */
  auctionTypeCode: Option[String] = None,
  /* Human-readable description of the auction type */
  auctionTypeText: Option[String] = None,
  /* Indicates if the auction type is 'Opening Auction' ('O'/0x4f). */
  isAuctionTypeOpening: Option[Boolean] = None,
  /* Indicates if the auction type is 'Closing Auction' ('C'/0x43). */
  isAuctionTypeClosing: Option[Boolean] = None,
  /* Indicates if the auction type is 'IPO Auction' ('I'/0x49). */
  isAuctionTypeIpo: Option[Boolean] = None,
  /* Indicates if the auction type is 'Halt Auction' ('H'/0x48). */
  isAuctionTypeHalt: Option[Boolean] = None,
  /* Indicates if the auction type is 'Volatility Auction' ('V'/0x56). */
  isAuctionTypeVolatility: Option[Boolean] = None,
  /* Number of shares paired at the Reference Price */
  pairedShares: Option[Int] = None,
  /* Reference price as decimal */
  referencePrice: Option[Double] = None,
  /* Indicative clearing price as decimal */
  indicativeClearingPrice: Option[Double] = None,
  /* Number of unpaired shares at the Reference Price */
  imbalanceShares: Option[Int] = None,
  /* Side of the imbalance as byte value */
  imbalanceSide: Option[Int] = None,
  /* Side of the imbalance as character string */
  imbalanceSideCode: Option[String] = None,
  /* Human-readable description of the imbalance side */
  imbalanceSideText: Option[String] = None,
  /* Indicates if there is a buy-side imbalance ('B'/0x42). */
  isImbalanceSideBuy: Option[Boolean] = None,
  /* Indicates if there is a sell-side imbalance ('S'/0x53). */
  isImbalanceSideSell: Option[Boolean] = None,
  /* Indicates if there is no imbalance ('N'/0x4e). */
  isImbalanceSideNone: Option[Boolean] = None,
  /* Number of extensions to the auction */
  extensionNumber: Option[Int] = None,
  /* Scheduled auction time in seconds since epoch */
  scheduledAuctionTimeSeconds: Option[Int] = None,
  /* Scheduled time for the auction as DateTime */
  scheduledAuctionTime: Option[OffsetDateTime] = None,
  /* Auction book clearing price as decimal */
  auctionBookClearingPrice: Option[Double] = None,
  /* Collar reference price as decimal */
  collarReferencePrice: Option[Double] = None,
  /* Lower auction collar as decimal */
  lowerAuctionCollar: Option[Double] = None,
  /* Upper auction collar as decimal */
  upperAuctionCollar: Option[Double] = None
) extends ApiModel

