note
 description:"[
		FinFeedAPI Stock REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ADMIN_SECURITY_EVENT_MODEL




feature --Access

    symbol: detachable STRING_32
      -- The stock symbol
    timestamp_nanos: INTEGER_64
      -- Original timestamp in nanoseconds since epoch
    timestamp: detachable DATE_TIME
      -- Time when the security event was recorded as DateTime
    security_event: INTEGER_32
      -- Security event as byte value
    security_event_code: detachable STRING_32
      -- Security event as character string ('O' or 'C')
    security_event_text: detachable STRING_32
      -- Human-readable description of the security event
    is_opening_process_complete: BOOLEAN
      -- Indicates if the security event is 'Opening Process Complete' ('O'/0x4f).
    is_closing_process_complete: BOOLEAN
      -- Indicates if the security event is 'Closing Process Complete' ('C'/0x43).

feature -- Change Element

    set_symbol (a_name: like symbol)
        -- Set 'symbol' with 'a_name'.
      do
        symbol := a_name
      ensure
        symbol_set: symbol = a_name
      end

    set_timestamp_nanos (a_name: like timestamp_nanos)
        -- Set 'timestamp_nanos' with 'a_name'.
      do
        timestamp_nanos := a_name
      ensure
        timestamp_nanos_set: timestamp_nanos = a_name
      end

    set_timestamp (a_name: like timestamp)
        -- Set 'timestamp' with 'a_name'.
      do
        timestamp := a_name
      ensure
        timestamp_set: timestamp = a_name
      end

    set_security_event (a_name: like security_event)
        -- Set 'security_event' with 'a_name'.
      do
        security_event := a_name
      ensure
        security_event_set: security_event = a_name
      end

    set_security_event_code (a_name: like security_event_code)
        -- Set 'security_event_code' with 'a_name'.
      do
        security_event_code := a_name
      ensure
        security_event_code_set: security_event_code = a_name
      end

    set_security_event_text (a_name: like security_event_text)
        -- Set 'security_event_text' with 'a_name'.
      do
        security_event_text := a_name
      ensure
        security_event_text_set: security_event_text = a_name
      end

    set_is_opening_process_complete (a_name: like is_opening_process_complete)
        -- Set 'is_opening_process_complete' with 'a_name'.
      do
        is_opening_process_complete := a_name
      ensure
        is_opening_process_complete_set: is_opening_process_complete = a_name
      end

    set_is_closing_process_complete (a_name: like is_closing_process_complete)
        -- Set 'is_closing_process_complete' with 'a_name'.
      do
        is_closing_process_complete := a_name
      ensure
        is_closing_process_complete_set: is_closing_process_complete = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ADMIN_SECURITY_EVENT_MODEL%N")
        if attached symbol as l_symbol then
          Result.append ("%Nsymbol:")
          Result.append (l_symbol.out)
          Result.append ("%N")
        end
        if attached timestamp_nanos as l_timestamp_nanos then
          Result.append ("%Ntimestamp_nanos:")
          Result.append (l_timestamp_nanos.out)
          Result.append ("%N")
        end
        if attached timestamp as l_timestamp then
          Result.append ("%Ntimestamp:")
          Result.append (l_timestamp.out)
          Result.append ("%N")
        end
        if attached security_event as l_security_event then
          Result.append ("%Nsecurity_event:")
          Result.append (l_security_event.out)
          Result.append ("%N")
        end
        if attached security_event_code as l_security_event_code then
          Result.append ("%Nsecurity_event_code:")
          Result.append (l_security_event_code.out)
          Result.append ("%N")
        end
        if attached security_event_text as l_security_event_text then
          Result.append ("%Nsecurity_event_text:")
          Result.append (l_security_event_text.out)
          Result.append ("%N")
        end
        if attached is_opening_process_complete as l_is_opening_process_complete then
          Result.append ("%Nis_opening_process_complete:")
          Result.append (l_is_opening_process_complete.out)
          Result.append ("%N")
        end
        if attached is_closing_process_complete as l_is_closing_process_complete then
          Result.append ("%Nis_closing_process_complete:")
          Result.append (l_is_closing_process_complete.out)
          Result.append ("%N")
        end
      end
end

