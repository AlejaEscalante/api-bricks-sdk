note
 description:"[
		REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FIN_FEED_API_SYMBOL_MODEL

inherit


  STRING_TABLE [ANY]

feature --Access

    symbol_id: detachable STRING_32
      
    exchange_id: detachable STRING_32
      
    security_category: detachable STRING_32
      
    name: detachable STRING_32
      
    date: detachable STRING_32
      
    asset_class: detachable STRING_32
      
    cfi_code: detachable STRING_32
      
    cfi_category: detachable STRING_32
      
    cfi_group: detachable STRING_32
      
    cfi_attribute1: detachable STRING_32
      
    cfi_attribute2: detachable STRING_32
      
    cfi_attribute3: detachable STRING_32
      
    cfi_attribute4: detachable STRING_32
      
    cfi_category_desc: detachable STRING_32
      
    cfi_group_desc: detachable STRING_32
      

feature -- Change Element

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_exchange_id (a_name: like exchange_id)
        -- Set 'exchange_id' with 'a_name'.
      do
        exchange_id := a_name
      ensure
        exchange_id_set: exchange_id = a_name
      end

    set_security_category (a_name: like security_category)
        -- Set 'security_category' with 'a_name'.
      do
        security_category := a_name
      ensure
        security_category_set: security_category = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_date (a_name: like date)
        -- Set 'date' with 'a_name'.
      do
        date := a_name
      ensure
        date_set: date = a_name
      end

    set_asset_class (a_name: like asset_class)
        -- Set 'asset_class' with 'a_name'.
      do
        asset_class := a_name
      ensure
        asset_class_set: asset_class = a_name
      end

    set_cfi_code (a_name: like cfi_code)
        -- Set 'cfi_code' with 'a_name'.
      do
        cfi_code := a_name
      ensure
        cfi_code_set: cfi_code = a_name
      end

    set_cfi_category (a_name: like cfi_category)
        -- Set 'cfi_category' with 'a_name'.
      do
        cfi_category := a_name
      ensure
        cfi_category_set: cfi_category = a_name
      end

    set_cfi_group (a_name: like cfi_group)
        -- Set 'cfi_group' with 'a_name'.
      do
        cfi_group := a_name
      ensure
        cfi_group_set: cfi_group = a_name
      end

    set_cfi_attribute1 (a_name: like cfi_attribute1)
        -- Set 'cfi_attribute1' with 'a_name'.
      do
        cfi_attribute1 := a_name
      ensure
        cfi_attribute1_set: cfi_attribute1 = a_name
      end

    set_cfi_attribute2 (a_name: like cfi_attribute2)
        -- Set 'cfi_attribute2' with 'a_name'.
      do
        cfi_attribute2 := a_name
      ensure
        cfi_attribute2_set: cfi_attribute2 = a_name
      end

    set_cfi_attribute3 (a_name: like cfi_attribute3)
        -- Set 'cfi_attribute3' with 'a_name'.
      do
        cfi_attribute3 := a_name
      ensure
        cfi_attribute3_set: cfi_attribute3 = a_name
      end

    set_cfi_attribute4 (a_name: like cfi_attribute4)
        -- Set 'cfi_attribute4' with 'a_name'.
      do
        cfi_attribute4 := a_name
      ensure
        cfi_attribute4_set: cfi_attribute4 = a_name
      end

    set_cfi_category_desc (a_name: like cfi_category_desc)
        -- Set 'cfi_category_desc' with 'a_name'.
      do
        cfi_category_desc := a_name
      ensure
        cfi_category_desc_set: cfi_category_desc = a_name
      end

    set_cfi_group_desc (a_name: like cfi_group_desc)
        -- Set 'cfi_group_desc' with 'a_name'.
      do
        cfi_group_desc := a_name
      ensure
        cfi_group_desc_set: cfi_group_desc = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append(out_)
        Result.append("%Nclass FIN_FEED_API_SYMBOL_MODEL%N")
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached exchange_id as l_exchange_id then
          Result.append ("%Nexchange_id:")
          Result.append (l_exchange_id.out)
          Result.append ("%N")
        end
        if attached security_category as l_security_category then
          Result.append ("%Nsecurity_category:")
          Result.append (l_security_category.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached date as l_date then
          Result.append ("%Ndate:")
          Result.append (l_date.out)
          Result.append ("%N")
        end
        if attached asset_class as l_asset_class then
          Result.append ("%Nasset_class:")
          Result.append (l_asset_class.out)
          Result.append ("%N")
        end
        if attached cfi_code as l_cfi_code then
          Result.append ("%Ncfi_code:")
          Result.append (l_cfi_code.out)
          Result.append ("%N")
        end
        if attached cfi_category as l_cfi_category then
          Result.append ("%Ncfi_category:")
          Result.append (l_cfi_category.out)
          Result.append ("%N")
        end
        if attached cfi_group as l_cfi_group then
          Result.append ("%Ncfi_group:")
          Result.append (l_cfi_group.out)
          Result.append ("%N")
        end
        if attached cfi_attribute1 as l_cfi_attribute1 then
          Result.append ("%Ncfi_attribute1:")
          Result.append (l_cfi_attribute1.out)
          Result.append ("%N")
        end
        if attached cfi_attribute2 as l_cfi_attribute2 then
          Result.append ("%Ncfi_attribute2:")
          Result.append (l_cfi_attribute2.out)
          Result.append ("%N")
        end
        if attached cfi_attribute3 as l_cfi_attribute3 then
          Result.append ("%Ncfi_attribute3:")
          Result.append (l_cfi_attribute3.out)
          Result.append ("%N")
        end
        if attached cfi_attribute4 as l_cfi_attribute4 then
          Result.append ("%Ncfi_attribute4:")
          Result.append (l_cfi_attribute4.out)
          Result.append ("%N")
        end
        if attached cfi_category_desc as l_cfi_category_desc then
          Result.append ("%Ncfi_category_desc:")
          Result.append (l_cfi_category_desc.out)
          Result.append ("%N")
        end
        if attached cfi_group_desc as l_cfi_group_desc then
          Result.append ("%Ncfi_group_desc:")
          Result.append (l_cfi_group_desc.out)
          Result.append ("%N")
        end
      end
end

