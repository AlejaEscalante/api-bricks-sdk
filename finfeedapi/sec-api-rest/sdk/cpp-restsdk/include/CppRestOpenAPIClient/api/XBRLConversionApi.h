/**
 * FinFeedAPI SEC REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * XBRLConversionApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_XBRLConversionApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_XBRLConversionApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/AnyType.h"
#include "CppRestOpenAPIClient/model/Mvc_ProblemDetails.h"
#include "CppRestOpenAPIClient/model/Mvc_ValidationProblemDetails.h"
#include <map>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  XBRLConversionApi 
{
public:

    explicit XBRLConversionApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~XBRLConversionApi();

    /// <summary>
    /// Convert XBRL data to JSON format
    /// </summary>
    /// <remarks>
    /// Converts XBRL data to JSON format using one of three possible input methods.  ### Input Methods  1. HTML URL (htm-url)    - URL of the filing ending with .htm or .html    - Both filing URLs and index page URLs are accepted    - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231.htm  2. XBRL URL (xbrl-url)    - URL of the XBRL file ending with .xml    - Can be found in the dataFiles array from Query API    - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231_htm.xml  3. Accession Number (accession-no)    - The SEC filing accession number    - Example: 0001564590-21-004599  :::note Only one of the three parameters should be provided. If multiple parameters are provided, the priority order is: 1. htm-url 2. xbrl-url 3. accession-no :::  ### Supported Filing Types  - Annual Reports (10-K) - Quarterly Reports (10-Q) - Current Reports (8-K) - Registration Statements (S-1, S-3) - Foreign Private Issuer Reports (20-F, 40-F)  ### Response Format  The API returns a JSON object containing: - Financial statements (Income Statement, Balance Sheet, Cash Flow Statement) - Accounting policies and footnotes - Company information - Filing metadata  ### Example Response &#x60;&#x60;&#x60;json {   \&quot;StatementsOfIncome\&quot;: {     \&quot;RevenueFromContractWithCustomerExcludingAssessedTax\&quot;: [       {         \&quot;decimals\&quot;: \&quot;-6\&quot;,         \&quot;unitRef\&quot;: \&quot;U_USD\&quot;,         \&quot;period\&quot;: {           \&quot;startDate\&quot;: \&quot;2023-07-01\&quot;,           \&quot;endDate\&quot;: \&quot;2024-06-30\&quot;         },         \&quot;value\&quot;: \&quot;245122000000\&quot;       }     ]   } } &#x60;&#x60;&#x60;
    /// </remarks>
    /// <param name="htmUrl">URL of the filing ending with .htm or .html (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="xbrlUrl">URL of the XBRL file ending with .xml (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="accessionNo">SEC filing accession number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::map<utility::string_t, std::shared_ptr<AnyType>>> v1XbrlConverterGet(
        boost::optional<utility::string_t> htmUrl,
        boost::optional<utility::string_t> xbrlUrl,
        boost::optional<utility::string_t> accessionNo
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_XBRLConversionApi_H_ */

