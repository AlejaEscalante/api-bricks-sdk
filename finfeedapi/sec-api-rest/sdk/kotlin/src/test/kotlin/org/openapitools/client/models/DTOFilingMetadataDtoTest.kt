/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.DTOFilingMetadataDto

class DTOFilingMetadataDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DTOFilingMetadataDto
        //val modelInstance = DTOFilingMetadataDto()

        // to test the property `cik`
        should("test cik") {
            // uncomment below to test the property
            //modelInstance.cik shouldBe ("TODO")
        }

        // to test the property `accessionNumber`
        should("test accessionNumber") {
            // uncomment below to test the property
            //modelInstance.accessionNumber shouldBe ("TODO")
        }

        // to test the property `filingDate`
        should("test filingDate") {
            // uncomment below to test the property
            //modelInstance.filingDate shouldBe ("TODO")
        }

        // to test the property `reportDate`
        should("test reportDate") {
            // uncomment below to test the property
            //modelInstance.reportDate shouldBe ("TODO")
        }

        // to test the property `acceptanceDateTime`
        should("test acceptanceDateTime") {
            // uncomment below to test the property
            //modelInstance.acceptanceDateTime shouldBe ("TODO")
        }

        // to test the property `act`
        should("test act") {
            // uncomment below to test the property
            //modelInstance.act shouldBe ("TODO")
        }

        // to test the property `form`
        should("test form") {
            // uncomment below to test the property
            //modelInstance.form shouldBe ("TODO")
        }

        // to test the property `fileNumber`
        should("test fileNumber") {
            // uncomment below to test the property
            //modelInstance.fileNumber shouldBe ("TODO")
        }

        // to test the property `filmNumber`
        should("test filmNumber") {
            // uncomment below to test the property
            //modelInstance.filmNumber shouldBe ("TODO")
        }

        // to test the property `items`
        should("test items") {
            // uncomment below to test the property
            //modelInstance.items shouldBe ("TODO")
        }

        // to test the property `coreType`
        should("test coreType") {
            // uncomment below to test the property
            //modelInstance.coreType shouldBe ("TODO")
        }

        // to test the property `propertySize`
        should("test propertySize") {
            // uncomment below to test the property
            //modelInstance.propertySize shouldBe ("TODO")
        }

        // to test the property `isXbrl`
        should("test isXbrl") {
            // uncomment below to test the property
            //modelInstance.isXbrl shouldBe ("TODO")
        }

        // to test the property `isInlineXbrl`
        should("test isInlineXbrl") {
            // uncomment below to test the property
            //modelInstance.isInlineXbrl shouldBe ("TODO")
        }

        // to test the property `primaryDocument`
        should("test primaryDocument") {
            // uncomment below to test the property
            //modelInstance.primaryDocument shouldBe ("TODO")
        }

        // to test the property `primaryDocDescription`
        should("test primaryDocDescription") {
            // uncomment below to test the property
            //modelInstance.primaryDocDescription shouldBe ("TODO")
        }

        // to test the property `sourceFile`
        should("test sourceFile") {
            // uncomment below to test the property
            //modelInstance.sourceFile shouldBe ("TODO")
        }

    }
}
