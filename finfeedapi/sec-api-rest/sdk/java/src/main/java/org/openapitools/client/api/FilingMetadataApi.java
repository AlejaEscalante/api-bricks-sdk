/*
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DTOFilingMetadataDto;
import org.openapitools.client.model.DTOFilingSortBy;
import org.openapitools.client.model.MvcProblemDetails;
import org.openapitools.client.model.MvcValidationProblemDetails;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FilingMetadataApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public FilingMetadataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public FilingMetadataApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v1FilingsGet
     * @param cik Filter by Central Index Key (CIK) (optional)
     * @param ticker Filter by stock ticker symbol (optional)
     * @param formType Filter by form type(s) (e.g., \&quot;10-K\&quot;, \&quot;8-K\&quot;). Multiple values can be comma-separated (optional)
     * @param fillingDateStart Filter by filling date start (inclusive), format YYYY-MM-DD (optional)
     * @param fillingDateEnd Filter by filling date end (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateStart Filter by report date start (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateEnd Filter by report date end (inclusive), format YYYY-MM-DD (optional)
     * @param itemsContain Filter filings where the &#39;Items&#39; field contains the specified text (optional)
     * @param pageSize Number of results per page (default: 50, max: 200) (optional)
     * @param pageNumber Page number to retrieve (default: 1) (optional)
     * @param sortBy Field to sort results by (default: AccessionNumber) (optional)
     * @param sortOrder Sort order (asc or desc, default: desc) (optional, default to desc)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1FilingsGetCall(@javax.annotation.Nullable Long cik, @javax.annotation.Nullable String ticker, @javax.annotation.Nullable String formType, @javax.annotation.Nullable String fillingDateStart, @javax.annotation.Nullable String fillingDateEnd, @javax.annotation.Nullable String reportDateStart, @javax.annotation.Nullable String reportDateEnd, @javax.annotation.Nullable String itemsContain, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Integer pageNumber, @javax.annotation.Nullable DTOFilingSortBy sortBy, @javax.annotation.Nullable String sortOrder, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/filings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (cik != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cik", cik));
        }

        if (ticker != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ticker", ticker));
        }

        if (formType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("form_type", formType));
        }

        if (fillingDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filling_date_start", fillingDateStart));
        }

        if (fillingDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filling_date_end", fillingDateEnd));
        }

        if (reportDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("report_date_start", reportDateStart));
        }

        if (reportDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("report_date_end", reportDateEnd));
        }

        if (itemsContain != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("items_contain", itemsContain));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (pageNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_number", pageNumber));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_by", sortBy));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1FilingsGetValidateBeforeCall(@javax.annotation.Nullable Long cik, @javax.annotation.Nullable String ticker, @javax.annotation.Nullable String formType, @javax.annotation.Nullable String fillingDateStart, @javax.annotation.Nullable String fillingDateEnd, @javax.annotation.Nullable String reportDateStart, @javax.annotation.Nullable String reportDateEnd, @javax.annotation.Nullable String itemsContain, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Integer pageNumber, @javax.annotation.Nullable DTOFilingSortBy sortBy, @javax.annotation.Nullable String sortOrder, final ApiCallback _callback) throws ApiException {
        return v1FilingsGetCall(cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder, _callback);

    }

    /**
     * Query SEC filing metadata
     * Retrieves metadata for SEC filings based on various filter criteria with pagination and sorting support.    ### Available Sort Fields    Field Name | Description  -----------|-------------  AccessionNumber | SEC filing accession number  FilingDate | Date when filing was submitted  AcceptanceDateTime | Date and time of filing acceptance  ReportDate | Date of the report  Size | Size of the filing document    ### Date Format  All dates must be provided in YYYY-MM-DD format    ### Form Types  Form types can be provided as comma-separated values, e.g.: \&quot;10-K,8-K,10-Q\&quot;    :::tip  For optimal performance, use date ranges and form types to narrow down your search  :::
     * @param cik Filter by Central Index Key (CIK) (optional)
     * @param ticker Filter by stock ticker symbol (optional)
     * @param formType Filter by form type(s) (e.g., \&quot;10-K\&quot;, \&quot;8-K\&quot;). Multiple values can be comma-separated (optional)
     * @param fillingDateStart Filter by filling date start (inclusive), format YYYY-MM-DD (optional)
     * @param fillingDateEnd Filter by filling date end (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateStart Filter by report date start (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateEnd Filter by report date end (inclusive), format YYYY-MM-DD (optional)
     * @param itemsContain Filter filings where the &#39;Items&#39; field contains the specified text (optional)
     * @param pageSize Number of results per page (default: 50, max: 200) (optional)
     * @param pageNumber Page number to retrieve (default: 1) (optional)
     * @param sortBy Field to sort results by (default: AccessionNumber) (optional)
     * @param sortOrder Sort order (asc or desc, default: desc) (optional, default to desc)
     * @return List&lt;DTOFilingMetadataDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server error </td><td>  -  </td></tr>
     </table>
     */
    public List<DTOFilingMetadataDto> v1FilingsGet(@javax.annotation.Nullable Long cik, @javax.annotation.Nullable String ticker, @javax.annotation.Nullable String formType, @javax.annotation.Nullable String fillingDateStart, @javax.annotation.Nullable String fillingDateEnd, @javax.annotation.Nullable String reportDateStart, @javax.annotation.Nullable String reportDateEnd, @javax.annotation.Nullable String itemsContain, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Integer pageNumber, @javax.annotation.Nullable DTOFilingSortBy sortBy, @javax.annotation.Nullable String sortOrder) throws ApiException {
        ApiResponse<List<DTOFilingMetadataDto>> localVarResp = v1FilingsGetWithHttpInfo(cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder);
        return localVarResp.getData();
    }

    /**
     * Query SEC filing metadata
     * Retrieves metadata for SEC filings based on various filter criteria with pagination and sorting support.    ### Available Sort Fields    Field Name | Description  -----------|-------------  AccessionNumber | SEC filing accession number  FilingDate | Date when filing was submitted  AcceptanceDateTime | Date and time of filing acceptance  ReportDate | Date of the report  Size | Size of the filing document    ### Date Format  All dates must be provided in YYYY-MM-DD format    ### Form Types  Form types can be provided as comma-separated values, e.g.: \&quot;10-K,8-K,10-Q\&quot;    :::tip  For optimal performance, use date ranges and form types to narrow down your search  :::
     * @param cik Filter by Central Index Key (CIK) (optional)
     * @param ticker Filter by stock ticker symbol (optional)
     * @param formType Filter by form type(s) (e.g., \&quot;10-K\&quot;, \&quot;8-K\&quot;). Multiple values can be comma-separated (optional)
     * @param fillingDateStart Filter by filling date start (inclusive), format YYYY-MM-DD (optional)
     * @param fillingDateEnd Filter by filling date end (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateStart Filter by report date start (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateEnd Filter by report date end (inclusive), format YYYY-MM-DD (optional)
     * @param itemsContain Filter filings where the &#39;Items&#39; field contains the specified text (optional)
     * @param pageSize Number of results per page (default: 50, max: 200) (optional)
     * @param pageNumber Page number to retrieve (default: 1) (optional)
     * @param sortBy Field to sort results by (default: AccessionNumber) (optional)
     * @param sortOrder Sort order (asc or desc, default: desc) (optional, default to desc)
     * @return ApiResponse&lt;List&lt;DTOFilingMetadataDto&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<DTOFilingMetadataDto>> v1FilingsGetWithHttpInfo(@javax.annotation.Nullable Long cik, @javax.annotation.Nullable String ticker, @javax.annotation.Nullable String formType, @javax.annotation.Nullable String fillingDateStart, @javax.annotation.Nullable String fillingDateEnd, @javax.annotation.Nullable String reportDateStart, @javax.annotation.Nullable String reportDateEnd, @javax.annotation.Nullable String itemsContain, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Integer pageNumber, @javax.annotation.Nullable DTOFilingSortBy sortBy, @javax.annotation.Nullable String sortOrder) throws ApiException {
        okhttp3.Call localVarCall = v1FilingsGetValidateBeforeCall(cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder, null);
        Type localVarReturnType = new TypeToken<List<DTOFilingMetadataDto>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Query SEC filing metadata (asynchronously)
     * Retrieves metadata for SEC filings based on various filter criteria with pagination and sorting support.    ### Available Sort Fields    Field Name | Description  -----------|-------------  AccessionNumber | SEC filing accession number  FilingDate | Date when filing was submitted  AcceptanceDateTime | Date and time of filing acceptance  ReportDate | Date of the report  Size | Size of the filing document    ### Date Format  All dates must be provided in YYYY-MM-DD format    ### Form Types  Form types can be provided as comma-separated values, e.g.: \&quot;10-K,8-K,10-Q\&quot;    :::tip  For optimal performance, use date ranges and form types to narrow down your search  :::
     * @param cik Filter by Central Index Key (CIK) (optional)
     * @param ticker Filter by stock ticker symbol (optional)
     * @param formType Filter by form type(s) (e.g., \&quot;10-K\&quot;, \&quot;8-K\&quot;). Multiple values can be comma-separated (optional)
     * @param fillingDateStart Filter by filling date start (inclusive), format YYYY-MM-DD (optional)
     * @param fillingDateEnd Filter by filling date end (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateStart Filter by report date start (inclusive), format YYYY-MM-DD (optional)
     * @param reportDateEnd Filter by report date end (inclusive), format YYYY-MM-DD (optional)
     * @param itemsContain Filter filings where the &#39;Items&#39; field contains the specified text (optional)
     * @param pageSize Number of results per page (default: 50, max: 200) (optional)
     * @param pageNumber Page number to retrieve (default: 1) (optional)
     * @param sortBy Field to sort results by (default: AccessionNumber) (optional)
     * @param sortOrder Sort order (asc or desc, default: desc) (optional, default to desc)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1FilingsGetAsync(@javax.annotation.Nullable Long cik, @javax.annotation.Nullable String ticker, @javax.annotation.Nullable String formType, @javax.annotation.Nullable String fillingDateStart, @javax.annotation.Nullable String fillingDateEnd, @javax.annotation.Nullable String reportDateStart, @javax.annotation.Nullable String reportDateEnd, @javax.annotation.Nullable String itemsContain, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Integer pageNumber, @javax.annotation.Nullable DTOFilingSortBy sortBy, @javax.annotation.Nullable String sortOrder, final ApiCallback<List<DTOFilingMetadataDto>> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1FilingsGetValidateBeforeCall(cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder, _callback);
        Type localVarReturnType = new TypeToken<List<DTOFilingMetadataDto>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
