#
# FinFeedAPI SEC REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccessionNumber
No description available.
.PARAMETER FormType
No description available.
.PARAMETER FilingDate
No description available.
.PARAMETER CompanyName
No description available.
.PARAMETER Cik
No description available.
.PARAMETER DocumentFilename
No description available.
.PARAMETER DocumentDescription
No description available.
.PARAMETER SourceFile
No description available.
.OUTPUTS

DTOSecFilingResultDto<PSCustomObject>
#>

function Initialize-DTOSecFilingResultDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccessionNumber},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FormType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${FilingDate},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CompanyName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Cik},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DocumentFilename},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DocumentDescription},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SourceFile}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DTOSecFilingResultDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "accession_number" = ${AccessionNumber}
            "form_type" = ${FormType}
            "filing_date" = ${FilingDate}
            "company_name" = ${CompanyName}
            "cik" = ${Cik}
            "document_filename" = ${DocumentFilename}
            "document_description" = ${DocumentDescription}
            "source_file" = ${SourceFile}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DTOSecFilingResultDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DTOSecFilingResultDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DTOSecFilingResultDto<PSCustomObject>
#>
function ConvertFrom-JsonToDTOSecFilingResultDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DTOSecFilingResultDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DTOSecFilingResultDto
        $AllProperties = ("accession_number", "form_type", "filing_date", "company_name", "cik", "document_filename", "document_description", "source_file")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accession_number"))) { #optional property not found
            $AccessionNumber = $null
        } else {
            $AccessionNumber = $JsonParameters.PSobject.Properties["accession_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "form_type"))) { #optional property not found
            $FormType = $null
        } else {
            $FormType = $JsonParameters.PSobject.Properties["form_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "filing_date"))) { #optional property not found
            $FilingDate = $null
        } else {
            $FilingDate = $JsonParameters.PSobject.Properties["filing_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "company_name"))) { #optional property not found
            $CompanyName = $null
        } else {
            $CompanyName = $JsonParameters.PSobject.Properties["company_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cik"))) { #optional property not found
            $Cik = $null
        } else {
            $Cik = $JsonParameters.PSobject.Properties["cik"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "document_filename"))) { #optional property not found
            $DocumentFilename = $null
        } else {
            $DocumentFilename = $JsonParameters.PSobject.Properties["document_filename"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "document_description"))) { #optional property not found
            $DocumentDescription = $null
        } else {
            $DocumentDescription = $JsonParameters.PSobject.Properties["document_description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "source_file"))) { #optional property not found
            $SourceFile = $null
        } else {
            $SourceFile = $JsonParameters.PSobject.Properties["source_file"].value
        }

        $PSO = [PSCustomObject]@{
            "accession_number" = ${AccessionNumber}
            "form_type" = ${FormType}
            "filing_date" = ${FilingDate}
            "company_name" = ${CompanyName}
            "cik" = ${Cik}
            "document_filename" = ${DocumentFilename}
            "document_description" = ${DocumentDescription}
            "source_file" = ${SourceFile}
        }

        return $PSO
    }

}

