/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.AnyType
import org.openapitools.client.model.ProblemDetails
import org.openapitools.client.model.ValidationProblemDetails
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object XBRLConversionApi {

  def apply(baseUrl: String = "https://api.sec.finfeedapi.com") = new XBRLConversionApi(baseUrl)
}

class XBRLConversionApi(baseUrl: String) {

  /**
   * Converts XBRL data to JSON format using one of three possible input methods.    ### Input Methods    1. HTML URL (htm-url)     - URL of the filing ending with .htm or .html     - Both filing URLs and index page URLs are accepted     - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231.htm    2. XBRL URL (xbrl-url)     - URL of the XBRL file ending with .xml     - Can be found in the dataFiles array from Query API     - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231_htm.xml    3. Accession Number (accession-no)     - The SEC filing accession number     - Example: 0001564590-21-004599    :::note  Only one of the three parameters should be provided. If multiple parameters are provided, the priority order is:  1. htm-url  2. xbrl-url  3. accession-no  :::    ### Supported Filing Types    - Annual Reports (10-K)  - Quarterly Reports (10-Q)  - Current Reports (8-K)  - Registration Statements (S-1, S-3)  - Foreign Private Issuer Reports (20-F, 40-F)    ### Response Format    The API returns a JSON object containing:  - Financial statements (Income Statement, Balance Sheet, Cash Flow Statement)  - Accounting policies and footnotes  - Company information  - Filing metadata    ### Example Response  ```json  {    \"StatementsOfIncome\": {      \"RevenueFromContractWithCustomerExcludingAssessedTax\": [        {          \"decimals\": \"-6\",          \"unitRef\": \"U_USD\",          \"period\": {            \"startDate\": \"2023-07-01\",            \"endDate\": \"2024-06-30\"          },          \"value\": \"245122000000\"        }      ]    }  }  ```
   * 
   * Expected answers:
   *   code 200 : Map[String, AnyType] (Successful conversion)
   *   code 400 : ValidationProblemDetails (Invalid request - check parameter format)
   *   code 404 :  (Filing or XBRL data not found)
   *   code 500 : ProblemDetails (Server error)
   * 
   * @param htmUrl URL of the filing ending with .htm or .html
   * @param xbrlUrl URL of the XBRL file ending with .xml
   * @param accessionNo SEC filing accession number
   */
  def v1XbrlConverterGet(htmUrl: Option[String] = None, xbrlUrl: Option[String] = None, accessionNo: Option[String] = None): ApiRequest[Map[String, AnyType]] =
    ApiRequest[Map[String, AnyType]](ApiMethods.GET, baseUrl, "/v1/xbrl-converter", "application/json")
      .withQueryParam("htm-url", htmUrl)
      .withQueryParam("xbrl-url", xbrlUrl)
      .withQueryParam("accession-no", accessionNo)
      .withSuccessResponse[Map[String, AnyType]](200)
      .withErrorResponse[ValidationProblemDetails](400)
      .withErrorResponse[Unit](404)
      .withErrorResponse[ProblemDetails](500)
      



}

