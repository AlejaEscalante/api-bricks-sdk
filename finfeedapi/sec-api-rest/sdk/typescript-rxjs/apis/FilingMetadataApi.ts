// tslint:disable
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    DTOFilingMetadataDto,
    DTOFilingSortBy,
    MvcProblemDetails,
    MvcValidationProblemDetails,
} from '../models';

export interface V1FilingsGetRequest {
    cik?: number;
    ticker?: string;
    formType?: string;
    fillingDateStart?: string;
    fillingDateEnd?: string;
    reportDateStart?: string;
    reportDateEnd?: string;
    itemsContain?: string;
    pageSize?: number;
    pageNumber?: number;
    sortBy?: DTOFilingSortBy;
    sortOrder?: string;
}

/**
 * no description
 */
export class FilingMetadataApi extends BaseAPI {

    /**
     * Retrieves metadata for SEC filings based on various filter criteria with pagination and sorting support.    ### Available Sort Fields    Field Name | Description  -----------|-------------  AccessionNumber | SEC filing accession number  FilingDate | Date when filing was submitted  AcceptanceDateTime | Date and time of filing acceptance  ReportDate | Date of the report  Size | Size of the filing document    ### Date Format  All dates must be provided in YYYY-MM-DD format    ### Form Types  Form types can be provided as comma-separated values, e.g.: \"10-K,8-K,10-Q\"    :::tip  For optimal performance, use date ranges and form types to narrow down your search  :::
     * Query SEC filing metadata
     */
    v1FilingsGet({ cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder }: V1FilingsGetRequest): Observable<Array<DTOFilingMetadataDto>>
    v1FilingsGet({ cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder }: V1FilingsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<DTOFilingMetadataDto>>>
    v1FilingsGet({ cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder }: V1FilingsGetRequest, opts?: OperationOpts): Observable<Array<DTOFilingMetadataDto> | AjaxResponse<Array<DTOFilingMetadataDto>>> {

        const query: HttpQuery = {};

        if (cik != null) { query['cik'] = cik; }
        if (ticker != null) { query['ticker'] = ticker; }
        if (formType != null) { query['form_type'] = formType; }
        if (fillingDateStart != null) { query['filling_date_start'] = fillingDateStart; }
        if (fillingDateEnd != null) { query['filling_date_end'] = fillingDateEnd; }
        if (reportDateStart != null) { query['report_date_start'] = reportDateStart; }
        if (reportDateEnd != null) { query['report_date_end'] = reportDateEnd; }
        if (itemsContain != null) { query['items_contain'] = itemsContain; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (pageNumber != null) { query['page_number'] = pageNumber; }
        if (sortBy != null) { query['sort_by'] = sortBy; }
        if (sortOrder != null) { query['sort_order'] = sortOrder; }

        return this.request<Array<DTOFilingMetadataDto>>({
            url: '/v1/filings',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
