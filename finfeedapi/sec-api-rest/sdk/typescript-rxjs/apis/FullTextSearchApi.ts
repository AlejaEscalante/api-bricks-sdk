// tslint:disable
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    DTOSecFilingResultDto,
    MvcProblemDetails,
    MvcValidationProblemDetails,
} from '../models';

export interface V1FullTextGetRequest {
    formType?: string;
    fillingDateStart?: string;
    fillingDateEnd?: string;
    textContains?: string;
    textNotContain?: string;
    pageSize?: number;
    pageNumber?: number;
    sortBy?: string;
    sortOrder?: string;
}

/**
 * no description
 */
export class FullTextSearchApi extends BaseAPI {

    /**
     * Search across SEC filing documents with advanced filtering and sorting capabilities.    ### Available Sort Fields    Field Name | Description  -----------|-------------  AccessionNumber | SEC filing accession number  FormType | Type of the filing document  FilingDate | Date when filing was submitted  CompanyName | Name of the company  CIK | Central Index Key  DocumentFilename | Name of the filing document  DocumentDescription | Description of the document    ### Search Options    Option | Description  --------|-------------  text_contains | Keywords that must appear in the document  text_not_contain | Keywords that must not appear in the document    ### Date Format  All dates must be provided in YYYY-MM-DD format    :::tip  Use text_contains and text_not_contain with multiple keywords separated by commas for more precise searches  :::    :::note  The search is case-insensitive and supports partial word matches  :::
     * Full-text search of SEC filing documents
     */
    v1FullTextGet({ formType, fillingDateStart, fillingDateEnd, textContains, textNotContain, pageSize, pageNumber, sortBy, sortOrder }: V1FullTextGetRequest): Observable<Array<DTOSecFilingResultDto>>
    v1FullTextGet({ formType, fillingDateStart, fillingDateEnd, textContains, textNotContain, pageSize, pageNumber, sortBy, sortOrder }: V1FullTextGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<DTOSecFilingResultDto>>>
    v1FullTextGet({ formType, fillingDateStart, fillingDateEnd, textContains, textNotContain, pageSize, pageNumber, sortBy, sortOrder }: V1FullTextGetRequest, opts?: OperationOpts): Observable<Array<DTOSecFilingResultDto> | AjaxResponse<Array<DTOSecFilingResultDto>>> {

        const query: HttpQuery = {};

        if (formType != null) { query['form_type'] = formType; }
        if (fillingDateStart != null) { query['filling_date_start'] = fillingDateStart; }
        if (fillingDateEnd != null) { query['filling_date_end'] = fillingDateEnd; }
        if (textContains != null) { query['text_contains'] = textContains; }
        if (textNotContain != null) { query['text_not_contain'] = textNotContain; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (pageNumber != null) { query['page_number'] = pageNumber; }
        if (sortBy != null) { query['sort_by'] = sortBy; }
        if (sortOrder != null) { query['sort_order'] = sortOrder; }

        return this.request<Array<DTOSecFilingResultDto>>({
            url: '/v1/full-text',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
