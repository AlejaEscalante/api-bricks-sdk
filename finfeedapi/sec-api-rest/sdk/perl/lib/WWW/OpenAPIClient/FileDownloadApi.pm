=begin comment

FinFeedAPI SEC REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Contact: support@apibricks.io
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package WWW::OpenAPIClient::FileDownloadApi;

require 5.6.0;
use strict;
use warnings;
use utf8;
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::OpenAPIClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::OpenAPIClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::OpenAPIClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# v1_download_get
#
# Download file from SEC EDGAR archive
#
# @param string $accession_no SEC filing accession number in format: 0000000000-00-000000 (required)
# @param string $file_name Name of the file to download from the filing (required)
{
    my $params = {
    'accession_no' => {
        data_type => 'string',
        description => 'SEC filing accession number in format: 0000000000-00-000000',
        required => '1',
    },
    'file_name' => {
        data_type => 'string',
        description => 'Name of the file to download from the filing',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'v1_download_get' } = {
        summary => 'Download file from SEC EDGAR archive',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub v1_download_get {
    my ($self, %args) = @_;

    # verify the required parameter 'accession_no' is set
    unless (exists $args{'accession_no'}) {
      croak("Missing the required parameter 'accession_no' when calling v1_download_get");
    }

    # verify the required parameter 'file_name' is set
    unless (exists $args{'file_name'}) {
      croak("Missing the required parameter 'file_name' when calling v1_download_get");
    }

    # parse inputs
    my $_resource_path = '/v1/download';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/octet-stream', 'text/html', 'application/xml', 'text/plain', 'application/pdf', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'accession_no'}) {
        $query_params->{'accession_no'} = $self->{api_client}->to_query_value($args{'accession_no'});
    }

    # query params
    if ( exists $args{'file_name'}) {
        $query_params->{'file_name'} = $self->{api_client}->to_query_value($args{'file_name'});
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(APIKey JWT )];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

1;
