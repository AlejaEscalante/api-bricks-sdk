/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RestApi);
  }
}(this, function(expect, RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RestApi.DTOFilingMetadataDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DTOFilingMetadataDto', function() {
    it('should create an instance of DTOFilingMetadataDto', function() {
      // uncomment below and update the code to test DTOFilingMetadataDto
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be.a(RestApi.DTOFilingMetadataDto);
    });

    it('should have the property cik (base name: "cik")', function() {
      // uncomment below and update the code to test the property cik
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property accessionNumber (base name: "accession_number")', function() {
      // uncomment below and update the code to test the property accessionNumber
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property filingDate (base name: "filing_date")', function() {
      // uncomment below and update the code to test the property filingDate
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property reportDate (base name: "report_date")', function() {
      // uncomment below and update the code to test the property reportDate
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property acceptanceDateTime (base name: "acceptance_date_time")', function() {
      // uncomment below and update the code to test the property acceptanceDateTime
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property act (base name: "act")', function() {
      // uncomment below and update the code to test the property act
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property form (base name: "form")', function() {
      // uncomment below and update the code to test the property form
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property fileNumber (base name: "file_number")', function() {
      // uncomment below and update the code to test the property fileNumber
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property filmNumber (base name: "film_number")', function() {
      // uncomment below and update the code to test the property filmNumber
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property coreType (base name: "core_type")', function() {
      // uncomment below and update the code to test the property coreType
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property isXbrl (base name: "is_xbrl")', function() {
      // uncomment below and update the code to test the property isXbrl
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property isInlineXbrl (base name: "is_inline_xbrl")', function() {
      // uncomment below and update the code to test the property isInlineXbrl
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property primaryDocument (base name: "primary_document")', function() {
      // uncomment below and update the code to test the property primaryDocument
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property primaryDocDescription (base name: "primary_doc_description")', function() {
      // uncomment below and update the code to test the property primaryDocDescription
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

    it('should have the property sourceFile (base name: "source_file")', function() {
      // uncomment below and update the code to test the property sourceFile
      //var instance = new RestApi.DTOFilingMetadataDto();
      //expect(instance).to.be();
    });

  });

}));
