/*
 * REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using APIBricks.FinFeedAPI.SECAPI.REST.V1.Api;
using APIBricks.FinFeedAPI.SECAPI.REST.V1.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace APIBricks.FinFeedAPI.SECAPI.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing FilingMetadataApi
    /// </summary>
    public sealed class FilingMetadataApiTests : ApiTestsBase
    {
        private readonly IFilingMetadataApi _instance;

        public FilingMetadataApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IFilingMetadataApi>();
        }

        /// <summary>
        /// Test V1FilingsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task V1FilingsGetAsyncTest()
        {
            Client.Option<long> cik = default!;
            Client.Option<string> ticker = default!;
            Client.Option<string> formType = default!;
            Client.Option<string> fillingDateStart = default!;
            Client.Option<string> fillingDateEnd = default!;
            Client.Option<string> reportDateStart = default!;
            Client.Option<string> reportDateEnd = default!;
            Client.Option<string> itemsContain = default!;
            Client.Option<int> pageSize = default!;
            Client.Option<int> pageNumber = default!;
            Client.Option<DTOFilingSortBy> sortBy = default!;
            Client.Option<string> sortOrder = default!;
            var response = await _instance.V1FilingsGetAsync(cik, ticker, formType, fillingDateStart, fillingDateEnd, reportDateStart, reportDateEnd, itemsContain, pageSize, pageNumber, sortBy, sortOrder);
            var model = response.Ok();
            Assert.IsType<List<DTOFilingMetadataDto>>(model);
        }
    }
}
