/*
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASContentExtractionApi {
    OASClient client;

    public OASContentExtractionApi(OASClient client) {
        this.client = client;
    }

    public OASContentExtractionApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Extract and classify SEC filing content
     * Retrieves filing content from the EDGAR database and intelligently classifies it according to form type and item categories.\r\n\r\n### Supported Form Types\r\n\r\nForm Type | Description\r\n----------|------------\r\n8-K      | Current report filing\r\n10-K     | Annual report filing\r\n10-Q     | Quarterly report filing\r\n\r\n### Content Classification\r\n- 8-K forms: Content classified by item numbers (e.g., 1.01, 2.01)\r\n- 10-K/10-Q forms: Items categorized by their respective part and item structure\r\n\r\n:::note\r\nBoth HTML and plain text documents are supported for content extraction.\r\n:::
     * @param accessionNumber The SEC filing accession number used to retrieve the filing from EDGAR database. (required)
     * @param type Result type (text or html, default: text) (optional)
     * @return OASDTOFilingExtractResultDto
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDTOFilingExtractResultDto v1ExtractorGet(Map<String, Object> params) {
        client.assertNotNull(params.get('accessionNumber'), 'accessionNumber');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('accession_number', (String) params.get('accessionNumber')));
        query.addAll(client.makeParam('type', (OASDTOExtractorType) params.get('type')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDTOFilingExtractResultDto) client.invoke(
            'GET', '/v1/extractor', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASDTOFilingExtractResultDto.class
        );
    }
    /**
     * Extract specific item content from SEC filing
     * Retrieves filing content from the EDGAR database and returns only the text content of the specified item number.\r\n\r\n### Item Number Format\r\n\r\nForm Type | Item Format Examples\r\n-----------|-------------------\r\n8-K       | 1.01, 2.01, 7.01\r\n10-K      | 1, 2, 3\r\n10-K/10-Q | PartI 1, PartII 2\r\n\r\n:::tip\r\nFor best results, ensure the item number matches exactly with the filing\&#39;s structure.\r\n:::
     * @param accessionNumber The SEC filing accession number used to retrieve the filing from EDGAR database. (required)
     * @param itemNumber The specific item number to extract (e.g., &quot;1.01&quot;, &quot;2.01&quot;, &quot;7.01&quot;). (required)
     * @param type Result type (text or html, default: text) (optional)
     * @return String
     * @throws OAS.ApiException if fails to make API call
     */
    public String v1ExtractorItemGet(Map<String, Object> params) {
        client.assertNotNull(params.get('accessionNumber'), 'accessionNumber');
        client.assertNotNull(params.get('itemNumber'), 'itemNumber');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('accession_number', (String) params.get('accessionNumber')));
        query.addAll(client.makeParam('item_number', (String) params.get('itemNumber')));
        query.addAll(client.makeParam('type', (OASDTOExtractorType) params.get('type')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (String) client.invoke(
            'GET', '/v1/extractor/item', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            String.class
        );
    }
}
