/*
 * FinFeedAPI SEC REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the response for a single SEC filing metadata record.\nMaps fields from the edgar_submissions table.
 */
public class OASDTOFilingMetadataDto implements OAS.MappedProperties {
    /**
     * Get cik
     * @return cik
     */
    public Long cik { get; set; }

    /**
     * Get accessionNumber
     * @return accessionNumber
     */
    public String accessionNumber { get; set; }

    /**
     * Get filingDate
     * @return filingDate
     */
    public Date filingDate { get; set; }

    /**
     * Get reportDate
     * @return reportDate
     */
    public Date reportDate { get; set; }

    /**
     * Get acceptanceDateTime
     * @return acceptanceDateTime
     */
    public Datetime acceptanceDateTime { get; set; }

    /**
     * Get act
     * @return act
     */
    public String act { get; set; }

    /**
     * Get form
     * @return form
     */
    public String form { get; set; }

    /**
     * Get fileNumber
     * @return fileNumber
     */
    public String fileNumber { get; set; }

    /**
     * Get filmNumber
     * @return filmNumber
     */
    public String filmNumber { get; set; }

    /**
     * Get items
     * @return items
     */
    public String items { get; set; }

    /**
     * Get coreType
     * @return coreType
     */
    public String coreType { get; set; }

    /**
     * Get size
     * @return size
     */
    public Integer size { get; set; }

    /**
     * Get isXbrl
     * @return isXbrl
     */
    public Boolean isXbrl { get; set; }

    /**
     * Get isInlineXbrl
     * @return isInlineXbrl
     */
    public Boolean isInlineXbrl { get; set; }

    /**
     * Get primaryDocument
     * @return primaryDocument
     */
    public String primaryDocument { get; set; }

    /**
     * Get primaryDocDescription
     * @return primaryDocDescription
     */
    public String primaryDocDescription { get; set; }

    /**
     * Get sourceFile
     * @return sourceFile
     */
    public String sourceFile { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'accession_number' => 'accessionNumber',
        'filing_date' => 'filingDate',
        'report_date' => 'reportDate',
        'acceptance_date_time' => 'acceptanceDateTime',
        'file_number' => 'fileNumber',
        'film_number' => 'filmNumber',
        'core_type' => 'coreType',
        'is_xbrl' => 'isXbrl',
        'is_inline_xbrl' => 'isInlineXbrl',
        'primary_document' => 'primaryDocument',
        'primary_doc_description' => 'primaryDocDescription',
        'source_file' => 'sourceFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASDTOFilingMetadataDto getExample() {
        OASDTOFilingMetadataDto dtOFilingMetadataDto = new OASDTOFilingMetadataDto();
          dtOFilingMetadataDto.cik = 123456789L;
          dtOFilingMetadataDto.accessionNumber = '';
          dtOFilingMetadataDto.filingDate = Date.newInstance(2000, 1, 23);
          dtOFilingMetadataDto.reportDate = Date.newInstance(2000, 1, 23);
          dtOFilingMetadataDto.acceptanceDateTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          dtOFilingMetadataDto.act = '';
          dtOFilingMetadataDto.form = '';
          dtOFilingMetadataDto.fileNumber = '';
          dtOFilingMetadataDto.filmNumber = '';
          dtOFilingMetadataDto.items = '';
          dtOFilingMetadataDto.coreType = '';
          dtOFilingMetadataDto.size = 0;
          dtOFilingMetadataDto.isXbrl = true;
          dtOFilingMetadataDto.isInlineXbrl = true;
          dtOFilingMetadataDto.primaryDocument = '';
          dtOFilingMetadataDto.primaryDocDescription = '';
          dtOFilingMetadataDto.sourceFile = '';
        return dtOFilingMetadataDto;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASDTOFilingMetadataDto) {           
            OASDTOFilingMetadataDto dtOFilingMetadataDto = (OASDTOFilingMetadataDto) obj;
            return this.cik == dtOFilingMetadataDto.cik
                && this.accessionNumber == dtOFilingMetadataDto.accessionNumber
                && this.filingDate == dtOFilingMetadataDto.filingDate
                && this.reportDate == dtOFilingMetadataDto.reportDate
                && this.acceptanceDateTime == dtOFilingMetadataDto.acceptanceDateTime
                && this.act == dtOFilingMetadataDto.act
                && this.form == dtOFilingMetadataDto.form
                && this.fileNumber == dtOFilingMetadataDto.fileNumber
                && this.filmNumber == dtOFilingMetadataDto.filmNumber
                && this.items == dtOFilingMetadataDto.items
                && this.coreType == dtOFilingMetadataDto.coreType
                && this.size == dtOFilingMetadataDto.size
                && this.isXbrl == dtOFilingMetadataDto.isXbrl
                && this.isInlineXbrl == dtOFilingMetadataDto.isInlineXbrl
                && this.primaryDocument == dtOFilingMetadataDto.primaryDocument
                && this.primaryDocDescription == dtOFilingMetadataDto.primaryDocDescription
                && this.sourceFile == dtOFilingMetadataDto.sourceFile;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (cik == null ? 0 : System.hashCode(cik));
        hashCode = (17 * hashCode) + (accessionNumber == null ? 0 : System.hashCode(accessionNumber));
        hashCode = (17 * hashCode) + (filingDate == null ? 0 : System.hashCode(filingDate));
        hashCode = (17 * hashCode) + (reportDate == null ? 0 : System.hashCode(reportDate));
        hashCode = (17 * hashCode) + (acceptanceDateTime == null ? 0 : System.hashCode(acceptanceDateTime));
        hashCode = (17 * hashCode) + (act == null ? 0 : System.hashCode(act));
        hashCode = (17 * hashCode) + (form == null ? 0 : System.hashCode(form));
        hashCode = (17 * hashCode) + (fileNumber == null ? 0 : System.hashCode(fileNumber));
        hashCode = (17 * hashCode) + (filmNumber == null ? 0 : System.hashCode(filmNumber));
        hashCode = (17 * hashCode) + (items == null ? 0 : System.hashCode(items));
        hashCode = (17 * hashCode) + (coreType == null ? 0 : System.hashCode(coreType));
        hashCode = (17 * hashCode) + (size == null ? 0 : System.hashCode(size));
        hashCode = (17 * hashCode) + (isXbrl == null ? 0 : System.hashCode(isXbrl));
        hashCode = (17 * hashCode) + (isInlineXbrl == null ? 0 : System.hashCode(isInlineXbrl));
        hashCode = (17 * hashCode) + (primaryDocument == null ? 0 : System.hashCode(primaryDocument));
        hashCode = (17 * hashCode) + (primaryDocDescription == null ? 0 : System.hashCode(primaryDocDescription));
        hashCode = (17 * hashCode) + (sourceFile == null ? 0 : System.hashCode(sourceFile));
        return hashCode;
    }
}

