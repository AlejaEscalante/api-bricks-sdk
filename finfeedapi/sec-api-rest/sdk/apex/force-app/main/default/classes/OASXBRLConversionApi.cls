/*
 * FinFeedAPI SEC REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASXBRLConversionApi {
    OASClient client;

    public OASXBRLConversionApi(OASClient client) {
        this.client = client;
    }

    public OASXBRLConversionApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Convert XBRL data to JSON format
     * Converts XBRL data to JSON format using one of three possible input methods.\n\n### Input Methods\n\n1. HTML URL (htm-url)\n   - URL of the filing ending with .htm or .html\n   - Both filing URLs and index page URLs are accepted\n   - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231.htm\n\n2. XBRL URL (xbrl-url)\n   - URL of the XBRL file ending with .xml\n   - Can be found in the dataFiles array from Query API\n   - Example: https://www.sec.gov/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231_htm.xml\n\n3. Accession Number (accession-no)\n   - The SEC filing accession number\n   - Example: 0001564590-21-004599\n\n:::note\nOnly one of the three parameters should be provided. If multiple parameters are provided, the priority order is:\n1. htm-url\n2. xbrl-url\n3. accession-no\n:::\n\n### Supported Filing Types\n\n- Annual Reports (10-K)\n- Quarterly Reports (10-Q)\n- Current Reports (8-K)\n- Registration Statements (S-1, S-3)\n- Foreign Private Issuer Reports (20-F, 40-F)\n\n### Response Format\n\nThe API returns a JSON object containing:\n- Financial statements (Income Statement, Balance Sheet, Cash Flow Statement)\n- Accounting policies and footnotes\n- Company information\n- Filing metadata\n\n### Example Response\n&#x60;&#x60;&#x60;json\n{\n  &quot;StatementsOfIncome&quot;: {\n    &quot;RevenueFromContractWithCustomerExcludingAssessedTax&quot;: [\n      {\n        &quot;decimals&quot;: &quot;-6&quot;,\n        &quot;unitRef&quot;: &quot;U_USD&quot;,\n        &quot;period&quot;: {\n          &quot;startDate&quot;: &quot;2023-07-01&quot;,\n          &quot;endDate&quot;: &quot;2024-06-30&quot;\n        },\n        &quot;value&quot;: &quot;245122000000&quot;\n      }\n    ]\n  }\n}\n&#x60;&#x60;&#x60;
     * @param htmUrl URL of the filing ending with .htm or .html (optional)
     * @param xbrlUrl URL of the XBRL file ending with .xml (optional)
     * @param accessionNo SEC filing accession number (optional)
     * @return Map<String, oas_any_type_not_mapped>
     * @throws OAS.ApiException if fails to make API call
     */
    public Map<String, oas_any_type_not_mapped> v1XbrlConverterGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('htm-url', (String) params.get('htmUrl')));
        query.addAll(client.makeParam('xbrl-url', (String) params.get('xbrlUrl')));
        query.addAll(client.makeParam('accession-no', (String) params.get('accessionNo')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Map<String, oas_any_type_not_mapped>) client.invoke(
            'GET', '/v1/xbrl-converter', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'APIKey', 'JWT' },
            Map<String, oas_any_type_not_mapped>.class
        );
    }
}
