--  Exchange Rates Historical REST API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: v1
--  Contact: support@apibricks.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.15.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");



   type V1ChainNetworkAddress_Type is
     record
       Chain_Id : Swagger.Nullable_UString;
       Network_Id : Swagger.Nullable_UString;
       Address : Swagger.Nullable_UString;
     end record;


   package V1ChainNetworkAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ChainNetworkAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ChainNetworkAddress_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ChainNetworkAddress_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ChainNetworkAddress_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ChainNetworkAddress_Type_Vectors.Vector);



   type V1ExchangeRate_Type is
     record
       Time : Swagger.Nullable_Date;
       Asset_Id_Base : Swagger.Nullable_UString;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Rate : Swagger.Number;
     end record;


   package V1ExchangeRate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRate_Type_Vectors.Vector);



   type V1ExchangeRatesRate_Type is
     record
       Time : Swagger.Nullable_Date;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Rate : Swagger.Number;
     end record;


   package V1ExchangeRatesRate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRatesRate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRatesRate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRatesRate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRatesRate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRatesRate_Type_Vectors.Vector);



   type V1ExchangeRatesTimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Rate_Open : Swagger.Number;
       Rate_High : Swagger.Number;
       Rate_Low : Swagger.Number;
       Rate_Close : Swagger.Number;
     end record;


   package V1ExchangeRatesTimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRatesTimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRatesTimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRatesTimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRatesTimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRatesTimeseriesItem_Type_Vectors.Vector);



   type V1Icon_Type is
     record
       Exchange_Id : Swagger.Nullable_UString;
       Asset_Id : Swagger.Nullable_UString;
       Url : Swagger.Nullable_UString;
     end record;


   package V1Icon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Icon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Icon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Icon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Icon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Icon_Type_Vectors.Vector);



   type V1TimeseriesPeriod_Type is
     record
       Period_Id : Swagger.Nullable_UString;
       Length_Seconds : Swagger.Nullable_Integer;
       Length_Months : Swagger.Nullable_Integer;
       Unit_Count : Swagger.Nullable_Integer;
       Unit_Name : Swagger.Nullable_UString;
       Display_Name : Swagger.Nullable_UString;
     end record;


   package V1TimeseriesPeriod_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1TimeseriesPeriod_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1TimeseriesPeriod_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1TimeseriesPeriod_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1TimeseriesPeriod_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1TimeseriesPeriod_Type_Vectors.Vector);



   type V1Asset_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Type_Is_Crypto : Swagger.Nullable_Integer;
       Data_Quote_Start : Swagger.Nullable_Date;
       Data_Quote_End : Swagger.Nullable_Date;
       Data_Orderbook_Start : Swagger.Nullable_Date;
       Data_Orderbook_End : Swagger.Nullable_Date;
       Data_Trade_Start : Swagger.Nullable_Date;
       Data_Trade_End : Swagger.Nullable_Date;
       Data_Symbols_Count : Swagger.Nullable_Long;
       Volume_1hrs_Usd : Swagger.Number;
       Volume_1day_Usd : Swagger.Number;
       Volume_1mth_Usd : Swagger.Number;
       Price_Usd : Swagger.Number;
       Id_Icon : Swagger.Nullable_UString;
       Supply_Current : Swagger.Number;
       Supply_Total : Swagger.Number;
       Supply_Max : Swagger.Number;
       Chain_Addresses : .Models.V1ChainNetworkAddress_Type_Vectors.Vector;
       Data_Start : Swagger.Nullable_UString;
       Data_End : Swagger.Nullable_UString;
     end record;


   package V1Asset_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Asset_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Asset_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Asset_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Asset_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Asset_Type_Vectors.Vector);



   type V1ExchangeRates_Type is
     record
       Asset_Id_Base : Swagger.Nullable_UString;
       Rates : .Models.V1ExchangeRatesRate_Type_Vectors.Vector;
     end record;


   package V1ExchangeRates_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRates_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRates_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRates_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRates_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRates_Type_Vectors.Vector);


end .Models;
