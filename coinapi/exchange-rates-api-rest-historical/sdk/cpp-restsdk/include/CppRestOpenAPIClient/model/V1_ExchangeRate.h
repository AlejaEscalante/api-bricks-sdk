/**
 * Exchange Rates Historical REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.15.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V1_ExchangeRate.h
 *
 * Represents an exchange rate.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRate_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRate_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Represents an exchange rate.
/// </summary>
class  V1_ExchangeRate
    : public ModelBase
{
public:
    V1_ExchangeRate();
    virtual ~V1_ExchangeRate();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// V1_ExchangeRate members


    /// <summary>
    /// Gets or sets the time of the exchange rate.
    /// </summary>
    utility::datetime getTime() const;
    bool timeIsSet() const;
    void unsetTime();
    void setTime(const utility::datetime& value);

    /// <summary>
    /// Gets or sets the base asset ID of the exchange rate.
    /// </summary>
    utility::string_t getAssetIdBase() const;
    bool assetIdBaseIsSet() const;
    void unsetAsset_id_base();
    void setAssetIdBase(const utility::string_t& value);

    /// <summary>
    /// Gets or sets the quote asset ID of the exchange rate.
    /// </summary>
    utility::string_t getAssetIdQuote() const;
    bool assetIdQuoteIsSet() const;
    void unsetAsset_id_quote();
    void setAssetIdQuote(const utility::string_t& value);

    /// <summary>
    /// Gets or sets the exchange rate value.
    /// </summary>
    double getRate() const;
    bool rateIsSet() const;
    void unsetRate();
    void setRate(double value);


protected:
    utility::datetime m_Time;
    bool m_TimeIsSet;

    utility::string_t m_Asset_id_base;
    bool m_Asset_id_baseIsSet;

    utility::string_t m_Asset_id_quote;
    bool m_Asset_id_quoteIsSet;

    double m_Rate;
    bool m_RateIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRate_H_ */
