/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.ExchangeRatesApi
import org.openapitools.client.models.V1ExchangeRate
import org.openapitools.client.models.V1ExchangeRates
import org.openapitools.client.models.V1ExchangeRatesTimeseriesItem
import org.openapitools.client.models.V1TimeseriesPeriod

class ExchangeRatesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ExchangeRatesApi
        //val apiInstance = ExchangeRatesApi()

        // to test getSpecificRate
        should("test getSpecificRate") {
            // uncomment below to test getSpecificRate
            //val assetIdBase : kotlin.String = assetIdBase_example // kotlin.String | Requested exchange rate base asset identifier (from the Metadata -> Assets)
            //val assetIdQuote : kotlin.String = assetIdQuote_example // kotlin.String | Requested exchange rate quote asset identifier (from the Metadata -> Assets)
            //val time : kotlin.String = time_example // kotlin.String | Time at which exchange rate is calculated (optional, if not supplied then current rate is returned)
            //val result : V1ExchangeRate = apiInstance.getSpecificRate(assetIdBase, assetIdQuote, time)
            //result shouldBe ("TODO")
        }

        // to test v1ExchangerateAssetIdBaseAssetIdQuoteHistoryGet
        should("test v1ExchangerateAssetIdBaseAssetIdQuoteHistoryGet") {
            // uncomment below to test v1ExchangerateAssetIdBaseAssetIdQuoteHistoryGet
            //val assetIdBase : kotlin.String = assetIdBase_example // kotlin.String | Requested exchange rates base asset identifier (from the Metadata -> Assets)
            //val assetIdQuote : kotlin.String = assetIdQuote_example // kotlin.String | Requested exchange rates base asset identifier (from the Metadata -> Assets)
            //val periodId : kotlin.String = periodId_example // kotlin.String | Identifier of requested timeseries period (required, e.g. `5SEC` or `1HRS`)
            //val timeStart : kotlin.String = timeStart_example // kotlin.String | Timeseries starting time in ISO 8601 (required)
            //val timeEnd : kotlin.String = timeEnd_example // kotlin.String | Timeseries ending time in ISO 8601 (required)
            //val limit : kotlin.Int = 56 // kotlin.Int | Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
            //val result : kotlin.collections.List<V1ExchangeRatesTimeseriesItem> = apiInstance.v1ExchangerateAssetIdBaseAssetIdQuoteHistoryGet(assetIdBase, assetIdQuote, periodId, timeStart, timeEnd, limit)
            //result shouldBe ("TODO")
        }

        // to test v1ExchangerateAssetIdBaseGet
        should("test v1ExchangerateAssetIdBaseGet") {
            // uncomment below to test v1ExchangerateAssetIdBaseGet
            //val assetIdBase : kotlin.String = assetIdBase_example // kotlin.String | Requested exchange rates base asset identifier (from the Metadata -> Assets)
            //val filterAssetId : kotlin.String = filterAssetId_example // kotlin.String | Comma or semicolon delimited asset identifiers used to filter response (optional)
            //val invert : kotlin.Boolean = true // kotlin.Boolean | True will invert all the rates (optional, if true then rates will be calculated as `rate = 1 / actual_rate` eg. `USD/BTC` as `BTC/USD`)
            //val time : kotlin.String = time_example // kotlin.String | Time for historical rates (optional)
            //val result : V1ExchangeRates = apiInstance.v1ExchangerateAssetIdBaseGet(assetIdBase, filterAssetId, invert, time)
            //result shouldBe ("TODO")
        }

        // to test v1ExchangerateHistoryPeriodsGet
        should("test v1ExchangerateHistoryPeriodsGet") {
            // uncomment below to test v1ExchangerateHistoryPeriodsGet
            //val result : kotlin.collections.List<V1TimeseriesPeriod> = apiInstance.v1ExchangerateHistoryPeriodsGet()
            //result shouldBe ("TODO")
        }

    }
}
