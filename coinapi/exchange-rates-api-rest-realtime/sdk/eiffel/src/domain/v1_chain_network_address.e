note
 description:"[
		Exchange Rates Realtime REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_CHAIN_NETWORK_ADDRESS




feature --Access

    chain_id: detachable STRING_32
      -- Gets or sets chain id
    network_id: detachable STRING_32
      -- Gets or sets network id
    address: detachable STRING_32
      -- Gets or sets chain address

feature -- Change Element

    set_chain_id (a_name: like chain_id)
        -- Set 'chain_id' with 'a_name'.
      do
        chain_id := a_name
      ensure
        chain_id_set: chain_id = a_name
      end

    set_network_id (a_name: like network_id)
        -- Set 'network_id' with 'a_name'.
      do
        network_id := a_name
      ensure
        network_id_set: network_id = a_name
      end

    set_address (a_name: like address)
        -- Set 'address' with 'a_name'.
      do
        address := a_name
      ensure
        address_set: address = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_CHAIN_NETWORK_ADDRESS%N")
        if attached chain_id as l_chain_id then
          Result.append ("%Nchain_id:")
          Result.append (l_chain_id.out)
          Result.append ("%N")
        end
        if attached network_id as l_network_id then
          Result.append ("%Nnetwork_id:")
          Result.append (l_network_id.out)
          Result.append ("%N")
        end
        if attached address as l_address then
          Result.append ("%Naddress:")
          Result.append (l_address.out)
          Result.append ("%N")
        end
      end
end

