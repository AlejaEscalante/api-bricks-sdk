{-
   Exchange Rates Realtime REST API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: v1
   Contact: support@apibricks.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.ExchangeRates exposing
    ( getSpecificRate
    , v1ExchangerateAssetIdBaseGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode


{-| Get specific rate

Retrieves the exchange rate for a specific base and quote asset at a given time or the current rate.              :::info If you are using an exchange rate for mission-critical operations, then for best reliability, you should measure the difference between current time and the time returned from the response to ensure that value of the difference between those meets your internal requirements. :::

-}
getSpecificRate : String -> String -> String -> Api.Request Api.Data.V1ExchangeRate
getSpecificRate assetIdBase_path assetIdQuote_path auth_token =
    Api.request
        "GET"
        "/v1/exchangerate/{asset_id_base}/{asset_id_quote}"
        [ ( "asset_id_base", identity assetIdBase_path ), ( "asset_id_quote", identity assetIdQuote_path ) ]
        []
        []
        Nothing
        Api.Data.v1ExchangeRateDecoder
        |> Api.withBearerToken auth_token

{-| Get all current rates

Get the current exchange rate between requested asset and all other assets.              :::info If you are using an exchange rate for mission-critical operations, then for best reliability, you should measure the difference between current time and the time returned from the response to ensure that value of the difference between those meets your internal requirements. :::              :::info You can invert the rates by using Y = 1 / X equation, for example BTC/USD = 1 / (USD/BTC); :::

-}
v1ExchangerateAssetIdBaseGet : String -> Maybe String -> Maybe Bool -> String -> Api.Request Api.Data.V1ExchangeRates
v1ExchangerateAssetIdBaseGet assetIdBase_path filterAssetId_query invert_query auth_token =
    Api.request
        "GET"
        "/v1/exchangerate/{asset_id_base}"
        [ ( "asset_id_base", identity assetIdBase_path ) ]
        [ ( "filter_asset_id", Maybe.map identity filterAssetId_query ), ( "invert", Maybe.map (\val -> if val then "true" else "false") invert_query ) ]
        []
        Nothing
        Api.Data.v1ExchangeRatesDecoder
        |> Api.withBearerToken auth_token
