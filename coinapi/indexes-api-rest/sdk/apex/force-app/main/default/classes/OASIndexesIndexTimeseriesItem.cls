/*
 * Indexes REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents a timeseries item with value information.
 */
public class OASIndexesIndexTimeseriesItem implements OAS.MappedProperties {
    /**
     * Gets or sets the start time of the time period.
     * @return timePeriodStart
     */
    public Datetime timePeriodStart { get; set; }

    /**
     * Gets or sets the end time of the time period.
     * @return timePeriodEnd
     */
    public Datetime timePeriodEnd { get; set; }

    /**
     * Gets or sets the time when the value opened.
     * @return timeOpen
     */
    public Datetime timeOpen { get; set; }

    /**
     * Gets or sets the time when the value closed.
     * @return timeClose
     */
    public Datetime timeClose { get; set; }

    /**
     * Gets or sets the opening value.
     * @return valueOpen
     */
    public Double valueOpen { get; set; }

    /**
     * Gets or sets the highest value during the time period.
     * @return valueHigh
     */
    public Double valueHigh { get; set; }

    /**
     * Gets or sets the lowest value during the time period.
     * @return valueLow
     */
    public Double valueLow { get; set; }

    /**
     * Gets or sets the closing value.
     * @return valueClose
     */
    public Double valueClose { get; set; }

    /**
     * Gets or sets the number of values during the time period.
     * @return valueCount
     */
    public Long valueCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time_period_start' => 'timePeriodStart',
        'time_period_end' => 'timePeriodEnd',
        'time_open' => 'timeOpen',
        'time_close' => 'timeClose',
        'value_open' => 'valueOpen',
        'value_high' => 'valueHigh',
        'value_low' => 'valueLow',
        'value_close' => 'valueClose',
        'value_count' => 'valueCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASIndexesIndexTimeseriesItem getExample() {
        OASIndexesIndexTimeseriesItem indexesIndexTimeseriesItem = new OASIndexesIndexTimeseriesItem();
          indexesIndexTimeseriesItem.timePeriodStart = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          indexesIndexTimeseriesItem.timePeriodEnd = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          indexesIndexTimeseriesItem.timeOpen = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          indexesIndexTimeseriesItem.timeClose = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          indexesIndexTimeseriesItem.valueOpen = 1.3579;
          indexesIndexTimeseriesItem.valueHigh = 1.3579;
          indexesIndexTimeseriesItem.valueLow = 1.3579;
          indexesIndexTimeseriesItem.valueClose = 1.3579;
          indexesIndexTimeseriesItem.valueCount = 123456789L;
        return indexesIndexTimeseriesItem;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASIndexesIndexTimeseriesItem) {           
            OASIndexesIndexTimeseriesItem indexesIndexTimeseriesItem = (OASIndexesIndexTimeseriesItem) obj;
            return this.timePeriodStart == indexesIndexTimeseriesItem.timePeriodStart
                && this.timePeriodEnd == indexesIndexTimeseriesItem.timePeriodEnd
                && this.timeOpen == indexesIndexTimeseriesItem.timeOpen
                && this.timeClose == indexesIndexTimeseriesItem.timeClose
                && this.valueOpen == indexesIndexTimeseriesItem.valueOpen
                && this.valueHigh == indexesIndexTimeseriesItem.valueHigh
                && this.valueLow == indexesIndexTimeseriesItem.valueLow
                && this.valueClose == indexesIndexTimeseriesItem.valueClose
                && this.valueCount == indexesIndexTimeseriesItem.valueCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (timePeriodStart == null ? 0 : System.hashCode(timePeriodStart));
        hashCode = (17 * hashCode) + (timePeriodEnd == null ? 0 : System.hashCode(timePeriodEnd));
        hashCode = (17 * hashCode) + (timeOpen == null ? 0 : System.hashCode(timeOpen));
        hashCode = (17 * hashCode) + (timeClose == null ? 0 : System.hashCode(timeClose));
        hashCode = (17 * hashCode) + (valueOpen == null ? 0 : System.hashCode(valueOpen));
        hashCode = (17 * hashCode) + (valueHigh == null ? 0 : System.hashCode(valueHigh));
        hashCode = (17 * hashCode) + (valueLow == null ? 0 : System.hashCode(valueLow));
        hashCode = (17 * hashCode) + (valueClose == null ? 0 : System.hashCode(valueClose));
        hashCode = (17 * hashCode) + (valueCount == null ? 0 : System.hashCode(valueCount));
        return hashCode;
    }
}

