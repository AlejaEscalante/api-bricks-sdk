/*
 * Indexes REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASIndexesIndexValue
 */
public class OASIndexesIndexValue {
    /**
     * Get timestamp
     * @return timestamp
     */
    public Datetime timestamp { get; set; }

    /**
     * Get value
     * @return value
     */
    public Double value { get; set; }

    /**
     * Get composition
     * @return composition
     */
    public List<OASIndexesIndexValueComponent> composition { get; set; }

    public OASIndexesIndexValue() {
        composition = new List<OASIndexesIndexValueComponent>();
    }

    public static OASIndexesIndexValue getExample() {
        OASIndexesIndexValue indexesIndexValue = new OASIndexesIndexValue();
          indexesIndexValue.timestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          indexesIndexValue.value = 1.3579;
          indexesIndexValue.composition = new List<OASIndexesIndexValueComponent>{OASIndexesIndexValueComponent.getExample()};
        return indexesIndexValue;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASIndexesIndexValue) {           
            OASIndexesIndexValue indexesIndexValue = (OASIndexesIndexValue) obj;
            return this.timestamp == indexesIndexValue.timestamp
                && this.value == indexesIndexValue.value
                && this.composition == indexesIndexValue.composition;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (composition == null ? 0 : System.hashCode(composition));
        return hashCode;
    }
}

