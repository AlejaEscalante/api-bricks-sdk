// tslint:disable
/**
 * Indexes REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    MetadataTimeseriesPeriod,
} from '../models';

/**
 * no description
 */
export class PeriodsApi extends BaseAPI {

    /**
     * Get full list of supported time periods                ### Available periods                Time unit | Period identifiers  --------- | -----------  Second | 1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC  Minute | 1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN  Hour | 1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRS  Day | 1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAY  Month | 1MTH, 2MTH, 3MTH, 4MTH, 6MTH  Year | 1YRS, 2YRS, 3YRS, 4YRS, 5YRS                :::tip  You can assume that we will not remove any periods from this response, however, we may add new ones.  :::
     * List all periods
     */
    v1MetadataPeriodsGet(): Observable<Array<MetadataTimeseriesPeriod>>
    v1MetadataPeriodsGet(opts?: OperationOpts): Observable<AjaxResponse<Array<MetadataTimeseriesPeriod>>>
    v1MetadataPeriodsGet(opts?: OperationOpts): Observable<Array<MetadataTimeseriesPeriod> | AjaxResponse<Array<MetadataTimeseriesPeriod>>> {
        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'X-CoinAPI-Key': this.configuration.apiKey('X-CoinAPI-Key') }), // ApiKey authentication
        };

        return this.request<Array<MetadataTimeseriesPeriod>>({
            url: '/v1/metadata/periods',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

}
