#
# CoinAPI Indexes REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IndexId
No description available.
.PARAMETER AssetId
No description available.
.PARAMETER Weight
No description available.
.OUTPUTS

IndexesIndexMultiAssetWeight<PSCustomObject>
#>

function Initialize-IndexesIndexMultiAssetWeight {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IndexId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AssetId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Weight}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => IndexesIndexMultiAssetWeight' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "indexId" = ${IndexId}
            "assetId" = ${AssetId}
            "weight" = ${Weight}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IndexesIndexMultiAssetWeight<PSCustomObject>

.DESCRIPTION

Convert from JSON to IndexesIndexMultiAssetWeight<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IndexesIndexMultiAssetWeight<PSCustomObject>
#>
function ConvertFrom-JsonToIndexesIndexMultiAssetWeight {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => IndexesIndexMultiAssetWeight' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IndexesIndexMultiAssetWeight
        $AllProperties = ("indexId", "assetId", "weight")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "indexId"))) { #optional property not found
            $IndexId = $null
        } else {
            $IndexId = $JsonParameters.PSobject.Properties["indexId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assetId"))) { #optional property not found
            $AssetId = $null
        } else {
            $AssetId = $JsonParameters.PSobject.Properties["assetId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "weight"))) { #optional property not found
            $Weight = $null
        } else {
            $Weight = $JsonParameters.PSobject.Properties["weight"].value
        }

        $PSO = [PSCustomObject]@{
            "indexId" = ${IndexId}
            "assetId" = ${AssetId}
            "weight" = ${Weight}
        }

        return $PSO
    }

}

