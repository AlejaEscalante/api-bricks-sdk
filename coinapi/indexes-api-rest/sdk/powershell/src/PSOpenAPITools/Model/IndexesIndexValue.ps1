#
# Indexes REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Timestamp
No description available.
.PARAMETER Value
No description available.
.PARAMETER Composition
No description available.
.OUTPUTS

IndexesIndexValue<PSCustomObject>
#>

function Initialize-IndexesIndexValue {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Value},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Composition}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => IndexesIndexValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "timestamp" = ${Timestamp}
            "value" = ${Value}
            "composition" = ${Composition}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IndexesIndexValue<PSCustomObject>

.DESCRIPTION

Convert from JSON to IndexesIndexValue<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IndexesIndexValue<PSCustomObject>
#>
function ConvertFrom-JsonToIndexesIndexValue {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => IndexesIndexValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IndexesIndexValue
        $AllProperties = ("timestamp", "value", "composition")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "composition"))) { #optional property not found
            $Composition = $null
        } else {
            $Composition = $JsonParameters.PSobject.Properties["composition"].value
        }

        $PSO = [PSCustomObject]@{
            "timestamp" = ${Timestamp}
            "value" = ${Value}
            "composition" = ${Composition}
        }

        return $PSO
    }

}

