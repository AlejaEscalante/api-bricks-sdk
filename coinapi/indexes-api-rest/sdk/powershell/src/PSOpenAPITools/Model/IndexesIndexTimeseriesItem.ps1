#
# Indexes REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents a timeseries item with value information.

.PARAMETER TimePeriodStart
Gets or sets the start time of the time period.
.PARAMETER TimePeriodEnd
Gets or sets the end time of the time period.
.PARAMETER TimeOpen
Gets or sets the time when the value opened.
.PARAMETER TimeClose
Gets or sets the time when the value closed.
.PARAMETER ValueOpen
Gets or sets the opening value.
.PARAMETER ValueHigh
Gets or sets the highest value during the time period.
.PARAMETER ValueLow
Gets or sets the lowest value during the time period.
.PARAMETER ValueClose
Gets or sets the closing value.
.PARAMETER ValueCount
Gets or sets the number of values during the time period.
.OUTPUTS

IndexesIndexTimeseriesItem<PSCustomObject>
#>

function Initialize-IndexesIndexTimeseriesItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimePeriodStart},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimePeriodEnd},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeOpen},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeClose},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ValueOpen},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ValueHigh},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ValueLow},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ValueClose},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ValueCount}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => IndexesIndexTimeseriesItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "time_period_start" = ${TimePeriodStart}
            "time_period_end" = ${TimePeriodEnd}
            "time_open" = ${TimeOpen}
            "time_close" = ${TimeClose}
            "value_open" = ${ValueOpen}
            "value_high" = ${ValueHigh}
            "value_low" = ${ValueLow}
            "value_close" = ${ValueClose}
            "value_count" = ${ValueCount}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IndexesIndexTimeseriesItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to IndexesIndexTimeseriesItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IndexesIndexTimeseriesItem<PSCustomObject>
#>
function ConvertFrom-JsonToIndexesIndexTimeseriesItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => IndexesIndexTimeseriesItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IndexesIndexTimeseriesItem
        $AllProperties = ("time_period_start", "time_period_end", "time_open", "time_close", "value_open", "value_high", "value_low", "value_close", "value_count")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_period_start"))) { #optional property not found
            $TimePeriodStart = $null
        } else {
            $TimePeriodStart = $JsonParameters.PSobject.Properties["time_period_start"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_period_end"))) { #optional property not found
            $TimePeriodEnd = $null
        } else {
            $TimePeriodEnd = $JsonParameters.PSobject.Properties["time_period_end"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_open"))) { #optional property not found
            $TimeOpen = $null
        } else {
            $TimeOpen = $JsonParameters.PSobject.Properties["time_open"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_close"))) { #optional property not found
            $TimeClose = $null
        } else {
            $TimeClose = $JsonParameters.PSobject.Properties["time_close"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value_open"))) { #optional property not found
            $ValueOpen = $null
        } else {
            $ValueOpen = $JsonParameters.PSobject.Properties["value_open"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value_high"))) { #optional property not found
            $ValueHigh = $null
        } else {
            $ValueHigh = $JsonParameters.PSobject.Properties["value_high"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value_low"))) { #optional property not found
            $ValueLow = $null
        } else {
            $ValueLow = $JsonParameters.PSobject.Properties["value_low"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value_close"))) { #optional property not found
            $ValueClose = $null
        } else {
            $ValueClose = $JsonParameters.PSobject.Properties["value_close"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value_count"))) { #optional property not found
            $ValueCount = $null
        } else {
            $ValueCount = $JsonParameters.PSobject.Properties["value_count"].value
        }

        $PSO = [PSCustomObject]@{
            "time_period_start" = ${TimePeriodStart}
            "time_period_end" = ${TimePeriodEnd}
            "time_open" = ${TimeOpen}
            "time_close" = ${TimeClose}
            "value_open" = ${ValueOpen}
            "value_high" = ${ValueHigh}
            "value_low" = ${ValueLow}
            "value_close" = ${ValueClose}
            "value_count" = ${ValueCount}
        }

        return $PSO
    }

}

