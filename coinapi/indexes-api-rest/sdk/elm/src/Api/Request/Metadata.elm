{-
   CoinAPI Indexes REST API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: v1
   Contact: support@apibricks.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Metadata exposing
    ( apiMetadataExchangesExchangeIdGet
    , apiMetadataExchangesGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode


{-| List all exchanges by exchange_id
-}
apiMetadataExchangesExchangeIdGet : String -> String -> Api.Request (List Api.Data.MetadataExchange)
apiMetadataExchangesExchangeIdGet exchangeId_path auth_token =
    Api.request
        "GET"
        "/api/metadata/exchanges/{exchange_id}"
        [ ( "exchange_id", identity exchangeId_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.metadataExchangeDecoder)
        |> Api.withBearerToken auth_token

{-| List all exchanges

Get a detailed list of exchanges provided by the system.              :::info Properties of the output are providing aggregated information from across all symbols related to the specific exchange. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source. :::

-}
apiMetadataExchangesGet : Maybe String -> String -> Api.Request (List Api.Data.MetadataExchange)
apiMetadataExchangesGet filterExchangeId_query auth_token =
    Api.request
        "GET"
        "/api/metadata/exchanges"
        []
        [ ( "filter_exchange_id", Maybe.map identity filterExchangeId_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.metadataExchangeDecoder)
        |> Api.withBearerToken auth_token
