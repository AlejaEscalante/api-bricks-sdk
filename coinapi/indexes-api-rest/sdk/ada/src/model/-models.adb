--  Indexes REST API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: v1
--  Contact: support@apibricks.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.13.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

package body .Models is
   pragma Style_Checks ("-bmrIu");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexDefinitionInputData_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("exchangeId", Value.Exchange_Id);
      Into.Write_Entity ("exchangeSymbolId", Value.Exchange_Symbol_Id);
      Into.Write_Entity ("baseAssetId", Value.Base_Asset_Id);
      Into.Write_Entity ("quoteAssetId", Value.Quote_Asset_Id);
      Into.Write_Entity ("beginDate", Value.Begin_Date);
      Into.Write_Entity ("endDate", Value.End_Date);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("statusInfo", Value.Status_Info);
      if not Value.Last_Modification_Time.Is_Null then
         Into.Write_Entity ("lastModificationTime", Value.Last_Modification_Time);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexDefinitionInputData_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexDefinitionInputData_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "exchangeId", Value.Exchange_Id);
      Swagger.Streams.Deserialize (Object, "exchangeSymbolId", Value.Exchange_Symbol_Id);
      Swagger.Streams.Deserialize (Object, "baseAssetId", Value.Base_Asset_Id);
      Swagger.Streams.Deserialize (Object, "quoteAssetId", Value.Quote_Asset_Id);
      Swagger.Streams.Deserialize (Object, "beginDate", Value.Begin_Date);
      Swagger.Streams.Deserialize (Object, "endDate", Value.End_Date);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "statusInfo", Value.Status_Info);
      Swagger.Streams.Deserialize (Object, "lastModificationTime", Value.Last_Modification_Time);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexDefinitionInputData_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexDefinitionInputData_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexDefinitionSnapshotEntry_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("index_id", Value.Index_Id);
      if not Value.Timestamp.Is_Null then
         Into.Write_Entity ("timestamp", Value.Timestamp);
      end if;
      Serialize (Into, "value", Value.Value);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexDefinitionSnapshotEntry_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexDefinitionSnapshotEntry_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "index_id", Value.Index_Id);
      Swagger.Streams.Deserialize (Object, "timestamp", Value.Timestamp);
      Swagger.Streams.Deserialize (Object, "value", Value.Value);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexDefinitionSnapshotEntry_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexDefinitionSnapshotEntry_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexIdentifier_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexIdentifier_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexIdentifier_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexIdentifier_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexIdentifier_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexMultiAssetWeight_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("indexId", Value.Index_Id);
      Into.Write_Entity ("assetId", Value.Asset_Id);
      Serialize (Into, "weight", Value.Weight);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexMultiAssetWeight_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexMultiAssetWeight_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "indexId", Value.Index_Id);
      Swagger.Streams.Deserialize (Object, "assetId", Value.Asset_Id);
      Swagger.Streams.Deserialize (Object, "weight", Value.Weight);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexMultiAssetWeight_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexMultiAssetWeight_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexTimeseriesItem_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Time_Period_Start.Is_Null then
         Into.Write_Entity ("time_period_start", Value.Time_Period_Start);
      end if;
      if not Value.Time_Period_End.Is_Null then
         Into.Write_Entity ("time_period_end", Value.Time_Period_End);
      end if;
      Into.Write_Entity ("time_open", Value.Time_Open);
      Into.Write_Entity ("time_close", Value.Time_Close);
      Serialize (Into, "value_open", Value.Value_Open);
      Serialize (Into, "value_high", Value.Value_High);
      Serialize (Into, "value_low", Value.Value_Low);
      Serialize (Into, "value_close", Value.Value_Close);
      if not Value.Value_Count.Is_Null then
         Into.Write_Entity ("value_count", Value.Value_Count);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexTimeseriesItem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexTimeseriesItem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "time_period_start", Value.Time_Period_Start);
      Swagger.Streams.Deserialize (Object, "time_period_end", Value.Time_Period_End);
      Swagger.Streams.Deserialize (Object, "time_open", Value.Time_Open);
      Swagger.Streams.Deserialize (Object, "time_close", Value.Time_Close);
      Swagger.Streams.Deserialize (Object, "value_open", Value.Value_Open);
      Swagger.Streams.Deserialize (Object, "value_high", Value.Value_High);
      Swagger.Streams.Deserialize (Object, "value_low", Value.Value_Low);
      Swagger.Streams.Deserialize (Object, "value_close", Value.Value_Close);
      Swagger.Streams.Deserialize (Object, "value_count", Value.Value_Count);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexTimeseriesItem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexTimeseriesItem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexValueComponent_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("component_id", Value.Component_Id);
      Serialize (Into, "component_value", Value.Component_Value);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexValueComponent_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexValueComponent_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "component_id", Value.Component_Id);
      Swagger.Streams.Deserialize (Object, "component_value", Value.Component_Value);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexValueComponent_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexValueComponent_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MetadataExchange_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("exchange_id", Value.Exchange_Id);
      Into.Write_Entity ("website", Value.Website);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MetadataExchange_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MetadataExchange_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "exchange_id", Value.Exchange_Id);
      Swagger.Streams.Deserialize (Object, "website", Value.Website);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MetadataExchange_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.MetadataExchange_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MetadataTimeseriesPeriod_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("period_id", Value.Period_Id);
      if not Value.Length_Seconds.Is_Null then
         Into.Write_Entity ("length_seconds", Value.Length_Seconds);
      end if;
      if not Value.Length_Months.Is_Null then
         Into.Write_Entity ("length_months", Value.Length_Months);
      end if;
      Into.Write_Entity ("unit_count", Value.Unit_Count);
      Into.Write_Entity ("unit_name", Value.Unit_Name);
      Into.Write_Entity ("display_name", Value.Display_Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MetadataTimeseriesPeriod_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MetadataTimeseriesPeriod_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "period_id", Value.Period_Id);
      Swagger.Streams.Deserialize (Object, "length_seconds", Value.Length_Seconds);
      Swagger.Streams.Deserialize (Object, "length_months", Value.Length_Months);
      Swagger.Streams.Deserialize (Object, "unit_count", Value.Unit_Count);
      Swagger.Streams.Deserialize (Object, "unit_name", Value.Unit_Name);
      Swagger.Streams.Deserialize (Object, "display_name", Value.Display_Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MetadataTimeseriesPeriod_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.MetadataTimeseriesPeriod_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IndexesIndexValue_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Timestamp.Is_Null then
         Into.Write_Entity ("timestamp", Value.Timestamp);
      end if;
      Serialize (Into, "value", Value.Value);
      Serialize (Into, "composition", Value.Composition);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IndexesIndexValue_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IndexesIndexValue_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "timestamp", Value.Timestamp);
      Swagger.Streams.Deserialize (Object, "value", Value.Value);
      Deserialize (Object, "composition", Value.Composition);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IndexesIndexValue_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.IndexesIndexValue_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;


end .Models;
