/*
 * CoinAPI Indexes REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using APIBricks.CoinAPI.IndexesAPI.REST.V1.Model;
using APIBricks.CoinAPI.IndexesAPI.REST.V1.Client;
using System.Reflection;

namespace APIBricks.CoinAPI.IndexesAPI.REST.V1.Test.Model
{
    /// <summary>
    ///  Class for testing IndexesIndexValue
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IndexesIndexValueTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IndexesIndexValue
        //private IndexesIndexValue instance;

        public IndexesIndexValueTests()
        {
            // TODO uncomment below to create an instance of IndexesIndexValue
            //instance = new IndexesIndexValue();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IndexesIndexValue
        /// </summary>
        [Fact]
        public void IndexesIndexValueInstanceTest()
        {
            // TODO uncomment below to test "IsType" IndexesIndexValue
            //Assert.IsType<IndexesIndexValue>(instance);
        }

        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }

        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

        /// <summary>
        /// Test the property 'Composition'
        /// </summary>
        [Fact]
        public void CompositionTest()
        {
            // TODO unit test for the property 'Composition'
        }
    }
}
