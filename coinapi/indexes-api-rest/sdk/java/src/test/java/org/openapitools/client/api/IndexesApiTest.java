/*
 * Indexes REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IndexesIndexDefinitionInputData;
import org.openapitools.client.model.IndexesIndexDefinitionSnapshotEntry;
import org.openapitools.client.model.IndexesIndexIdentifier;
import org.openapitools.client.model.IndexesIndexMultiAssetWeight;
import org.openapitools.client.model.IndexesIndexTimeseriesItem;
import org.openapitools.client.model.IndexesIndexValue;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IndexesApi
 */
@Disabled
public class IndexesApiTest {

    private final IndexesApi api = new IndexesApi();

    /**
     * Returns all data inputs for a specific index definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexdefInputDataIndexDefinitionIdAllGetTest() throws ApiException {
        String indexDefinitionId = null;
        List<IndexesIndexDefinitionInputData> response = api.v1IndexdefInputDataIndexDefinitionIdAllGet(indexDefinitionId);
        // TODO: test validations
    }

    /**
     * Returns data inputs for certain index definition and time
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexdefInputDataIndexDefinitionIdGetTest() throws ApiException {
        String indexDefinitionId = null;
        OffsetDateTime time = null;
        Boolean enabledOnly = null;
        Boolean pendingOnly = null;
        String filterAssetId = null;
        Boolean withStatusInfo = null;
        List<IndexesIndexDefinitionSnapshotEntry> response = api.v1IndexdefInputDataIndexDefinitionIdGet(indexDefinitionId, time, enabledOnly, pendingOnly, filterAssetId, withStatusInfo);
        // TODO: test validations
    }

    /**
     * Get all multi-asset weights
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexdefMultiassetGetTest() throws ApiException {
        List<IndexesIndexMultiAssetWeight> response = api.v1IndexdefMultiassetGet();
        // TODO: test validations
    }

    /**
     * Get multi-asset weights for specific index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexdefMultiassetIndexIdGetTest() throws ApiException {
        String indexId = null;
        List<IndexesIndexMultiAssetWeight> response = api.v1IndexdefMultiassetIndexIdGet(indexId);
        // TODO: test validations
    }

    /**
     * List indexes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesGetTest() throws ApiException {
        List<IndexesIndexIdentifier> response = api.v1IndexesGet();
        // TODO: test validations
    }

    /**
     * Current Index Values for index definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesIndexDefinitionIdCurrentSnapshotGetTest() throws ApiException {
        String indexDefinitionId = null;
        List<IndexesIndexDefinitionSnapshotEntry> response = api.v1IndexesIndexDefinitionIdCurrentSnapshotGet(indexDefinitionId);
        // TODO: test validations
    }

    /**
     * Historical Index Values for index definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesIndexDefinitionIdHistorySnapshotGetTest() throws ApiException {
        String indexDefinitionId = null;
        OffsetDateTime time = null;
        List<IndexesIndexDefinitionSnapshotEntry> response = api.v1IndexesIndexDefinitionIdHistorySnapshotGet(indexDefinitionId, time);
        // TODO: test validations
    }

    /**
     * Current Index Value
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesIndexIdCurrentGetTest() throws ApiException {
        String indexId = null;
        IndexesIndexValue response = api.v1IndexesIndexIdCurrentGet(indexId);
        // TODO: test validations
    }

    /**
     * Historical Index Value w/Composition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesIndexIdHistoryGetTest() throws ApiException {
        String indexId = null;
        OffsetDateTime timeStart = null;
        OffsetDateTime timeEnd = null;
        Integer limit = null;
        List<IndexesIndexValue> response = api.v1IndexesIndexIdHistoryGet(indexId, timeStart, timeEnd, limit);
        // TODO: test validations
    }

    /**
     * Timeseries Index Value
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1IndexesIndexIdTimeseriesGetTest() throws ApiException {
        String indexId = null;
        String periodId = null;
        String timeStart = null;
        String timeEnd = null;
        Integer limit = null;
        List<IndexesIndexTimeseriesItem> response = api.v1IndexesIndexIdTimeseriesGet(indexId, periodId, timeStart, timeEnd, limit);
        // TODO: test validations
    }

}
