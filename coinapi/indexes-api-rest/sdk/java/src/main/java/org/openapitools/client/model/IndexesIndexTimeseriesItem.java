/*
 * CoinAPI Indexes REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a timeseries item with value information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-11T06:06:56.411366003Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class IndexesIndexTimeseriesItem {
  public static final String SERIALIZED_NAME_TIME_PERIOD_START = "time_period_start";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_START)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodStart;

  public static final String SERIALIZED_NAME_TIME_PERIOD_END = "time_period_end";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD_END)
  @javax.annotation.Nullable
  private OffsetDateTime timePeriodEnd;

  public static final String SERIALIZED_NAME_TIME_OPEN = "time_open";
  @SerializedName(SERIALIZED_NAME_TIME_OPEN)
  @javax.annotation.Nullable
  private OffsetDateTime timeOpen;

  public static final String SERIALIZED_NAME_TIME_CLOSE = "time_close";
  @SerializedName(SERIALIZED_NAME_TIME_CLOSE)
  @javax.annotation.Nullable
  private OffsetDateTime timeClose;

  public static final String SERIALIZED_NAME_VALUE_OPEN = "value_open";
  @SerializedName(SERIALIZED_NAME_VALUE_OPEN)
  @javax.annotation.Nullable
  private Double valueOpen;

  public static final String SERIALIZED_NAME_VALUE_HIGH = "value_high";
  @SerializedName(SERIALIZED_NAME_VALUE_HIGH)
  @javax.annotation.Nullable
  private Double valueHigh;

  public static final String SERIALIZED_NAME_VALUE_LOW = "value_low";
  @SerializedName(SERIALIZED_NAME_VALUE_LOW)
  @javax.annotation.Nullable
  private Double valueLow;

  public static final String SERIALIZED_NAME_VALUE_CLOSE = "value_close";
  @SerializedName(SERIALIZED_NAME_VALUE_CLOSE)
  @javax.annotation.Nullable
  private Double valueClose;

  public static final String SERIALIZED_NAME_VALUE_COUNT = "value_count";
  @SerializedName(SERIALIZED_NAME_VALUE_COUNT)
  @javax.annotation.Nullable
  private Long valueCount;

  public IndexesIndexTimeseriesItem() {
  }

  public IndexesIndexTimeseriesItem timePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
    return this;
  }

  /**
   * Gets or sets the start time of the time period.
   * @return timePeriodStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodStart() {
    return timePeriodStart;
  }

  public void setTimePeriodStart(@javax.annotation.Nullable OffsetDateTime timePeriodStart) {
    this.timePeriodStart = timePeriodStart;
  }


  public IndexesIndexTimeseriesItem timePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
    return this;
  }

  /**
   * Gets or sets the end time of the time period.
   * @return timePeriodEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimePeriodEnd() {
    return timePeriodEnd;
  }

  public void setTimePeriodEnd(@javax.annotation.Nullable OffsetDateTime timePeriodEnd) {
    this.timePeriodEnd = timePeriodEnd;
  }


  public IndexesIndexTimeseriesItem timeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
    return this;
  }

  /**
   * Gets or sets the time when the value opened.
   * @return timeOpen
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeOpen() {
    return timeOpen;
  }

  public void setTimeOpen(@javax.annotation.Nullable OffsetDateTime timeOpen) {
    this.timeOpen = timeOpen;
  }


  public IndexesIndexTimeseriesItem timeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
    return this;
  }

  /**
   * Gets or sets the time when the value closed.
   * @return timeClose
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeClose() {
    return timeClose;
  }

  public void setTimeClose(@javax.annotation.Nullable OffsetDateTime timeClose) {
    this.timeClose = timeClose;
  }


  public IndexesIndexTimeseriesItem valueOpen(@javax.annotation.Nullable Double valueOpen) {
    this.valueOpen = valueOpen;
    return this;
  }

  /**
   * Gets or sets the opening value.
   * @return valueOpen
   */
  @javax.annotation.Nullable
  public Double getValueOpen() {
    return valueOpen;
  }

  public void setValueOpen(@javax.annotation.Nullable Double valueOpen) {
    this.valueOpen = valueOpen;
  }


  public IndexesIndexTimeseriesItem valueHigh(@javax.annotation.Nullable Double valueHigh) {
    this.valueHigh = valueHigh;
    return this;
  }

  /**
   * Gets or sets the highest value during the time period.
   * @return valueHigh
   */
  @javax.annotation.Nullable
  public Double getValueHigh() {
    return valueHigh;
  }

  public void setValueHigh(@javax.annotation.Nullable Double valueHigh) {
    this.valueHigh = valueHigh;
  }


  public IndexesIndexTimeseriesItem valueLow(@javax.annotation.Nullable Double valueLow) {
    this.valueLow = valueLow;
    return this;
  }

  /**
   * Gets or sets the lowest value during the time period.
   * @return valueLow
   */
  @javax.annotation.Nullable
  public Double getValueLow() {
    return valueLow;
  }

  public void setValueLow(@javax.annotation.Nullable Double valueLow) {
    this.valueLow = valueLow;
  }


  public IndexesIndexTimeseriesItem valueClose(@javax.annotation.Nullable Double valueClose) {
    this.valueClose = valueClose;
    return this;
  }

  /**
   * Gets or sets the closing value.
   * @return valueClose
   */
  @javax.annotation.Nullable
  public Double getValueClose() {
    return valueClose;
  }

  public void setValueClose(@javax.annotation.Nullable Double valueClose) {
    this.valueClose = valueClose;
  }


  public IndexesIndexTimeseriesItem valueCount(@javax.annotation.Nullable Long valueCount) {
    this.valueCount = valueCount;
    return this;
  }

  /**
   * Gets or sets the number of values during the time period.
   * @return valueCount
   */
  @javax.annotation.Nullable
  public Long getValueCount() {
    return valueCount;
  }

  public void setValueCount(@javax.annotation.Nullable Long valueCount) {
    this.valueCount = valueCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexesIndexTimeseriesItem indexesIndexTimeseriesItem = (IndexesIndexTimeseriesItem) o;
    return Objects.equals(this.timePeriodStart, indexesIndexTimeseriesItem.timePeriodStart) &&
        Objects.equals(this.timePeriodEnd, indexesIndexTimeseriesItem.timePeriodEnd) &&
        Objects.equals(this.timeOpen, indexesIndexTimeseriesItem.timeOpen) &&
        Objects.equals(this.timeClose, indexesIndexTimeseriesItem.timeClose) &&
        Objects.equals(this.valueOpen, indexesIndexTimeseriesItem.valueOpen) &&
        Objects.equals(this.valueHigh, indexesIndexTimeseriesItem.valueHigh) &&
        Objects.equals(this.valueLow, indexesIndexTimeseriesItem.valueLow) &&
        Objects.equals(this.valueClose, indexesIndexTimeseriesItem.valueClose) &&
        Objects.equals(this.valueCount, indexesIndexTimeseriesItem.valueCount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(timePeriodStart, timePeriodEnd, timeOpen, timeClose, valueOpen, valueHigh, valueLow, valueClose, valueCount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexesIndexTimeseriesItem {\n");
    sb.append("    timePeriodStart: ").append(toIndentedString(timePeriodStart)).append("\n");
    sb.append("    timePeriodEnd: ").append(toIndentedString(timePeriodEnd)).append("\n");
    sb.append("    timeOpen: ").append(toIndentedString(timeOpen)).append("\n");
    sb.append("    timeClose: ").append(toIndentedString(timeClose)).append("\n");
    sb.append("    valueOpen: ").append(toIndentedString(valueOpen)).append("\n");
    sb.append("    valueHigh: ").append(toIndentedString(valueHigh)).append("\n");
    sb.append("    valueLow: ").append(toIndentedString(valueLow)).append("\n");
    sb.append("    valueClose: ").append(toIndentedString(valueClose)).append("\n");
    sb.append("    valueCount: ").append(toIndentedString(valueCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("time_period_start");
    openapiFields.add("time_period_end");
    openapiFields.add("time_open");
    openapiFields.add("time_close");
    openapiFields.add("value_open");
    openapiFields.add("value_high");
    openapiFields.add("value_low");
    openapiFields.add("value_close");
    openapiFields.add("value_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IndexesIndexTimeseriesItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IndexesIndexTimeseriesItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IndexesIndexTimeseriesItem is not found in the empty JSON string", IndexesIndexTimeseriesItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IndexesIndexTimeseriesItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IndexesIndexTimeseriesItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IndexesIndexTimeseriesItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IndexesIndexTimeseriesItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IndexesIndexTimeseriesItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IndexesIndexTimeseriesItem.class));

       return (TypeAdapter<T>) new TypeAdapter<IndexesIndexTimeseriesItem>() {
           @Override
           public void write(JsonWriter out, IndexesIndexTimeseriesItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IndexesIndexTimeseriesItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IndexesIndexTimeseriesItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IndexesIndexTimeseriesItem
   * @throws IOException if the JSON string is invalid with respect to IndexesIndexTimeseriesItem
   */
  public static IndexesIndexTimeseriesItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IndexesIndexTimeseriesItem.class);
  }

  /**
   * Convert an instance of IndexesIndexTimeseriesItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

