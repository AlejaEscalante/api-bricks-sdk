# coding: utf-8

"""
    Indexes REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Contact: support@apibricks.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_bricks_coinapi_indexes_api_rest.models.indexes_index_timeseries_item import IndexesIndexTimeseriesItem

class TestIndexesIndexTimeseriesItem(unittest.TestCase):
    """IndexesIndexTimeseriesItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndexesIndexTimeseriesItem:
        """Test IndexesIndexTimeseriesItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndexesIndexTimeseriesItem`
        """
        model = IndexesIndexTimeseriesItem()
        if include_optional:
            return IndexesIndexTimeseriesItem(
                time_period_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_open = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_close = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                value_open = 1.337,
                value_high = 1.337,
                value_low = 1.337,
                value_close = 1.337,
                value_count = 56
            )
        else:
            return IndexesIndexTimeseriesItem(
        )
        """

    def testIndexesIndexTimeseriesItem(self):
        """Test IndexesIndexTimeseriesItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
