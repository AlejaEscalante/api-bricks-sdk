/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents the last executed transaction.
 **/
@ApiModel(description = "Represents the last executed transaction.")
public class V1LastTrade {
  
  @SerializedName("time_exchange")
  private Date timeExchange = null;
  @SerializedName("time_coinapi")
  private Date timeCoinapi = null;
  @SerializedName("uuid")
  private UUID uuid = null;
  @SerializedName("price")
  private Double price = null;
  @SerializedName("size")
  private Double size = null;
  @SerializedName("taker_side")
  private String takerSide = null;

  /**
   * The exchange time of the last trade.
   **/
  @ApiModelProperty(value = "The exchange time of the last trade.")
  public Date getTimeExchange() {
    return timeExchange;
  }
  public void setTimeExchange(Date timeExchange) {
    this.timeExchange = timeExchange;
  }

  /**
   * The CoinAPI time when the last trade was received.
   **/
  @ApiModelProperty(value = "The CoinAPI time when the last trade was received.")
  public Date getTimeCoinapi() {
    return timeCoinapi;
  }
  public void setTimeCoinapi(Date timeCoinapi) {
    this.timeCoinapi = timeCoinapi;
  }

  /**
   * The UUID of the last trade.
   **/
  @ApiModelProperty(value = "The UUID of the last trade.")
  public UUID getUuid() {
    return uuid;
  }
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  /**
   * The price of the last trade.
   **/
  @ApiModelProperty(value = "The price of the last trade.")
  public Double getPrice() {
    return price;
  }
  public void setPrice(Double price) {
    this.price = price;
  }

  /**
   * The size of the last trade.
   **/
  @ApiModelProperty(value = "The size of the last trade.")
  public Double getSize() {
    return size;
  }
  public void setSize(Double size) {
    this.size = size;
  }

  /**
   * The taker side of the last trade.
   **/
  @ApiModelProperty(value = "The taker side of the last trade.")
  public String getTakerSide() {
    return takerSide;
  }
  public void setTakerSide(String takerSide) {
    this.takerSide = takerSide;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1LastTrade v1LastTrade = (V1LastTrade) o;
    return (this.timeExchange == null ? v1LastTrade.timeExchange == null : this.timeExchange.equals(v1LastTrade.timeExchange)) &&
        (this.timeCoinapi == null ? v1LastTrade.timeCoinapi == null : this.timeCoinapi.equals(v1LastTrade.timeCoinapi)) &&
        (this.uuid == null ? v1LastTrade.uuid == null : this.uuid.equals(v1LastTrade.uuid)) &&
        (this.price == null ? v1LastTrade.price == null : this.price.equals(v1LastTrade.price)) &&
        (this.size == null ? v1LastTrade.size == null : this.size.equals(v1LastTrade.size)) &&
        (this.takerSide == null ? v1LastTrade.takerSide == null : this.takerSide.equals(v1LastTrade.takerSide));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.timeExchange == null ? 0: this.timeExchange.hashCode());
    result = 31 * result + (this.timeCoinapi == null ? 0: this.timeCoinapi.hashCode());
    result = 31 * result + (this.uuid == null ? 0: this.uuid.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.size == null ? 0: this.size.hashCode());
    result = 31 * result + (this.takerSide == null ? 0: this.takerSide.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1LastTrade {\n");
    
    sb.append("  timeExchange: ").append(timeExchange).append("\n");
    sb.append("  timeCoinapi: ").append(timeCoinapi).append("\n");
    sb.append("  uuid: ").append(uuid).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  size: ").append(size).append("\n");
    sb.append("  takerSide: ").append(takerSide).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
