/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a blockchain chain.
 **/
@ApiModel(description = "Represents a blockchain chain.")
public class V1Chain {
  
  @SerializedName("chain_id")
  private String chainId = null;
  @SerializedName("name")
  private String name = null;

  /**
   * Gets or sets the chain identifier.
   **/
  @ApiModelProperty(value = "Gets or sets the chain identifier.")
  public String getChainId() {
    return chainId;
  }
  public void setChainId(String chainId) {
    this.chainId = chainId;
  }

  /**
   * Gets or sets the name of the chain.
   **/
  @ApiModelProperty(value = "Gets or sets the name of the chain.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Chain v1Chain = (V1Chain) o;
    return (this.chainId == null ? v1Chain.chainId == null : this.chainId.equals(v1Chain.chainId)) &&
        (this.name == null ? v1Chain.name == null : this.name.equals(v1Chain.name));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.chainId == null ? 0: this.chainId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Chain {\n");
    
    sb.append("  chainId: ").append(chainId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
