/**
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.V1LastTrade;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a quote trade data model.
 **/
@ApiModel(description = "Represents a quote trade data model.")
public class V1QuoteTrade {
  
  @SerializedName("symbol_id")
  private String symbolId = null;
  @SerializedName("time_exchange")
  private Date timeExchange = null;
  @SerializedName("time_coinapi")
  private Date timeCoinapi = null;
  @SerializedName("ask_price")
  private Double askPrice = null;
  @SerializedName("ask_size")
  private Double askSize = null;
  @SerializedName("bid_price")
  private Double bidPrice = null;
  @SerializedName("bid_size")
  private Double bidSize = null;
  @SerializedName("last_trade")
  private V1LastTrade lastTrade = null;

  /**
   * The symbol identifier.
   **/
  @ApiModelProperty(value = "The symbol identifier.")
  public String getSymbolId() {
    return symbolId;
  }
  public void setSymbolId(String symbolId) {
    this.symbolId = symbolId;
  }

  /**
   * The exchange time of the quote trade.
   **/
  @ApiModelProperty(value = "The exchange time of the quote trade.")
  public Date getTimeExchange() {
    return timeExchange;
  }
  public void setTimeExchange(Date timeExchange) {
    this.timeExchange = timeExchange;
  }

  /**
   * The CoinAPI time when the quote trade was received.
   **/
  @ApiModelProperty(value = "The CoinAPI time when the quote trade was received.")
  public Date getTimeCoinapi() {
    return timeCoinapi;
  }
  public void setTimeCoinapi(Date timeCoinapi) {
    this.timeCoinapi = timeCoinapi;
  }

  /**
   * The best asking price.
   **/
  @ApiModelProperty(value = "The best asking price.")
  public Double getAskPrice() {
    return askPrice;
  }
  public void setAskPrice(Double askPrice) {
    this.askPrice = askPrice;
  }

  /**
   * The volume resting on the best ask. If the value is equal to zero, then the size is unknown.
   **/
  @ApiModelProperty(value = "The volume resting on the best ask. If the value is equal to zero, then the size is unknown.")
  public Double getAskSize() {
    return askSize;
  }
  public void setAskSize(Double askSize) {
    this.askSize = askSize;
  }

  /**
   * The best bidding price.
   **/
  @ApiModelProperty(value = "The best bidding price.")
  public Double getBidPrice() {
    return bidPrice;
  }
  public void setBidPrice(Double bidPrice) {
    this.bidPrice = bidPrice;
  }

  /**
   * The volume resting on the best bid. If the value is equal to zero, then the size is unknown.
   **/
  @ApiModelProperty(value = "The volume resting on the best bid. If the value is equal to zero, then the size is unknown.")
  public Double getBidSize() {
    return bidSize;
  }
  public void setBidSize(Double bidSize) {
    this.bidSize = bidSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public V1LastTrade getLastTrade() {
    return lastTrade;
  }
  public void setLastTrade(V1LastTrade lastTrade) {
    this.lastTrade = lastTrade;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1QuoteTrade v1QuoteTrade = (V1QuoteTrade) o;
    return (this.symbolId == null ? v1QuoteTrade.symbolId == null : this.symbolId.equals(v1QuoteTrade.symbolId)) &&
        (this.timeExchange == null ? v1QuoteTrade.timeExchange == null : this.timeExchange.equals(v1QuoteTrade.timeExchange)) &&
        (this.timeCoinapi == null ? v1QuoteTrade.timeCoinapi == null : this.timeCoinapi.equals(v1QuoteTrade.timeCoinapi)) &&
        (this.askPrice == null ? v1QuoteTrade.askPrice == null : this.askPrice.equals(v1QuoteTrade.askPrice)) &&
        (this.askSize == null ? v1QuoteTrade.askSize == null : this.askSize.equals(v1QuoteTrade.askSize)) &&
        (this.bidPrice == null ? v1QuoteTrade.bidPrice == null : this.bidPrice.equals(v1QuoteTrade.bidPrice)) &&
        (this.bidSize == null ? v1QuoteTrade.bidSize == null : this.bidSize.equals(v1QuoteTrade.bidSize)) &&
        (this.lastTrade == null ? v1QuoteTrade.lastTrade == null : this.lastTrade.equals(v1QuoteTrade.lastTrade));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbolId == null ? 0: this.symbolId.hashCode());
    result = 31 * result + (this.timeExchange == null ? 0: this.timeExchange.hashCode());
    result = 31 * result + (this.timeCoinapi == null ? 0: this.timeCoinapi.hashCode());
    result = 31 * result + (this.askPrice == null ? 0: this.askPrice.hashCode());
    result = 31 * result + (this.askSize == null ? 0: this.askSize.hashCode());
    result = 31 * result + (this.bidPrice == null ? 0: this.bidPrice.hashCode());
    result = 31 * result + (this.bidSize == null ? 0: this.bidSize.hashCode());
    result = 31 * result + (this.lastTrade == null ? 0: this.lastTrade.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1QuoteTrade {\n");
    
    sb.append("  symbolId: ").append(symbolId).append("\n");
    sb.append("  timeExchange: ").append(timeExchange).append("\n");
    sb.append("  timeCoinapi: ").append(timeCoinapi).append("\n");
    sb.append("  askPrice: ").append(askPrice).append("\n");
    sb.append("  askSize: ").append(askSize).append("\n");
    sb.append("  bidPrice: ").append(bidPrice).append("\n");
    sb.append("  bidSize: ").append(bidSize).append("\n");
    sb.append("  lastTrade: ").append(lastTrade).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
