#
# CoinAPI Market Data REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the base model for order book data.

.PARAMETER SymbolId
The symbol identifier.
.PARAMETER TimeExchange
The exchange time of the order book.
.PARAMETER TimeCoinapi
The CoinAPI time when the order book was received.
.PARAMETER Asks
The asks made by market makers.
.PARAMETER Bids
The bids made by market makers.
.OUTPUTS

V1OrderBookBase<PSCustomObject>
#>

function Initialize-V1OrderBookBase {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SymbolId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeExchange},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeCoinapi},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Asks},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Bids}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => V1OrderBookBase' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "symbol_id" = ${SymbolId}
            "time_exchange" = ${TimeExchange}
            "time_coinapi" = ${TimeCoinapi}
            "asks" = ${Asks}
            "bids" = ${Bids}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to V1OrderBookBase<PSCustomObject>

.DESCRIPTION

Convert from JSON to V1OrderBookBase<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

V1OrderBookBase<PSCustomObject>
#>
function ConvertFrom-JsonToV1OrderBookBase {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => V1OrderBookBase' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V1OrderBookBase
        $AllProperties = ("symbol_id", "time_exchange", "time_coinapi", "asks", "bids")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "symbol_id"))) { #optional property not found
            $SymbolId = $null
        } else {
            $SymbolId = $JsonParameters.PSobject.Properties["symbol_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_exchange"))) { #optional property not found
            $TimeExchange = $null
        } else {
            $TimeExchange = $JsonParameters.PSobject.Properties["time_exchange"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_coinapi"))) { #optional property not found
            $TimeCoinapi = $null
        } else {
            $TimeCoinapi = $JsonParameters.PSobject.Properties["time_coinapi"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asks"))) { #optional property not found
            $Asks = $null
        } else {
            $Asks = $JsonParameters.PSobject.Properties["asks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bids"))) { #optional property not found
            $Bids = $null
        } else {
            $Bids = $JsonParameters.PSobject.Properties["bids"].value
        }

        $PSO = [PSCustomObject]@{
            "symbol_id" = ${SymbolId}
            "time_exchange" = ${TimeExchange}
            "time_coinapi" = ${TimeCoinapi}
            "asks" = ${Asks}
            "bids" = ${Bids}
        }

        return $PSO
    }

}

