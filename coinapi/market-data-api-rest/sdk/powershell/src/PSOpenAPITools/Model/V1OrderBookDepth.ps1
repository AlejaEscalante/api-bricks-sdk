#
# REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the depth of an order book.

.PARAMETER SymbolId
The symbol identifier.
.PARAMETER TimeExchange
The exchange time of the order book.
.PARAMETER TimeCoinapi
The CoinAPI time when the order book was received.
.PARAMETER AskLevels
The number of ask levels in the order book.
.PARAMETER BidLevels
The number of bid levels in the order book.
.PARAMETER AskDepth
The depth of the ask side of the order book.
.PARAMETER BidDepth
The depth of the bid side of the order book.
.OUTPUTS

V1OrderBookDepth<PSCustomObject>
#>

function Initialize-V1OrderBookDepth {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SymbolId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeExchange},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${TimeCoinapi},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${AskLevels},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${BidLevels},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${AskDepth},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${BidDepth}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => V1OrderBookDepth' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "symbol_id" = ${SymbolId}
            "time_exchange" = ${TimeExchange}
            "time_coinapi" = ${TimeCoinapi}
            "ask_levels" = ${AskLevels}
            "bid_levels" = ${BidLevels}
            "ask_depth" = ${AskDepth}
            "bid_depth" = ${BidDepth}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to V1OrderBookDepth<PSCustomObject>

.DESCRIPTION

Convert from JSON to V1OrderBookDepth<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

V1OrderBookDepth<PSCustomObject>
#>
function ConvertFrom-JsonToV1OrderBookDepth {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => V1OrderBookDepth' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V1OrderBookDepth
        $AllProperties = ("symbol_id", "time_exchange", "time_coinapi", "ask_levels", "bid_levels", "ask_depth", "bid_depth")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "symbol_id"))) { #optional property not found
            $SymbolId = $null
        } else {
            $SymbolId = $JsonParameters.PSobject.Properties["symbol_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_exchange"))) { #optional property not found
            $TimeExchange = $null
        } else {
            $TimeExchange = $JsonParameters.PSobject.Properties["time_exchange"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "time_coinapi"))) { #optional property not found
            $TimeCoinapi = $null
        } else {
            $TimeCoinapi = $JsonParameters.PSobject.Properties["time_coinapi"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ask_levels"))) { #optional property not found
            $AskLevels = $null
        } else {
            $AskLevels = $JsonParameters.PSobject.Properties["ask_levels"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bid_levels"))) { #optional property not found
            $BidLevels = $null
        } else {
            $BidLevels = $JsonParameters.PSobject.Properties["bid_levels"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ask_depth"))) { #optional property not found
            $AskDepth = $null
        } else {
            $AskDepth = $JsonParameters.PSobject.Properties["ask_depth"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bid_depth"))) { #optional property not found
            $BidDepth = $null
        } else {
            $BidDepth = $JsonParameters.PSobject.Properties["bid_depth"].value
        }

        $PSO = [PSCustomObject]@{
            "symbol_id" = ${SymbolId}
            "time_exchange" = ${TimeExchange}
            "time_coinapi" = ${TimeCoinapi}
            "ask_levels" = ${AskLevels}
            "bid_levels" = ${BidLevels}
            "ask_depth" = ${AskDepth}
            "bid_depth" = ${BidDepth}
        }

        return $PSO
    }

}

