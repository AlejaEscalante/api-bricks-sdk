/*
REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1ExternalAsset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExternalAsset{}

// V1ExternalAsset Represents an external asset with description.
type V1ExternalAsset struct {
	// Gets or sets the asset identifier.
	AssetId NullableString `json:"asset_id,omitempty"`
	// Gets or sets the description of the asset.
	Description NullableString `json:"description,omitempty"`
	// Gets or sets the type/category of the asset.
	AssetType NullableString `json:"asset_type,omitempty"`
}

// NewV1ExternalAsset instantiates a new V1ExternalAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExternalAsset() *V1ExternalAsset {
	this := V1ExternalAsset{}
	return &this
}

// NewV1ExternalAssetWithDefaults instantiates a new V1ExternalAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExternalAssetWithDefaults() *V1ExternalAsset {
	this := V1ExternalAsset{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalAsset) GetAssetId() string {
	if o == nil || IsNil(o.AssetId.Get()) {
		var ret string
		return ret
	}
	return *o.AssetId.Get()
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalAsset) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetId.Get(), o.AssetId.IsSet()
}

// HasAssetId returns a boolean if a field has been set.
func (o *V1ExternalAsset) HasAssetId() bool {
	if o != nil && o.AssetId.IsSet() {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given NullableString and assigns it to the AssetId field.
func (o *V1ExternalAsset) SetAssetId(v string) {
	o.AssetId.Set(&v)
}
// SetAssetIdNil sets the value for AssetId to be an explicit nil
func (o *V1ExternalAsset) SetAssetIdNil() {
	o.AssetId.Set(nil)
}

// UnsetAssetId ensures that no value is present for AssetId, not even an explicit nil
func (o *V1ExternalAsset) UnsetAssetId() {
	o.AssetId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalAsset) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalAsset) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *V1ExternalAsset) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *V1ExternalAsset) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *V1ExternalAsset) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *V1ExternalAsset) UnsetDescription() {
	o.Description.Unset()
}

// GetAssetType returns the AssetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalAsset) GetAssetType() string {
	if o == nil || IsNil(o.AssetType.Get()) {
		var ret string
		return ret
	}
	return *o.AssetType.Get()
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalAsset) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetType.Get(), o.AssetType.IsSet()
}

// HasAssetType returns a boolean if a field has been set.
func (o *V1ExternalAsset) HasAssetType() bool {
	if o != nil && o.AssetType.IsSet() {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given NullableString and assigns it to the AssetType field.
func (o *V1ExternalAsset) SetAssetType(v string) {
	o.AssetType.Set(&v)
}
// SetAssetTypeNil sets the value for AssetType to be an explicit nil
func (o *V1ExternalAsset) SetAssetTypeNil() {
	o.AssetType.Set(nil)
}

// UnsetAssetType ensures that no value is present for AssetType, not even an explicit nil
func (o *V1ExternalAsset) UnsetAssetType() {
	o.AssetType.Unset()
}

func (o V1ExternalAsset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExternalAsset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetId.IsSet() {
		toSerialize["asset_id"] = o.AssetId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AssetType.IsSet() {
		toSerialize["asset_type"] = o.AssetType.Get()
	}
	return toSerialize, nil
}

type NullableV1ExternalAsset struct {
	value *V1ExternalAsset
	isSet bool
}

func (v NullableV1ExternalAsset) Get() *V1ExternalAsset {
	return v.value
}

func (v *NullableV1ExternalAsset) Set(val *V1ExternalAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExternalAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExternalAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExternalAsset(val *V1ExternalAsset) *NullableV1ExternalAsset {
	return &NullableV1ExternalAsset{value: val, isSet: true}
}

func (v NullableV1ExternalAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExternalAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


