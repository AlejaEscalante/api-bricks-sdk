/*
REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1ExternalExchange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExternalExchange{}

// V1ExternalExchange Represents an exchange with external mapping for metrics.
type V1ExternalExchange struct {
	// Gets or sets the internal exchange identifier.
	ExchangeId NullableString `json:"exchange_id,omitempty"`
	// Gets or sets the external protocol name/slug.
	ExternalName NullableString `json:"external_name,omitempty"`
	// Gets or sets the description of the exchange.
	Description NullableString `json:"description,omitempty"`
	SourceId NullableString `json:"source_id,omitempty"`
}

// NewV1ExternalExchange instantiates a new V1ExternalExchange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExternalExchange() *V1ExternalExchange {
	this := V1ExternalExchange{}
	return &this
}

// NewV1ExternalExchangeWithDefaults instantiates a new V1ExternalExchange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExternalExchangeWithDefaults() *V1ExternalExchange {
	this := V1ExternalExchange{}
	return &this
}

// GetExchangeId returns the ExchangeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalExchange) GetExchangeId() string {
	if o == nil || IsNil(o.ExchangeId.Get()) {
		var ret string
		return ret
	}
	return *o.ExchangeId.Get()
}

// GetExchangeIdOk returns a tuple with the ExchangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalExchange) GetExchangeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExchangeId.Get(), o.ExchangeId.IsSet()
}

// HasExchangeId returns a boolean if a field has been set.
func (o *V1ExternalExchange) HasExchangeId() bool {
	if o != nil && o.ExchangeId.IsSet() {
		return true
	}

	return false
}

// SetExchangeId gets a reference to the given NullableString and assigns it to the ExchangeId field.
func (o *V1ExternalExchange) SetExchangeId(v string) {
	o.ExchangeId.Set(&v)
}
// SetExchangeIdNil sets the value for ExchangeId to be an explicit nil
func (o *V1ExternalExchange) SetExchangeIdNil() {
	o.ExchangeId.Set(nil)
}

// UnsetExchangeId ensures that no value is present for ExchangeId, not even an explicit nil
func (o *V1ExternalExchange) UnsetExchangeId() {
	o.ExchangeId.Unset()
}

// GetExternalName returns the ExternalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalExchange) GetExternalName() string {
	if o == nil || IsNil(o.ExternalName.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalName.Get()
}

// GetExternalNameOk returns a tuple with the ExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalExchange) GetExternalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalName.Get(), o.ExternalName.IsSet()
}

// HasExternalName returns a boolean if a field has been set.
func (o *V1ExternalExchange) HasExternalName() bool {
	if o != nil && o.ExternalName.IsSet() {
		return true
	}

	return false
}

// SetExternalName gets a reference to the given NullableString and assigns it to the ExternalName field.
func (o *V1ExternalExchange) SetExternalName(v string) {
	o.ExternalName.Set(&v)
}
// SetExternalNameNil sets the value for ExternalName to be an explicit nil
func (o *V1ExternalExchange) SetExternalNameNil() {
	o.ExternalName.Set(nil)
}

// UnsetExternalName ensures that no value is present for ExternalName, not even an explicit nil
func (o *V1ExternalExchange) UnsetExternalName() {
	o.ExternalName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalExchange) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalExchange) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *V1ExternalExchange) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *V1ExternalExchange) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *V1ExternalExchange) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *V1ExternalExchange) UnsetDescription() {
	o.Description.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1ExternalExchange) GetSourceId() string {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret string
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1ExternalExchange) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *V1ExternalExchange) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableString and assigns it to the SourceId field.
func (o *V1ExternalExchange) SetSourceId(v string) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *V1ExternalExchange) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *V1ExternalExchange) UnsetSourceId() {
	o.SourceId.Unset()
}

func (o V1ExternalExchange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExternalExchange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExchangeId.IsSet() {
		toSerialize["exchange_id"] = o.ExchangeId.Get()
	}
	if o.ExternalName.IsSet() {
		toSerialize["external_name"] = o.ExternalName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["source_id"] = o.SourceId.Get()
	}
	return toSerialize, nil
}

type NullableV1ExternalExchange struct {
	value *V1ExternalExchange
	isSet bool
}

func (v NullableV1ExternalExchange) Get() *V1ExternalExchange {
	return v.value
}

func (v *NullableV1ExternalExchange) Set(val *V1ExternalExchange) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExternalExchange) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExternalExchange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExternalExchange(val *V1ExternalExchange) *NullableV1ExternalExchange {
	return &NullableV1ExternalExchange{value: val, isSet: true}
}

func (v NullableV1ExternalExchange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExternalExchange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


