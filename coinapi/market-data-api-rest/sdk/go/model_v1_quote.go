/*
REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the V1Quote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Quote{}

// V1Quote Represents a quote data model.
type V1Quote struct {
	// The symbol identifier.
	SymbolId NullableString `json:"symbol_id,omitempty"`
	// The exchange time of the quote.
	TimeExchange *time.Time `json:"time_exchange,omitempty"`
	// The CoinAPI time when the quote was received.
	TimeCoinapi *time.Time `json:"time_coinapi,omitempty"`
	// The best asking price.
	AskPrice NullableFloat64 `json:"ask_price,omitempty"`
	// The volume resting on the best ask. If the value is equal to zero, then the size is unknown.
	AskSize NullableFloat64 `json:"ask_size,omitempty"`
	// The best bidding price.
	BidPrice NullableFloat64 `json:"bid_price,omitempty"`
	// The volume resting on the best bid. If the value is equal to zero, then the size is unknown.
	BidSize NullableFloat64 `json:"bid_size,omitempty"`
}

// NewV1Quote instantiates a new V1Quote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Quote() *V1Quote {
	this := V1Quote{}
	return &this
}

// NewV1QuoteWithDefaults instantiates a new V1Quote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1QuoteWithDefaults() *V1Quote {
	this := V1Quote{}
	return &this
}

// GetSymbolId returns the SymbolId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1Quote) GetSymbolId() string {
	if o == nil || IsNil(o.SymbolId.Get()) {
		var ret string
		return ret
	}
	return *o.SymbolId.Get()
}

// GetSymbolIdOk returns a tuple with the SymbolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1Quote) GetSymbolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SymbolId.Get(), o.SymbolId.IsSet()
}

// HasSymbolId returns a boolean if a field has been set.
func (o *V1Quote) HasSymbolId() bool {
	if o != nil && o.SymbolId.IsSet() {
		return true
	}

	return false
}

// SetSymbolId gets a reference to the given NullableString and assigns it to the SymbolId field.
func (o *V1Quote) SetSymbolId(v string) {
	o.SymbolId.Set(&v)
}
// SetSymbolIdNil sets the value for SymbolId to be an explicit nil
func (o *V1Quote) SetSymbolIdNil() {
	o.SymbolId.Set(nil)
}

// UnsetSymbolId ensures that no value is present for SymbolId, not even an explicit nil
func (o *V1Quote) UnsetSymbolId() {
	o.SymbolId.Unset()
}

// GetTimeExchange returns the TimeExchange field value if set, zero value otherwise.
func (o *V1Quote) GetTimeExchange() time.Time {
	if o == nil || IsNil(o.TimeExchange) {
		var ret time.Time
		return ret
	}
	return *o.TimeExchange
}

// GetTimeExchangeOk returns a tuple with the TimeExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Quote) GetTimeExchangeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeExchange) {
		return nil, false
	}
	return o.TimeExchange, true
}

// HasTimeExchange returns a boolean if a field has been set.
func (o *V1Quote) HasTimeExchange() bool {
	if o != nil && !IsNil(o.TimeExchange) {
		return true
	}

	return false
}

// SetTimeExchange gets a reference to the given time.Time and assigns it to the TimeExchange field.
func (o *V1Quote) SetTimeExchange(v time.Time) {
	o.TimeExchange = &v
}

// GetTimeCoinapi returns the TimeCoinapi field value if set, zero value otherwise.
func (o *V1Quote) GetTimeCoinapi() time.Time {
	if o == nil || IsNil(o.TimeCoinapi) {
		var ret time.Time
		return ret
	}
	return *o.TimeCoinapi
}

// GetTimeCoinapiOk returns a tuple with the TimeCoinapi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Quote) GetTimeCoinapiOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeCoinapi) {
		return nil, false
	}
	return o.TimeCoinapi, true
}

// HasTimeCoinapi returns a boolean if a field has been set.
func (o *V1Quote) HasTimeCoinapi() bool {
	if o != nil && !IsNil(o.TimeCoinapi) {
		return true
	}

	return false
}

// SetTimeCoinapi gets a reference to the given time.Time and assigns it to the TimeCoinapi field.
func (o *V1Quote) SetTimeCoinapi(v time.Time) {
	o.TimeCoinapi = &v
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1Quote) GetAskPrice() float64 {
	if o == nil || IsNil(o.AskPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.AskPrice.Get()
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1Quote) GetAskPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AskPrice.Get(), o.AskPrice.IsSet()
}

// HasAskPrice returns a boolean if a field has been set.
func (o *V1Quote) HasAskPrice() bool {
	if o != nil && o.AskPrice.IsSet() {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given NullableFloat64 and assigns it to the AskPrice field.
func (o *V1Quote) SetAskPrice(v float64) {
	o.AskPrice.Set(&v)
}
// SetAskPriceNil sets the value for AskPrice to be an explicit nil
func (o *V1Quote) SetAskPriceNil() {
	o.AskPrice.Set(nil)
}

// UnsetAskPrice ensures that no value is present for AskPrice, not even an explicit nil
func (o *V1Quote) UnsetAskPrice() {
	o.AskPrice.Unset()
}

// GetAskSize returns the AskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1Quote) GetAskSize() float64 {
	if o == nil || IsNil(o.AskSize.Get()) {
		var ret float64
		return ret
	}
	return *o.AskSize.Get()
}

// GetAskSizeOk returns a tuple with the AskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1Quote) GetAskSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AskSize.Get(), o.AskSize.IsSet()
}

// HasAskSize returns a boolean if a field has been set.
func (o *V1Quote) HasAskSize() bool {
	if o != nil && o.AskSize.IsSet() {
		return true
	}

	return false
}

// SetAskSize gets a reference to the given NullableFloat64 and assigns it to the AskSize field.
func (o *V1Quote) SetAskSize(v float64) {
	o.AskSize.Set(&v)
}
// SetAskSizeNil sets the value for AskSize to be an explicit nil
func (o *V1Quote) SetAskSizeNil() {
	o.AskSize.Set(nil)
}

// UnsetAskSize ensures that no value is present for AskSize, not even an explicit nil
func (o *V1Quote) UnsetAskSize() {
	o.AskSize.Unset()
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1Quote) GetBidPrice() float64 {
	if o == nil || IsNil(o.BidPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.BidPrice.Get()
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1Quote) GetBidPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BidPrice.Get(), o.BidPrice.IsSet()
}

// HasBidPrice returns a boolean if a field has been set.
func (o *V1Quote) HasBidPrice() bool {
	if o != nil && o.BidPrice.IsSet() {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given NullableFloat64 and assigns it to the BidPrice field.
func (o *V1Quote) SetBidPrice(v float64) {
	o.BidPrice.Set(&v)
}
// SetBidPriceNil sets the value for BidPrice to be an explicit nil
func (o *V1Quote) SetBidPriceNil() {
	o.BidPrice.Set(nil)
}

// UnsetBidPrice ensures that no value is present for BidPrice, not even an explicit nil
func (o *V1Quote) UnsetBidPrice() {
	o.BidPrice.Unset()
}

// GetBidSize returns the BidSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1Quote) GetBidSize() float64 {
	if o == nil || IsNil(o.BidSize.Get()) {
		var ret float64
		return ret
	}
	return *o.BidSize.Get()
}

// GetBidSizeOk returns a tuple with the BidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1Quote) GetBidSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BidSize.Get(), o.BidSize.IsSet()
}

// HasBidSize returns a boolean if a field has been set.
func (o *V1Quote) HasBidSize() bool {
	if o != nil && o.BidSize.IsSet() {
		return true
	}

	return false
}

// SetBidSize gets a reference to the given NullableFloat64 and assigns it to the BidSize field.
func (o *V1Quote) SetBidSize(v float64) {
	o.BidSize.Set(&v)
}
// SetBidSizeNil sets the value for BidSize to be an explicit nil
func (o *V1Quote) SetBidSizeNil() {
	o.BidSize.Set(nil)
}

// UnsetBidSize ensures that no value is present for BidSize, not even an explicit nil
func (o *V1Quote) UnsetBidSize() {
	o.BidSize.Unset()
}

func (o V1Quote) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Quote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SymbolId.IsSet() {
		toSerialize["symbol_id"] = o.SymbolId.Get()
	}
	if !IsNil(o.TimeExchange) {
		toSerialize["time_exchange"] = o.TimeExchange
	}
	if !IsNil(o.TimeCoinapi) {
		toSerialize["time_coinapi"] = o.TimeCoinapi
	}
	if o.AskPrice.IsSet() {
		toSerialize["ask_price"] = o.AskPrice.Get()
	}
	if o.AskSize.IsSet() {
		toSerialize["ask_size"] = o.AskSize.Get()
	}
	if o.BidPrice.IsSet() {
		toSerialize["bid_price"] = o.BidPrice.Get()
	}
	if o.BidSize.IsSet() {
		toSerialize["bid_size"] = o.BidSize.Get()
	}
	return toSerialize, nil
}

type NullableV1Quote struct {
	value *V1Quote
	isSet bool
}

func (v NullableV1Quote) Get() *V1Quote {
	return v.value
}

func (v *NullableV1Quote) Set(val *V1Quote) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Quote) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Quote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Quote(val *V1Quote) *NullableV1Quote {
	return &NullableV1Quote{value: val, isSet: true}
}

func (v NullableV1Quote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Quote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


