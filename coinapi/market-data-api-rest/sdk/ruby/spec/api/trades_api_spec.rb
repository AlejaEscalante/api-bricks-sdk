=begin
#CoinAPI Market Data REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Contact: support@apibricks.io
Generated by: https://openapi-generator.tech
Generator version: 7.16.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TradesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TradesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TradesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TradesApi' do
    it 'should create an instance of TradesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TradesApi)
    end
  end

  # unit tests for v1_trades_latest_get
  # Latest data
  # Get latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter_symbol_id Comma or semicolon delimited parts of symbol identifier used to filter response. (optional)
  # @option opts [Boolean] :include_id Information that additional exchange trade identifier should be included in the &#x60;id_trade&#x60; parameter of the trade if exchange providing identifiers.
  # @option opts [Integer] :limit Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @return [Array<V1Trade>]
  describe 'v1_trades_latest_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_trades_symbol_id_history_get
  # Historical data
  # Get history transactions from specific symbol, returned in time ascending order.  :::warning The &#39;time_start&#39; and &#39;time_end&#39; parameters must be from the same day as this endpoint provides intraday data only for specific day. Please use the &#39;date&#39; parameter instead for querying data for a specific day without filter. :::
  # @param symbol_id Symbol identifier for requested timeseries (from the Metadata -&gt; Symbols)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :date Date in ISO 8601, returned data is for the whole given day (required if &#39;time_start&#39; is not provided)
  # @option opts [String] :time_start Starting time in ISO 8601
  # @option opts [String] :time_end Timeseries ending time in ISO 8601
  # @option opts [Integer] :limit Amount of items to return (optional, minimum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @option opts [Boolean] :include_id Information that additional exchange trade identifier should be included in the &#x60;id_trade&#x60; parameter of the trade if exchange providing identifiers.
  # @return [Array<V1Trade>]
  describe 'v1_trades_symbol_id_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_trades_symbol_id_latest_get
  # Latest data by symbol_id
  # Get latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.
  # @param symbol_id Symbol identifier for requested timeseries (from the Metadata -&gt; Symbols)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @option opts [Boolean] :include_id Information that additional exchange trade identifier should be included in the &#x60;id_trade&#x60; parameter of the trade if exchange providing identifiers.
  # @return [Array<V1Trade>]
  describe 'v1_trades_symbol_id_latest_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
