=begin
#CoinAPI Market Data REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Contact: support@apibricks.io
Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MetricsV1Api
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MetricsV1Api' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MetricsV1Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MetricsV1Api' do
    it 'should create an instance of MetricsV1Api' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MetricsV1Api)
    end
  end

  # unit tests for v1_metrics_asset_current_get
  # Current metrics for given asset
  # Get current asset metrics.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @option opts [String] :asset_id Asset identifier (from the Metadata -&gt; Assets)
  # @option opts [String] :asset_id_external Exchange asset identifier
  # @option opts [String] :exchange_id Exchange identifier (from the Metadata -&gt; Exchanges)
  # @return [Array<V1GeneralData>]
  describe 'v1_metrics_asset_current_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_asset_history_get
  # Historical metrics for asset
  # Get asset metrics history.
  # @param metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @param exchange_id Exchange identifier (from the Metadata -&gt; Exchanges)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :asset_id Asset identifier (from the Metadata -&gt; Assets)
  # @option opts [String] :asset_id_external Exchange asset identifier
  # @option opts [Time] :time_start Starting time in ISO 8601
  # @option opts [Time] :time_end Ending time in ISO 8601
  # @option opts [String] :time_format If set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)
  # @option opts [String] :period_id Identifier of requested timeseries period (e.g. &#x60;5SEC&#x60; or &#x60;2MTH&#x60;), default value is &#x60;1SEC&#x60;
  # @option opts [Integer] :limit Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @return [Array<V1MetricData>]
  describe 'v1_metrics_asset_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_asset_listing_get
  # Listing of all supported metrics for asset
  # Get data metrics for asset.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @option opts [String] :exchange_id Exchange identifier (from the Metadata -&gt; Exchanges)
  # @option opts [String] :chain_id Chain identifier
  # @option opts [String] :network_id Network identifier
  # @option opts [String] :asset_id Asset identifier (from the Metadata -&gt; Assets)
  # @option opts [String] :asset_id_external The asset external identifier
  # @return [Array<V1ListingItem>]
  describe 'v1_metrics_asset_listing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_exchange_current_get
  # Current metrics for given exchange
  # Get current exchange metrics values.
  # @param exchange_id The exchange identifier (from the Metadata -&gt; Exchanges)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id The metric identifier (from the Metrics -&gt; Listing)
  # @return [Array<V1GeneralData>]
  describe 'v1_metrics_exchange_current_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_exchange_history_get
  # Historical metrics for the exchange
  # Get exchange metrics history.
  # @param metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @param exchange_id Exchange identifier (from the Metadata -&gt; Exchanges)
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :time_start Starting time in ISO 8601
  # @option opts [Time] :time_end Ending time in ISO 8601
  # @option opts [String] :time_format If set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)
  # @option opts [String] :period_id Identifier of requested timeseries period (e.g. &#x60;5SEC&#x60; or &#x60;2MTH&#x60;), default value is &#x60;1SEC&#x60;
  # @option opts [Integer] :limit Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @return [Array<V1MetricData>]
  describe 'v1_metrics_exchange_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_exchange_listing_get
  # Listing of all supported exchange metrics
  # Get data metrics for exchange.
  # @param exchange_id The exchange identifier (from the Metadata -&gt; Exchanges)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id The metric identifier (from the Metrics -&gt; Listing)
  # @return [Array<V1ListingItem>]
  describe 'v1_metrics_exchange_listing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_listing_get
  # Listing of all supported metrics by CoinAPI
  # Get all data metrics.
  # @param [Hash] opts the optional parameters
  # @return [Array<V1Metric>]
  describe 'v1_metrics_listing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_symbol_current_get
  # Current metrics for given symbol
  # Get current symbol metrics.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @option opts [String] :symbol_id Symbol identifier (from the Metadata -&gt; Symbols)
  # @option opts [String] :exchange_id Exchange id (from the Metadata -&gt; Exchanges)
  # @return [Array<V1GeneralData>]
  describe 'v1_metrics_symbol_current_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_symbol_history_get
  # Historical metrics for symbol
  # Get symbol metrics history.
  # @param metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @param symbol_id Symbol identifier (from the Metadata -&gt; Symbols)
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :time_start Starting time in ISO 8601
  # @option opts [Time] :time_end Ending time in ISO 8601
  # @option opts [String] :time_format If set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)
  # @option opts [String] :period_id Identifier of requested timeseries period (e.g. &#x60;5SEC&#x60; or &#x60;2MTH&#x60;), default value is &#x60;1SEC&#x60;
  # @option opts [Integer] :limit Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
  # @return [Array<V1MetricData>]
  describe 'v1_metrics_symbol_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_metrics_symbol_listing_get
  # Listing of all supported metrics for symbol
  # Get data metrics for symbol.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :metric_id Metric identifier (from the Metrics -&gt; Listing)
  # @option opts [String] :exchange_id Exchange identifier (from the Metadata -&gt; Exchanges)
  # @option opts [String] :symbol_id Symbol identifier (from the Metadata -&gt; Symbols)
  # @return [Array<V1ListingItem>]
  describe 'v1_metrics_symbol_listing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
