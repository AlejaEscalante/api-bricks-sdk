note
 description:"[
		REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_QUOTE_TRADE




feature --Access

    symbol_id: detachable STRING_32
      -- The symbol identifier.
    time_exchange: detachable DATE_TIME
      -- The exchange time of the quote trade.
    time_coinapi: detachable DATE_TIME
      -- The CoinAPI time when the quote trade was received.
    ask_price: REAL_64
      -- The best asking price.
    ask_size: REAL_64
      -- The volume resting on the best ask. If the value is equal to zero, then the size is unknown.
    bid_price: REAL_64
      -- The best bidding price.
    bid_size: REAL_64
      -- The volume resting on the best bid. If the value is equal to zero, then the size is unknown.
    last_trade: detachable V1_LAST_TRADE
      

feature -- Change Element

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_time_exchange (a_name: like time_exchange)
        -- Set 'time_exchange' with 'a_name'.
      do
        time_exchange := a_name
      ensure
        time_exchange_set: time_exchange = a_name
      end

    set_time_coinapi (a_name: like time_coinapi)
        -- Set 'time_coinapi' with 'a_name'.
      do
        time_coinapi := a_name
      ensure
        time_coinapi_set: time_coinapi = a_name
      end

    set_ask_price (a_name: like ask_price)
        -- Set 'ask_price' with 'a_name'.
      do
        ask_price := a_name
      ensure
        ask_price_set: ask_price = a_name
      end

    set_ask_size (a_name: like ask_size)
        -- Set 'ask_size' with 'a_name'.
      do
        ask_size := a_name
      ensure
        ask_size_set: ask_size = a_name
      end

    set_bid_price (a_name: like bid_price)
        -- Set 'bid_price' with 'a_name'.
      do
        bid_price := a_name
      ensure
        bid_price_set: bid_price = a_name
      end

    set_bid_size (a_name: like bid_size)
        -- Set 'bid_size' with 'a_name'.
      do
        bid_size := a_name
      ensure
        bid_size_set: bid_size = a_name
      end

    set_last_trade (a_name: like last_trade)
        -- Set 'last_trade' with 'a_name'.
      do
        last_trade := a_name
      ensure
        last_trade_set: last_trade = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_QUOTE_TRADE%N")
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached time_exchange as l_time_exchange then
          Result.append ("%Ntime_exchange:")
          Result.append (l_time_exchange.out)
          Result.append ("%N")
        end
        if attached time_coinapi as l_time_coinapi then
          Result.append ("%Ntime_coinapi:")
          Result.append (l_time_coinapi.out)
          Result.append ("%N")
        end
        if attached ask_price as l_ask_price then
          Result.append ("%Nask_price:")
          Result.append (l_ask_price.out)
          Result.append ("%N")
        end
        if attached ask_size as l_ask_size then
          Result.append ("%Nask_size:")
          Result.append (l_ask_size.out)
          Result.append ("%N")
        end
        if attached bid_price as l_bid_price then
          Result.append ("%Nbid_price:")
          Result.append (l_bid_price.out)
          Result.append ("%N")
        end
        if attached bid_size as l_bid_size then
          Result.append ("%Nbid_size:")
          Result.append (l_bid_size.out)
          Result.append ("%N")
        end
        if attached last_trade as l_last_trade then
          Result.append ("%Nlast_trade:")
          Result.append (l_last_trade.out)
          Result.append ("%N")
        end
      end
end

