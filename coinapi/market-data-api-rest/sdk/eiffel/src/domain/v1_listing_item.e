note
 description:"[
		CoinAPI Market Data REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_LISTING_ITEM




feature --Access

    metric_id: detachable STRING_32
      -- Gets or sets the metric ID.
    symbol_id: detachable STRING_32
      -- Gets or sets the symbol ID.
    symbol_id_external: detachable STRING_32
      -- Gets or sets the symbol ID from the exchange.
    exchange_id: detachable STRING_32
      -- Gets or sets the exchange ID.
    asset_id: detachable STRING_32
      -- Gets or sets the asset ID.
    asset_id_external: detachable STRING_32
      -- Gets or sets the asset ID from the exchange.
    chain_id: detachable STRING_32
      -- Gets or sets the chain id.
    network_id: detachable STRING_32
      -- Gets or sets the network id.

feature -- Change Element

    set_metric_id (a_name: like metric_id)
        -- Set 'metric_id' with 'a_name'.
      do
        metric_id := a_name
      ensure
        metric_id_set: metric_id = a_name
      end

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_symbol_id_external (a_name: like symbol_id_external)
        -- Set 'symbol_id_external' with 'a_name'.
      do
        symbol_id_external := a_name
      ensure
        symbol_id_external_set: symbol_id_external = a_name
      end

    set_exchange_id (a_name: like exchange_id)
        -- Set 'exchange_id' with 'a_name'.
      do
        exchange_id := a_name
      ensure
        exchange_id_set: exchange_id = a_name
      end

    set_asset_id (a_name: like asset_id)
        -- Set 'asset_id' with 'a_name'.
      do
        asset_id := a_name
      ensure
        asset_id_set: asset_id = a_name
      end

    set_asset_id_external (a_name: like asset_id_external)
        -- Set 'asset_id_external' with 'a_name'.
      do
        asset_id_external := a_name
      ensure
        asset_id_external_set: asset_id_external = a_name
      end

    set_chain_id (a_name: like chain_id)
        -- Set 'chain_id' with 'a_name'.
      do
        chain_id := a_name
      ensure
        chain_id_set: chain_id = a_name
      end

    set_network_id (a_name: like network_id)
        -- Set 'network_id' with 'a_name'.
      do
        network_id := a_name
      ensure
        network_id_set: network_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_LISTING_ITEM%N")
        if attached metric_id as l_metric_id then
          Result.append ("%Nmetric_id:")
          Result.append (l_metric_id.out)
          Result.append ("%N")
        end
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached symbol_id_external as l_symbol_id_external then
          Result.append ("%Nsymbol_id_external:")
          Result.append (l_symbol_id_external.out)
          Result.append ("%N")
        end
        if attached exchange_id as l_exchange_id then
          Result.append ("%Nexchange_id:")
          Result.append (l_exchange_id.out)
          Result.append ("%N")
        end
        if attached asset_id as l_asset_id then
          Result.append ("%Nasset_id:")
          Result.append (l_asset_id.out)
          Result.append ("%N")
        end
        if attached asset_id_external as l_asset_id_external then
          Result.append ("%Nasset_id_external:")
          Result.append (l_asset_id_external.out)
          Result.append ("%N")
        end
        if attached chain_id as l_chain_id then
          Result.append ("%Nchain_id:")
          Result.append (l_chain_id.out)
          Result.append ("%N")
        end
        if attached network_id as l_network_id then
          Result.append ("%Nnetwork_id:")
          Result.append (l_network_id.out)
          Result.append ("%N")
        end
      end
end

