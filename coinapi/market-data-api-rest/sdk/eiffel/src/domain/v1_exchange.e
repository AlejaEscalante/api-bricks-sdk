note
 description:"[
		CoinAPI Market Data REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_EXCHANGE




feature --Access

    exchange_id: detachable STRING_32
      -- Gets or sets the exchange ID.
    website: detachable STRING_32
      -- Gets or sets the website URL of the exchange.
    name: detachable STRING_32
      -- Gets or sets the name of the exchange.
    data_start: detachable STRING_32
      
    data_end: detachable STRING_32
      
    data_quote_start: detachable DATE_TIME
      -- Gets or sets the start date of quote data.
    data_quote_end: detachable DATE_TIME
      -- Gets or sets the end date of quote data.
    data_orderbook_start: detachable DATE_TIME
      -- Gets or sets the start date of order book data.
    data_orderbook_end: detachable DATE_TIME
      -- Gets or sets the end date of order book data.
    data_trade_start: detachable DATE_TIME
      -- Gets or sets the start date of trade data.
    data_trade_end: detachable DATE_TIME
      -- Gets or sets the end date of trade data.
    data_trade_count: INTEGER_64
      -- Gets or sets the number of trades.
    data_symbols_count: INTEGER_64
      -- Gets or sets the number of symbols.
    volume_1hrs_usd: REAL_64
      -- Gets or sets the USD volume in the last 1 hour.
    volume_1day_usd: REAL_64
      -- Gets or sets the USD volume in the last 1 day.
    volume_1mth_usd: REAL_64
      -- Gets or sets the USD volume in the last 1 month.
    metric_id: detachable LIST [STRING_32]
      -- Gets or sets the list of metric IDs.
    icons: detachable LIST [V1_ICON]
      -- Gets or sets the list of icons for the exchange.
    rank: REAL_64
      -- Rank of the exchange.
    integration_status: detachable STRING_32
      -- Status of the integration

feature -- Change Element

    set_exchange_id (a_name: like exchange_id)
        -- Set 'exchange_id' with 'a_name'.
      do
        exchange_id := a_name
      ensure
        exchange_id_set: exchange_id = a_name
      end

    set_website (a_name: like website)
        -- Set 'website' with 'a_name'.
      do
        website := a_name
      ensure
        website_set: website = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_data_start (a_name: like data_start)
        -- Set 'data_start' with 'a_name'.
      do
        data_start := a_name
      ensure
        data_start_set: data_start = a_name
      end

    set_data_end (a_name: like data_end)
        -- Set 'data_end' with 'a_name'.
      do
        data_end := a_name
      ensure
        data_end_set: data_end = a_name
      end

    set_data_quote_start (a_name: like data_quote_start)
        -- Set 'data_quote_start' with 'a_name'.
      do
        data_quote_start := a_name
      ensure
        data_quote_start_set: data_quote_start = a_name
      end

    set_data_quote_end (a_name: like data_quote_end)
        -- Set 'data_quote_end' with 'a_name'.
      do
        data_quote_end := a_name
      ensure
        data_quote_end_set: data_quote_end = a_name
      end

    set_data_orderbook_start (a_name: like data_orderbook_start)
        -- Set 'data_orderbook_start' with 'a_name'.
      do
        data_orderbook_start := a_name
      ensure
        data_orderbook_start_set: data_orderbook_start = a_name
      end

    set_data_orderbook_end (a_name: like data_orderbook_end)
        -- Set 'data_orderbook_end' with 'a_name'.
      do
        data_orderbook_end := a_name
      ensure
        data_orderbook_end_set: data_orderbook_end = a_name
      end

    set_data_trade_start (a_name: like data_trade_start)
        -- Set 'data_trade_start' with 'a_name'.
      do
        data_trade_start := a_name
      ensure
        data_trade_start_set: data_trade_start = a_name
      end

    set_data_trade_end (a_name: like data_trade_end)
        -- Set 'data_trade_end' with 'a_name'.
      do
        data_trade_end := a_name
      ensure
        data_trade_end_set: data_trade_end = a_name
      end

    set_data_trade_count (a_name: like data_trade_count)
        -- Set 'data_trade_count' with 'a_name'.
      do
        data_trade_count := a_name
      ensure
        data_trade_count_set: data_trade_count = a_name
      end

    set_data_symbols_count (a_name: like data_symbols_count)
        -- Set 'data_symbols_count' with 'a_name'.
      do
        data_symbols_count := a_name
      ensure
        data_symbols_count_set: data_symbols_count = a_name
      end

    set_volume_1hrs_usd (a_name: like volume_1hrs_usd)
        -- Set 'volume_1hrs_usd' with 'a_name'.
      do
        volume_1hrs_usd := a_name
      ensure
        volume_1hrs_usd_set: volume_1hrs_usd = a_name
      end

    set_volume_1day_usd (a_name: like volume_1day_usd)
        -- Set 'volume_1day_usd' with 'a_name'.
      do
        volume_1day_usd := a_name
      ensure
        volume_1day_usd_set: volume_1day_usd = a_name
      end

    set_volume_1mth_usd (a_name: like volume_1mth_usd)
        -- Set 'volume_1mth_usd' with 'a_name'.
      do
        volume_1mth_usd := a_name
      ensure
        volume_1mth_usd_set: volume_1mth_usd = a_name
      end

    set_metric_id (a_name: like metric_id)
        -- Set 'metric_id' with 'a_name'.
      do
        metric_id := a_name
      ensure
        metric_id_set: metric_id = a_name
      end

    set_icons (a_name: like icons)
        -- Set 'icons' with 'a_name'.
      do
        icons := a_name
      ensure
        icons_set: icons = a_name
      end

    set_rank (a_name: like rank)
        -- Set 'rank' with 'a_name'.
      do
        rank := a_name
      ensure
        rank_set: rank = a_name
      end

    set_integration_status (a_name: like integration_status)
        -- Set 'integration_status' with 'a_name'.
      do
        integration_status := a_name
      ensure
        integration_status_set: integration_status = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_EXCHANGE%N")
        if attached exchange_id as l_exchange_id then
          Result.append ("%Nexchange_id:")
          Result.append (l_exchange_id.out)
          Result.append ("%N")
        end
        if attached website as l_website then
          Result.append ("%Nwebsite:")
          Result.append (l_website.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached data_start as l_data_start then
          Result.append ("%Ndata_start:")
          Result.append (l_data_start.out)
          Result.append ("%N")
        end
        if attached data_end as l_data_end then
          Result.append ("%Ndata_end:")
          Result.append (l_data_end.out)
          Result.append ("%N")
        end
        if attached data_quote_start as l_data_quote_start then
          Result.append ("%Ndata_quote_start:")
          Result.append (l_data_quote_start.out)
          Result.append ("%N")
        end
        if attached data_quote_end as l_data_quote_end then
          Result.append ("%Ndata_quote_end:")
          Result.append (l_data_quote_end.out)
          Result.append ("%N")
        end
        if attached data_orderbook_start as l_data_orderbook_start then
          Result.append ("%Ndata_orderbook_start:")
          Result.append (l_data_orderbook_start.out)
          Result.append ("%N")
        end
        if attached data_orderbook_end as l_data_orderbook_end then
          Result.append ("%Ndata_orderbook_end:")
          Result.append (l_data_orderbook_end.out)
          Result.append ("%N")
        end
        if attached data_trade_start as l_data_trade_start then
          Result.append ("%Ndata_trade_start:")
          Result.append (l_data_trade_start.out)
          Result.append ("%N")
        end
        if attached data_trade_end as l_data_trade_end then
          Result.append ("%Ndata_trade_end:")
          Result.append (l_data_trade_end.out)
          Result.append ("%N")
        end
        if attached data_trade_count as l_data_trade_count then
          Result.append ("%Ndata_trade_count:")
          Result.append (l_data_trade_count.out)
          Result.append ("%N")
        end
        if attached data_symbols_count as l_data_symbols_count then
          Result.append ("%Ndata_symbols_count:")
          Result.append (l_data_symbols_count.out)
          Result.append ("%N")
        end
        if attached volume_1hrs_usd as l_volume_1hrs_usd then
          Result.append ("%Nvolume_1hrs_usd:")
          Result.append (l_volume_1hrs_usd.out)
          Result.append ("%N")
        end
        if attached volume_1day_usd as l_volume_1day_usd then
          Result.append ("%Nvolume_1day_usd:")
          Result.append (l_volume_1day_usd.out)
          Result.append ("%N")
        end
        if attached volume_1mth_usd as l_volume_1mth_usd then
          Result.append ("%Nvolume_1mth_usd:")
          Result.append (l_volume_1mth_usd.out)
          Result.append ("%N")
        end
        if attached metric_id as l_metric_id then
          across l_metric_id as ic loop
            Result.append ("%N metric_id:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached icons as l_icons then
          across l_icons as ic loop
            Result.append ("%N icons:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached rank as l_rank then
          Result.append ("%Nrank:")
          Result.append (l_rank.out)
          Result.append ("%N")
        end
        if attached integration_status as l_integration_status then
          Result.append ("%Nintegration_status:")
          Result.append (l_integration_status.out)
          Result.append ("%N")
        end
      end
end

