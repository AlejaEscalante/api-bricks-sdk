note
 description:"[
		REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_GENERAL_DATA




feature --Access

    entry_time: detachable DATE_TIME
      -- Gets or sets the entry time for the data point.
    recv_time: detachable DATE_TIME
      -- Gets or sets the received time for the data point.
    exchange_id: detachable STRING_32
      -- Gets or sets the identifier for the exchange.
    asset_id: detachable STRING_32
      -- Gets or sets the identifier for the asset.
    symbol_id: detachable STRING_32
      -- Gets or sets the identifier for the symbol.
    metric_id: detachable STRING_32
      -- Gets or sets the identifier for the metric.
    value_decimal: REAL_64
      -- Gets or sets the decimal value for the metric.
    value_text: detachable STRING_32
      -- Gets or sets the textual representation of the value for the metric.
    value_time: detachable DATE_TIME
      -- Gets or sets the timestamp value for the metric.

feature -- Change Element

    set_entry_time (a_name: like entry_time)
        -- Set 'entry_time' with 'a_name'.
      do
        entry_time := a_name
      ensure
        entry_time_set: entry_time = a_name
      end

    set_recv_time (a_name: like recv_time)
        -- Set 'recv_time' with 'a_name'.
      do
        recv_time := a_name
      ensure
        recv_time_set: recv_time = a_name
      end

    set_exchange_id (a_name: like exchange_id)
        -- Set 'exchange_id' with 'a_name'.
      do
        exchange_id := a_name
      ensure
        exchange_id_set: exchange_id = a_name
      end

    set_asset_id (a_name: like asset_id)
        -- Set 'asset_id' with 'a_name'.
      do
        asset_id := a_name
      ensure
        asset_id_set: asset_id = a_name
      end

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_metric_id (a_name: like metric_id)
        -- Set 'metric_id' with 'a_name'.
      do
        metric_id := a_name
      ensure
        metric_id_set: metric_id = a_name
      end

    set_value_decimal (a_name: like value_decimal)
        -- Set 'value_decimal' with 'a_name'.
      do
        value_decimal := a_name
      ensure
        value_decimal_set: value_decimal = a_name
      end

    set_value_text (a_name: like value_text)
        -- Set 'value_text' with 'a_name'.
      do
        value_text := a_name
      ensure
        value_text_set: value_text = a_name
      end

    set_value_time (a_name: like value_time)
        -- Set 'value_time' with 'a_name'.
      do
        value_time := a_name
      ensure
        value_time_set: value_time = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_GENERAL_DATA%N")
        if attached entry_time as l_entry_time then
          Result.append ("%Nentry_time:")
          Result.append (l_entry_time.out)
          Result.append ("%N")
        end
        if attached recv_time as l_recv_time then
          Result.append ("%Nrecv_time:")
          Result.append (l_recv_time.out)
          Result.append ("%N")
        end
        if attached exchange_id as l_exchange_id then
          Result.append ("%Nexchange_id:")
          Result.append (l_exchange_id.out)
          Result.append ("%N")
        end
        if attached asset_id as l_asset_id then
          Result.append ("%Nasset_id:")
          Result.append (l_asset_id.out)
          Result.append ("%N")
        end
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached metric_id as l_metric_id then
          Result.append ("%Nmetric_id:")
          Result.append (l_metric_id.out)
          Result.append ("%N")
        end
        if attached value_decimal as l_value_decimal then
          Result.append ("%Nvalue_decimal:")
          Result.append (l_value_decimal.out)
          Result.append ("%N")
        end
        if attached value_text as l_value_text then
          Result.append ("%Nvalue_text:")
          Result.append (l_value_text.out)
          Result.append ("%N")
        end
        if attached value_time as l_value_time then
          Result.append ("%Nvalue_time:")
          Result.append (l_value_time.out)
          Result.append ("%N")
        end
      end
end

