note
 description:"[
		CoinAPI Market Data REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_METRIC_INFO




feature --Access

    metric_id: detachable STRING_32
      -- Gets or sets the metric identifier.
    description: detachable STRING_32
      -- Gets or sets the description of the metric.
    source_id: detachable STRING_32
      -- Gets or sets the source identifier of the metric.

feature -- Change Element

    set_metric_id (a_name: like metric_id)
        -- Set 'metric_id' with 'a_name'.
      do
        metric_id := a_name
      ensure
        metric_id_set: metric_id = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_source_id (a_name: like source_id)
        -- Set 'source_id' with 'a_name'.
      do
        source_id := a_name
      ensure
        source_id_set: source_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_METRIC_INFO%N")
        if attached metric_id as l_metric_id then
          Result.append ("%Nmetric_id:")
          Result.append (l_metric_id.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached source_id as l_source_id then
          Result.append ("%Nsource_id:")
          Result.append (l_source_id.out)
          Result.append ("%N")
        end
      end
end

