note
 description:"[
		CoinAPI Market Data REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_SYMBOL




feature --Access

    symbol_id: detachable STRING_32
      -- The symbol identifier.
    exchange_id: detachable STRING_32
      -- The exchange identifier.
    symbol_type: detachable STRING_32
      -- The symbol type.
    asset_id_base: detachable STRING_32
      -- The base asset identifier.
    asset_id_quote: detachable STRING_32
      -- The quote asset identifier.
    asset_id_unit: detachable STRING_32
      -- The unit asset identifier.
    future_contract_unit: REAL_64
      -- The contract unit for futures.
    future_contract_unit_asset: detachable STRING_32
      -- The asset used as the unit for futures contract.
    future_delivery_time: detachable DATE_TIME
      -- The future delivery time for futures contract.
    option_type_is_call: BOOLEAN
      -- Indicates whether the option type is a call.
    option_strike_price: REAL_64
      -- The strike price for options.
    option_contract_unit: REAL_64
      -- The contract unit for options.
    option_exercise_style: detachable STRING_32
      -- The exercise style for options.
    option_expiration_time: detachable DATE_TIME
      -- The expiration time for options.
    contract_delivery_time: detachable DATE_TIME
      -- The delivery time for contracts.
    contract_unit: REAL_64
      -- The contract unit for contracts.
    contract_unit_asset: detachable STRING_32
      -- The asset used as the unit for contracts.
    contract_id: detachable STRING_32
      -- The contract identifier.
    contract_display_name: detachable STRING_32
      -- The display name of the contract.
    contract_display_description: detachable STRING_32
      -- The display description of the contract.
    data_start: detachable STRING_32
      
    data_end: detachable STRING_32
      
    data_quote_start: detachable DATE_TIME
      -- The start date of quote data.
    data_quote_end: detachable DATE_TIME
      -- The end date of quote data.
    data_orderbook_start: detachable DATE_TIME
      -- The start date of order book data.
    data_orderbook_end: detachable DATE_TIME
      -- The end date of order book data.
    data_trade_start: detachable DATE_TIME
      -- The start date of trade data.
    data_trade_end: detachable DATE_TIME
      -- The end date of trade data.
    index_id: detachable STRING_32
      -- The index identifier.
    index_display_name: detachable STRING_32
      -- The display name of the index.
    index_display_description: detachable STRING_32
      -- The display description of the index.
    volume_1hrs: REAL_64
      -- The volume in the last 1 hour.
    volume_1hrs_usd: REAL_64
      -- The volume in USD in the last 1 hour.
    volume_1day: REAL_64
      -- The volume in the last 1 day.
    volume_1day_usd: REAL_64
      -- The volume in USD in the last 1 day.
    volume_1mth: REAL_64
      -- The volume in the last 1 month.
    volume_1mth_usd: REAL_64
      -- The volume in USD in the last 1 month.
    price: REAL_64
      -- The price.
    symbol_id_exchange: detachable STRING_32
      -- The symbol identifier in the exchange.
    asset_id_base_exchange: detachable STRING_32
      -- The base asset identifier in the exchange.
    asset_id_quote_exchange: detachable STRING_32
      -- The quote asset identifier in the exchange.
    price_precision: REAL_64
      -- The price precision.
    size_precision: REAL_64
      -- The size precision.
    raw_kvp: detachable STRING_TABLE [STRING_32]
      -- Not normalized raw kvp data.
    volume_to_usd: REAL_64
      -- Volume unit in USD.
    symbol_id_integer: INTEGER_32
      -- The symbol identifier in integer immutable format, used to correlate data across different APIs.

feature -- Change Element

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_exchange_id (a_name: like exchange_id)
        -- Set 'exchange_id' with 'a_name'.
      do
        exchange_id := a_name
      ensure
        exchange_id_set: exchange_id = a_name
      end

    set_symbol_type (a_name: like symbol_type)
        -- Set 'symbol_type' with 'a_name'.
      do
        symbol_type := a_name
      ensure
        symbol_type_set: symbol_type = a_name
      end

    set_asset_id_base (a_name: like asset_id_base)
        -- Set 'asset_id_base' with 'a_name'.
      do
        asset_id_base := a_name
      ensure
        asset_id_base_set: asset_id_base = a_name
      end

    set_asset_id_quote (a_name: like asset_id_quote)
        -- Set 'asset_id_quote' with 'a_name'.
      do
        asset_id_quote := a_name
      ensure
        asset_id_quote_set: asset_id_quote = a_name
      end

    set_asset_id_unit (a_name: like asset_id_unit)
        -- Set 'asset_id_unit' with 'a_name'.
      do
        asset_id_unit := a_name
      ensure
        asset_id_unit_set: asset_id_unit = a_name
      end

    set_future_contract_unit (a_name: like future_contract_unit)
        -- Set 'future_contract_unit' with 'a_name'.
      do
        future_contract_unit := a_name
      ensure
        future_contract_unit_set: future_contract_unit = a_name
      end

    set_future_contract_unit_asset (a_name: like future_contract_unit_asset)
        -- Set 'future_contract_unit_asset' with 'a_name'.
      do
        future_contract_unit_asset := a_name
      ensure
        future_contract_unit_asset_set: future_contract_unit_asset = a_name
      end

    set_future_delivery_time (a_name: like future_delivery_time)
        -- Set 'future_delivery_time' with 'a_name'.
      do
        future_delivery_time := a_name
      ensure
        future_delivery_time_set: future_delivery_time = a_name
      end

    set_option_type_is_call (a_name: like option_type_is_call)
        -- Set 'option_type_is_call' with 'a_name'.
      do
        option_type_is_call := a_name
      ensure
        option_type_is_call_set: option_type_is_call = a_name
      end

    set_option_strike_price (a_name: like option_strike_price)
        -- Set 'option_strike_price' with 'a_name'.
      do
        option_strike_price := a_name
      ensure
        option_strike_price_set: option_strike_price = a_name
      end

    set_option_contract_unit (a_name: like option_contract_unit)
        -- Set 'option_contract_unit' with 'a_name'.
      do
        option_contract_unit := a_name
      ensure
        option_contract_unit_set: option_contract_unit = a_name
      end

    set_option_exercise_style (a_name: like option_exercise_style)
        -- Set 'option_exercise_style' with 'a_name'.
      do
        option_exercise_style := a_name
      ensure
        option_exercise_style_set: option_exercise_style = a_name
      end

    set_option_expiration_time (a_name: like option_expiration_time)
        -- Set 'option_expiration_time' with 'a_name'.
      do
        option_expiration_time := a_name
      ensure
        option_expiration_time_set: option_expiration_time = a_name
      end

    set_contract_delivery_time (a_name: like contract_delivery_time)
        -- Set 'contract_delivery_time' with 'a_name'.
      do
        contract_delivery_time := a_name
      ensure
        contract_delivery_time_set: contract_delivery_time = a_name
      end

    set_contract_unit (a_name: like contract_unit)
        -- Set 'contract_unit' with 'a_name'.
      do
        contract_unit := a_name
      ensure
        contract_unit_set: contract_unit = a_name
      end

    set_contract_unit_asset (a_name: like contract_unit_asset)
        -- Set 'contract_unit_asset' with 'a_name'.
      do
        contract_unit_asset := a_name
      ensure
        contract_unit_asset_set: contract_unit_asset = a_name
      end

    set_contract_id (a_name: like contract_id)
        -- Set 'contract_id' with 'a_name'.
      do
        contract_id := a_name
      ensure
        contract_id_set: contract_id = a_name
      end

    set_contract_display_name (a_name: like contract_display_name)
        -- Set 'contract_display_name' with 'a_name'.
      do
        contract_display_name := a_name
      ensure
        contract_display_name_set: contract_display_name = a_name
      end

    set_contract_display_description (a_name: like contract_display_description)
        -- Set 'contract_display_description' with 'a_name'.
      do
        contract_display_description := a_name
      ensure
        contract_display_description_set: contract_display_description = a_name
      end

    set_data_start (a_name: like data_start)
        -- Set 'data_start' with 'a_name'.
      do
        data_start := a_name
      ensure
        data_start_set: data_start = a_name
      end

    set_data_end (a_name: like data_end)
        -- Set 'data_end' with 'a_name'.
      do
        data_end := a_name
      ensure
        data_end_set: data_end = a_name
      end

    set_data_quote_start (a_name: like data_quote_start)
        -- Set 'data_quote_start' with 'a_name'.
      do
        data_quote_start := a_name
      ensure
        data_quote_start_set: data_quote_start = a_name
      end

    set_data_quote_end (a_name: like data_quote_end)
        -- Set 'data_quote_end' with 'a_name'.
      do
        data_quote_end := a_name
      ensure
        data_quote_end_set: data_quote_end = a_name
      end

    set_data_orderbook_start (a_name: like data_orderbook_start)
        -- Set 'data_orderbook_start' with 'a_name'.
      do
        data_orderbook_start := a_name
      ensure
        data_orderbook_start_set: data_orderbook_start = a_name
      end

    set_data_orderbook_end (a_name: like data_orderbook_end)
        -- Set 'data_orderbook_end' with 'a_name'.
      do
        data_orderbook_end := a_name
      ensure
        data_orderbook_end_set: data_orderbook_end = a_name
      end

    set_data_trade_start (a_name: like data_trade_start)
        -- Set 'data_trade_start' with 'a_name'.
      do
        data_trade_start := a_name
      ensure
        data_trade_start_set: data_trade_start = a_name
      end

    set_data_trade_end (a_name: like data_trade_end)
        -- Set 'data_trade_end' with 'a_name'.
      do
        data_trade_end := a_name
      ensure
        data_trade_end_set: data_trade_end = a_name
      end

    set_index_id (a_name: like index_id)
        -- Set 'index_id' with 'a_name'.
      do
        index_id := a_name
      ensure
        index_id_set: index_id = a_name
      end

    set_index_display_name (a_name: like index_display_name)
        -- Set 'index_display_name' with 'a_name'.
      do
        index_display_name := a_name
      ensure
        index_display_name_set: index_display_name = a_name
      end

    set_index_display_description (a_name: like index_display_description)
        -- Set 'index_display_description' with 'a_name'.
      do
        index_display_description := a_name
      ensure
        index_display_description_set: index_display_description = a_name
      end

    set_volume_1hrs (a_name: like volume_1hrs)
        -- Set 'volume_1hrs' with 'a_name'.
      do
        volume_1hrs := a_name
      ensure
        volume_1hrs_set: volume_1hrs = a_name
      end

    set_volume_1hrs_usd (a_name: like volume_1hrs_usd)
        -- Set 'volume_1hrs_usd' with 'a_name'.
      do
        volume_1hrs_usd := a_name
      ensure
        volume_1hrs_usd_set: volume_1hrs_usd = a_name
      end

    set_volume_1day (a_name: like volume_1day)
        -- Set 'volume_1day' with 'a_name'.
      do
        volume_1day := a_name
      ensure
        volume_1day_set: volume_1day = a_name
      end

    set_volume_1day_usd (a_name: like volume_1day_usd)
        -- Set 'volume_1day_usd' with 'a_name'.
      do
        volume_1day_usd := a_name
      ensure
        volume_1day_usd_set: volume_1day_usd = a_name
      end

    set_volume_1mth (a_name: like volume_1mth)
        -- Set 'volume_1mth' with 'a_name'.
      do
        volume_1mth := a_name
      ensure
        volume_1mth_set: volume_1mth = a_name
      end

    set_volume_1mth_usd (a_name: like volume_1mth_usd)
        -- Set 'volume_1mth_usd' with 'a_name'.
      do
        volume_1mth_usd := a_name
      ensure
        volume_1mth_usd_set: volume_1mth_usd = a_name
      end

    set_price (a_name: like price)
        -- Set 'price' with 'a_name'.
      do
        price := a_name
      ensure
        price_set: price = a_name
      end

    set_symbol_id_exchange (a_name: like symbol_id_exchange)
        -- Set 'symbol_id_exchange' with 'a_name'.
      do
        symbol_id_exchange := a_name
      ensure
        symbol_id_exchange_set: symbol_id_exchange = a_name
      end

    set_asset_id_base_exchange (a_name: like asset_id_base_exchange)
        -- Set 'asset_id_base_exchange' with 'a_name'.
      do
        asset_id_base_exchange := a_name
      ensure
        asset_id_base_exchange_set: asset_id_base_exchange = a_name
      end

    set_asset_id_quote_exchange (a_name: like asset_id_quote_exchange)
        -- Set 'asset_id_quote_exchange' with 'a_name'.
      do
        asset_id_quote_exchange := a_name
      ensure
        asset_id_quote_exchange_set: asset_id_quote_exchange = a_name
      end

    set_price_precision (a_name: like price_precision)
        -- Set 'price_precision' with 'a_name'.
      do
        price_precision := a_name
      ensure
        price_precision_set: price_precision = a_name
      end

    set_size_precision (a_name: like size_precision)
        -- Set 'size_precision' with 'a_name'.
      do
        size_precision := a_name
      ensure
        size_precision_set: size_precision = a_name
      end

    set_raw_kvp (a_name: like raw_kvp)
        -- Set 'raw_kvp' with 'a_name'.
      do
        raw_kvp := a_name
      ensure
        raw_kvp_set: raw_kvp = a_name
      end

    set_volume_to_usd (a_name: like volume_to_usd)
        -- Set 'volume_to_usd' with 'a_name'.
      do
        volume_to_usd := a_name
      ensure
        volume_to_usd_set: volume_to_usd = a_name
      end

    set_symbol_id_integer (a_name: like symbol_id_integer)
        -- Set 'symbol_id_integer' with 'a_name'.
      do
        symbol_id_integer := a_name
      ensure
        symbol_id_integer_set: symbol_id_integer = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_SYMBOL%N")
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached exchange_id as l_exchange_id then
          Result.append ("%Nexchange_id:")
          Result.append (l_exchange_id.out)
          Result.append ("%N")
        end
        if attached symbol_type as l_symbol_type then
          Result.append ("%Nsymbol_type:")
          Result.append (l_symbol_type.out)
          Result.append ("%N")
        end
        if attached asset_id_base as l_asset_id_base then
          Result.append ("%Nasset_id_base:")
          Result.append (l_asset_id_base.out)
          Result.append ("%N")
        end
        if attached asset_id_quote as l_asset_id_quote then
          Result.append ("%Nasset_id_quote:")
          Result.append (l_asset_id_quote.out)
          Result.append ("%N")
        end
        if attached asset_id_unit as l_asset_id_unit then
          Result.append ("%Nasset_id_unit:")
          Result.append (l_asset_id_unit.out)
          Result.append ("%N")
        end
        if attached future_contract_unit as l_future_contract_unit then
          Result.append ("%Nfuture_contract_unit:")
          Result.append (l_future_contract_unit.out)
          Result.append ("%N")
        end
        if attached future_contract_unit_asset as l_future_contract_unit_asset then
          Result.append ("%Nfuture_contract_unit_asset:")
          Result.append (l_future_contract_unit_asset.out)
          Result.append ("%N")
        end
        if attached future_delivery_time as l_future_delivery_time then
          Result.append ("%Nfuture_delivery_time:")
          Result.append (l_future_delivery_time.out)
          Result.append ("%N")
        end
        if attached option_type_is_call as l_option_type_is_call then
          Result.append ("%Noption_type_is_call:")
          Result.append (l_option_type_is_call.out)
          Result.append ("%N")
        end
        if attached option_strike_price as l_option_strike_price then
          Result.append ("%Noption_strike_price:")
          Result.append (l_option_strike_price.out)
          Result.append ("%N")
        end
        if attached option_contract_unit as l_option_contract_unit then
          Result.append ("%Noption_contract_unit:")
          Result.append (l_option_contract_unit.out)
          Result.append ("%N")
        end
        if attached option_exercise_style as l_option_exercise_style then
          Result.append ("%Noption_exercise_style:")
          Result.append (l_option_exercise_style.out)
          Result.append ("%N")
        end
        if attached option_expiration_time as l_option_expiration_time then
          Result.append ("%Noption_expiration_time:")
          Result.append (l_option_expiration_time.out)
          Result.append ("%N")
        end
        if attached contract_delivery_time as l_contract_delivery_time then
          Result.append ("%Ncontract_delivery_time:")
          Result.append (l_contract_delivery_time.out)
          Result.append ("%N")
        end
        if attached contract_unit as l_contract_unit then
          Result.append ("%Ncontract_unit:")
          Result.append (l_contract_unit.out)
          Result.append ("%N")
        end
        if attached contract_unit_asset as l_contract_unit_asset then
          Result.append ("%Ncontract_unit_asset:")
          Result.append (l_contract_unit_asset.out)
          Result.append ("%N")
        end
        if attached contract_id as l_contract_id then
          Result.append ("%Ncontract_id:")
          Result.append (l_contract_id.out)
          Result.append ("%N")
        end
        if attached contract_display_name as l_contract_display_name then
          Result.append ("%Ncontract_display_name:")
          Result.append (l_contract_display_name.out)
          Result.append ("%N")
        end
        if attached contract_display_description as l_contract_display_description then
          Result.append ("%Ncontract_display_description:")
          Result.append (l_contract_display_description.out)
          Result.append ("%N")
        end
        if attached data_start as l_data_start then
          Result.append ("%Ndata_start:")
          Result.append (l_data_start.out)
          Result.append ("%N")
        end
        if attached data_end as l_data_end then
          Result.append ("%Ndata_end:")
          Result.append (l_data_end.out)
          Result.append ("%N")
        end
        if attached data_quote_start as l_data_quote_start then
          Result.append ("%Ndata_quote_start:")
          Result.append (l_data_quote_start.out)
          Result.append ("%N")
        end
        if attached data_quote_end as l_data_quote_end then
          Result.append ("%Ndata_quote_end:")
          Result.append (l_data_quote_end.out)
          Result.append ("%N")
        end
        if attached data_orderbook_start as l_data_orderbook_start then
          Result.append ("%Ndata_orderbook_start:")
          Result.append (l_data_orderbook_start.out)
          Result.append ("%N")
        end
        if attached data_orderbook_end as l_data_orderbook_end then
          Result.append ("%Ndata_orderbook_end:")
          Result.append (l_data_orderbook_end.out)
          Result.append ("%N")
        end
        if attached data_trade_start as l_data_trade_start then
          Result.append ("%Ndata_trade_start:")
          Result.append (l_data_trade_start.out)
          Result.append ("%N")
        end
        if attached data_trade_end as l_data_trade_end then
          Result.append ("%Ndata_trade_end:")
          Result.append (l_data_trade_end.out)
          Result.append ("%N")
        end
        if attached index_id as l_index_id then
          Result.append ("%Nindex_id:")
          Result.append (l_index_id.out)
          Result.append ("%N")
        end
        if attached index_display_name as l_index_display_name then
          Result.append ("%Nindex_display_name:")
          Result.append (l_index_display_name.out)
          Result.append ("%N")
        end
        if attached index_display_description as l_index_display_description then
          Result.append ("%Nindex_display_description:")
          Result.append (l_index_display_description.out)
          Result.append ("%N")
        end
        if attached volume_1hrs as l_volume_1hrs then
          Result.append ("%Nvolume_1hrs:")
          Result.append (l_volume_1hrs.out)
          Result.append ("%N")
        end
        if attached volume_1hrs_usd as l_volume_1hrs_usd then
          Result.append ("%Nvolume_1hrs_usd:")
          Result.append (l_volume_1hrs_usd.out)
          Result.append ("%N")
        end
        if attached volume_1day as l_volume_1day then
          Result.append ("%Nvolume_1day:")
          Result.append (l_volume_1day.out)
          Result.append ("%N")
        end
        if attached volume_1day_usd as l_volume_1day_usd then
          Result.append ("%Nvolume_1day_usd:")
          Result.append (l_volume_1day_usd.out)
          Result.append ("%N")
        end
        if attached volume_1mth as l_volume_1mth then
          Result.append ("%Nvolume_1mth:")
          Result.append (l_volume_1mth.out)
          Result.append ("%N")
        end
        if attached volume_1mth_usd as l_volume_1mth_usd then
          Result.append ("%Nvolume_1mth_usd:")
          Result.append (l_volume_1mth_usd.out)
          Result.append ("%N")
        end
        if attached price as l_price then
          Result.append ("%Nprice:")
          Result.append (l_price.out)
          Result.append ("%N")
        end
        if attached symbol_id_exchange as l_symbol_id_exchange then
          Result.append ("%Nsymbol_id_exchange:")
          Result.append (l_symbol_id_exchange.out)
          Result.append ("%N")
        end
        if attached asset_id_base_exchange as l_asset_id_base_exchange then
          Result.append ("%Nasset_id_base_exchange:")
          Result.append (l_asset_id_base_exchange.out)
          Result.append ("%N")
        end
        if attached asset_id_quote_exchange as l_asset_id_quote_exchange then
          Result.append ("%Nasset_id_quote_exchange:")
          Result.append (l_asset_id_quote_exchange.out)
          Result.append ("%N")
        end
        if attached price_precision as l_price_precision then
          Result.append ("%Nprice_precision:")
          Result.append (l_price_precision.out)
          Result.append ("%N")
        end
        if attached size_precision as l_size_precision then
          Result.append ("%Nsize_precision:")
          Result.append (l_size_precision.out)
          Result.append ("%N")
        end
        if attached raw_kvp as l_raw_kvp then
          Result.append ("%Nraw_kvp:")
          across l_raw_kvp as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached volume_to_usd as l_volume_to_usd then
          Result.append ("%Nvolume_to_usd:")
          Result.append (l_volume_to_usd.out)
          Result.append ("%N")
        end
        if attached symbol_id_integer as l_symbol_id_integer then
          Result.append ("%Nsymbol_id_integer:")
          Result.append (l_symbol_id_integer.out)
          Result.append ("%N")
        end
      end
end

