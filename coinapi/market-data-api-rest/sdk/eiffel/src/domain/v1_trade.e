note
 description:"[
		REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_TRADE




feature --Access

    symbol_id: detachable STRING_32
      -- The symbol identifier.
    time_exchange: detachable DATE_TIME
      -- The time of trade reported by the exchange.
    time_coinapi: detachable DATE_TIME
      -- The time when the trade was received by CoinAPI.
    uuid: detachable UUID
      -- The unique identifier for the trade.
    price: REAL_64
      -- The price of the transaction.
    size: REAL_64
      -- The base asset amount traded in the transaction.
    taker_side: detachable STRING_32
      -- The aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).
    id_trade: detachable STRING_32
      -- The trade identifier.
    id_order_maker: detachable STRING_32
      -- The order maker identifier.
    id_order_taker: detachable STRING_32
      -- The order taker identifier.

feature -- Change Element

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_time_exchange (a_name: like time_exchange)
        -- Set 'time_exchange' with 'a_name'.
      do
        time_exchange := a_name
      ensure
        time_exchange_set: time_exchange = a_name
      end

    set_time_coinapi (a_name: like time_coinapi)
        -- Set 'time_coinapi' with 'a_name'.
      do
        time_coinapi := a_name
      ensure
        time_coinapi_set: time_coinapi = a_name
      end

    set_uuid (a_name: like uuid)
        -- Set 'uuid' with 'a_name'.
      do
        uuid := a_name
      ensure
        uuid_set: uuid = a_name
      end

    set_price (a_name: like price)
        -- Set 'price' with 'a_name'.
      do
        price := a_name
      ensure
        price_set: price = a_name
      end

    set_size (a_name: like size)
        -- Set 'size' with 'a_name'.
      do
        size := a_name
      ensure
        size_set: size = a_name
      end

    set_taker_side (a_name: like taker_side)
        -- Set 'taker_side' with 'a_name'.
      do
        taker_side := a_name
      ensure
        taker_side_set: taker_side = a_name
      end

    set_id_trade (a_name: like id_trade)
        -- Set 'id_trade' with 'a_name'.
      do
        id_trade := a_name
      ensure
        id_trade_set: id_trade = a_name
      end

    set_id_order_maker (a_name: like id_order_maker)
        -- Set 'id_order_maker' with 'a_name'.
      do
        id_order_maker := a_name
      ensure
        id_order_maker_set: id_order_maker = a_name
      end

    set_id_order_taker (a_name: like id_order_taker)
        -- Set 'id_order_taker' with 'a_name'.
      do
        id_order_taker := a_name
      ensure
        id_order_taker_set: id_order_taker = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_TRADE%N")
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached time_exchange as l_time_exchange then
          Result.append ("%Ntime_exchange:")
          Result.append (l_time_exchange.out)
          Result.append ("%N")
        end
        if attached time_coinapi as l_time_coinapi then
          Result.append ("%Ntime_coinapi:")
          Result.append (l_time_coinapi.out)
          Result.append ("%N")
        end
        if attached uuid as l_uuid then
          Result.append ("%Nuuid:")
          Result.append (l_uuid.out)
          Result.append ("%N")
        end
        if attached price as l_price then
          Result.append ("%Nprice:")
          Result.append (l_price.out)
          Result.append ("%N")
        end
        if attached size as l_size then
          Result.append ("%Nsize:")
          Result.append (l_size.out)
          Result.append ("%N")
        end
        if attached taker_side as l_taker_side then
          Result.append ("%Ntaker_side:")
          Result.append (l_taker_side.out)
          Result.append ("%N")
        end
        if attached id_trade as l_id_trade then
          Result.append ("%Nid_trade:")
          Result.append (l_id_trade.out)
          Result.append ("%N")
        end
        if attached id_order_maker as l_id_order_maker then
          Result.append ("%Nid_order_maker:")
          Result.append (l_id_order_maker.out)
          Result.append ("%N")
        end
        if attached id_order_taker as l_id_order_taker then
          Result.append ("%Nid_order_taker:")
          Result.append (l_id_order_taker.out)
          Result.append ("%N")
        end
      end
end

