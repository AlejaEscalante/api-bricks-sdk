note
 description:"[
		CoinAPI Market Data REST API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: v1
 	    Contact: support@apibricks.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class V1_SYMBOL_MAPPING




feature --Access

    symbol_id: detachable STRING_32
      -- The symbol ID.
    symbol_id_exchange: detachable STRING_32
      -- The exchange-specific symbol ID.
    coinapi_datainfo_id: INTEGER_32
      -- The CoinAPI DataInfo ID.
    asset_id_base_exchange: detachable STRING_32
      -- The exchange-specific base asset ID.
    asset_id_quote_exchange: detachable STRING_32
      -- The exchange-specific quote asset ID.
    asset_id_base: detachable STRING_32
      -- The base asset ID.
    asset_id_quote: detachable STRING_32
      -- The quote asset ID.
    price_precision: REAL_64
      -- The price precision.
    size_precision: REAL_64
      -- The size precision.

feature -- Change Element

    set_symbol_id (a_name: like symbol_id)
        -- Set 'symbol_id' with 'a_name'.
      do
        symbol_id := a_name
      ensure
        symbol_id_set: symbol_id = a_name
      end

    set_symbol_id_exchange (a_name: like symbol_id_exchange)
        -- Set 'symbol_id_exchange' with 'a_name'.
      do
        symbol_id_exchange := a_name
      ensure
        symbol_id_exchange_set: symbol_id_exchange = a_name
      end

    set_coinapi_datainfo_id (a_name: like coinapi_datainfo_id)
        -- Set 'coinapi_datainfo_id' with 'a_name'.
      do
        coinapi_datainfo_id := a_name
      ensure
        coinapi_datainfo_id_set: coinapi_datainfo_id = a_name
      end

    set_asset_id_base_exchange (a_name: like asset_id_base_exchange)
        -- Set 'asset_id_base_exchange' with 'a_name'.
      do
        asset_id_base_exchange := a_name
      ensure
        asset_id_base_exchange_set: asset_id_base_exchange = a_name
      end

    set_asset_id_quote_exchange (a_name: like asset_id_quote_exchange)
        -- Set 'asset_id_quote_exchange' with 'a_name'.
      do
        asset_id_quote_exchange := a_name
      ensure
        asset_id_quote_exchange_set: asset_id_quote_exchange = a_name
      end

    set_asset_id_base (a_name: like asset_id_base)
        -- Set 'asset_id_base' with 'a_name'.
      do
        asset_id_base := a_name
      ensure
        asset_id_base_set: asset_id_base = a_name
      end

    set_asset_id_quote (a_name: like asset_id_quote)
        -- Set 'asset_id_quote' with 'a_name'.
      do
        asset_id_quote := a_name
      ensure
        asset_id_quote_set: asset_id_quote = a_name
      end

    set_price_precision (a_name: like price_precision)
        -- Set 'price_precision' with 'a_name'.
      do
        price_precision := a_name
      ensure
        price_precision_set: price_precision = a_name
      end

    set_size_precision (a_name: like size_precision)
        -- Set 'size_precision' with 'a_name'.
      do
        size_precision := a_name
      ensure
        size_precision_set: size_precision = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass V1_SYMBOL_MAPPING%N")
        if attached symbol_id as l_symbol_id then
          Result.append ("%Nsymbol_id:")
          Result.append (l_symbol_id.out)
          Result.append ("%N")
        end
        if attached symbol_id_exchange as l_symbol_id_exchange then
          Result.append ("%Nsymbol_id_exchange:")
          Result.append (l_symbol_id_exchange.out)
          Result.append ("%N")
        end
        if attached coinapi_datainfo_id as l_coinapi_datainfo_id then
          Result.append ("%Ncoinapi_datainfo_id:")
          Result.append (l_coinapi_datainfo_id.out)
          Result.append ("%N")
        end
        if attached asset_id_base_exchange as l_asset_id_base_exchange then
          Result.append ("%Nasset_id_base_exchange:")
          Result.append (l_asset_id_base_exchange.out)
          Result.append ("%N")
        end
        if attached asset_id_quote_exchange as l_asset_id_quote_exchange then
          Result.append ("%Nasset_id_quote_exchange:")
          Result.append (l_asset_id_quote_exchange.out)
          Result.append ("%N")
        end
        if attached asset_id_base as l_asset_id_base then
          Result.append ("%Nasset_id_base:")
          Result.append (l_asset_id_base.out)
          Result.append ("%N")
        end
        if attached asset_id_quote as l_asset_id_quote then
          Result.append ("%Nasset_id_quote:")
          Result.append (l_asset_id_quote.out)
          Result.append ("%N")
        end
        if attached price_precision as l_price_precision then
          Result.append ("%Nprice_precision:")
          Result.append (l_price_precision.out)
          Result.append ("%N")
        end
        if attached size_precision as l_size_precision then
          Result.append ("%Nsize_precision:")
          Result.append (l_size_precision.out)
          Result.append ("%N")
        end
      end
end

