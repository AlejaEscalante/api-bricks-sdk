/**
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V1_ExchangeRates.h
 *
 * Represents exchange rates for a specific base asset.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRates_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRates_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/V1_ExchangeRatesRate.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class V1_ExchangeRatesRate;


/// <summary>
/// Represents exchange rates for a specific base asset.
/// </summary>
class  V1_ExchangeRates
    : public ModelBase
{
public:
    V1_ExchangeRates();
    virtual ~V1_ExchangeRates();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// V1_ExchangeRates members


    /// <summary>
    /// Gets or sets the base asset ID.
    /// </summary>
    utility::string_t getAssetIdBase() const;
    bool assetIdBaseIsSet() const;
    void unsetAsset_id_base();
    void setAssetIdBase(const utility::string_t& value);

    /// <summary>
    /// Gets or sets the list of exchange rates.
    /// </summary>
    std::vector<std::shared_ptr<V1_ExchangeRatesRate>> getRates() const;
    bool ratesIsSet() const;
    void unsetRates();
    void setRates(const std::vector<std::shared_ptr<V1_ExchangeRatesRate>>& value);


protected:
    utility::string_t m_Asset_id_base;
    bool m_Asset_id_baseIsSet;

    std::vector<std::shared_ptr<V1_ExchangeRatesRate>> m_Rates;
    bool m_RatesIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V1_ExchangeRates_H_ */
