/**
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V1_Metric.h
 *
 * Represents a metric.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V1_Metric_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V1_Metric_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Represents a metric.
/// </summary>
class  V1_Metric
    : public ModelBase
{
public:
    V1_Metric();
    virtual ~V1_Metric();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// V1_Metric members


    /// <summary>
    /// Gets or sets the metric ID.
    /// </summary>
    utility::string_t getMetricId() const;
    bool metricIdIsSet() const;
    void unsetMetric_id();
    void setMetricId(const utility::string_t& value);

    /// <summary>
    /// Gets or sets the metric description.
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(const utility::string_t& value);


protected:
    utility::string_t m_Metric_id;
    bool m_Metric_idIsSet;

    utility::string_t m_Description;
    bool m_DescriptionIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V1_Metric_H_ */
