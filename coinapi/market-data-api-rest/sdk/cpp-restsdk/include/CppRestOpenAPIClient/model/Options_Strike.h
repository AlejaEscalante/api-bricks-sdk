/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Options_Strike.h
 *
 * Represents a strike within the option exchange group.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Options_Strike_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Options_Strike_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/V1_QuoteTrade.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class V1_QuoteTrade;


/// <summary>
/// Represents a strike within the option exchange group.
/// </summary>
class  Options_Strike
    : public ModelBase
{
public:
    Options_Strike();
    virtual ~Options_Strike();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Options_Strike members


    /// <summary>
    /// The strike price.
    /// </summary>
    double getStrikePrice() const;
    bool strikePriceIsSet() const;
    void unsetStrike_price();
    void setStrikePrice(double value);

    std::shared_ptr<V1_QuoteTrade> getCall() const;
    bool callIsSet() const;
    void unsetCall();
    void setCall(const std::shared_ptr<V1_QuoteTrade>& value);

    std::shared_ptr<V1_QuoteTrade> getPut() const;
    bool putIsSet() const;
    void unsetPut();
    void setPut(const std::shared_ptr<V1_QuoteTrade>& value);


protected:
    double m_Strike_price;
    bool m_Strike_priceIsSet;

    std::shared_ptr<V1_QuoteTrade> m_Call;
    bool m_CallIsSet;

    std::shared_ptr<V1_QuoteTrade> m_Put;
    bool m_PutIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Options_Strike_H_ */
