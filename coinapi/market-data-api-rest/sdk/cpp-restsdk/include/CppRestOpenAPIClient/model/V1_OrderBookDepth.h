/**
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.15.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V1_OrderBookDepth.h
 *
 * Represents the depth of an order book.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V1_OrderBookDepth_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V1_OrderBookDepth_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Represents the depth of an order book.
/// </summary>
class  V1_OrderBookDepth
    : public ModelBase
{
public:
    V1_OrderBookDepth();
    virtual ~V1_OrderBookDepth();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// V1_OrderBookDepth members


    /// <summary>
    /// The symbol identifier.
    /// </summary>
    utility::string_t getSymbolId() const;
    bool symbolIdIsSet() const;
    void unsetSymbol_id();
    void setSymbolId(const utility::string_t& value);

    /// <summary>
    /// The exchange time of the order book.
    /// </summary>
    utility::datetime getTimeExchange() const;
    bool timeExchangeIsSet() const;
    void unsetTime_exchange();
    void setTimeExchange(const utility::datetime& value);

    /// <summary>
    /// The CoinAPI time when the order book was received.
    /// </summary>
    utility::datetime getTimeCoinapi() const;
    bool timeCoinapiIsSet() const;
    void unsetTime_coinapi();
    void setTimeCoinapi(const utility::datetime& value);

    /// <summary>
    /// The number of ask levels in the order book.
    /// </summary>
    int64_t getAskLevels() const;
    bool askLevelsIsSet() const;
    void unsetAsk_levels();
    void setAskLevels(int64_t value);

    /// <summary>
    /// The number of bid levels in the order book.
    /// </summary>
    int64_t getBidLevels() const;
    bool bidLevelsIsSet() const;
    void unsetBid_levels();
    void setBidLevels(int64_t value);

    /// <summary>
    /// The depth of the ask side of the order book.
    /// </summary>
    double getAskDepth() const;
    bool askDepthIsSet() const;
    void unsetAsk_depth();
    void setAskDepth(double value);

    /// <summary>
    /// The depth of the bid side of the order book.
    /// </summary>
    double getBidDepth() const;
    bool bidDepthIsSet() const;
    void unsetBid_depth();
    void setBidDepth(double value);


protected:
    utility::string_t m_Symbol_id;
    bool m_Symbol_idIsSet;

    utility::datetime m_Time_exchange;
    bool m_Time_exchangeIsSet;

    utility::datetime m_Time_coinapi;
    bool m_Time_coinapiIsSet;

    int64_t m_Ask_levels;
    bool m_Ask_levelsIsSet;

    int64_t m_Bid_levels;
    bool m_Bid_levelsIsSet;

    double m_Ask_depth;
    bool m_Ask_depthIsSet;

    double m_Bid_depth;
    bool m_Bid_depthIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V1_OrderBookDepth_H_ */
