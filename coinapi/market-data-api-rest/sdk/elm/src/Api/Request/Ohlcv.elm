{-
   CoinAPI Market Data REST API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: v1
   Contact: support@apibricks.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Ohlcv exposing
    ( v1OhlcvExchangesExchangeIdHistoryGet
    , v1OhlcvPeriodsGet
    , v1OhlcvSymbolIdHistoryGet
    , v1OhlcvSymbolIdLatestGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode


{-| Historical data by exchange

Get OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange eg `BITSTAMP`              :::info The OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV real-time data stream to get data without delay. The difference between `time_end` and `time_start` cannot be higher than 1 day. The `period_id` cannot be higher than `1DAY`. :::

-}
v1OhlcvExchangesExchangeIdHistoryGet : String -> String -> String -> String -> String -> Api.Request (List Api.Data.ModelsExchangeTimeseriesItem)
v1OhlcvExchangesExchangeIdHistoryGet exchangeId_path periodId_query timeStart_query timeEnd_query auth_token =
    Api.request
        "GET"
        "/v1/ohlcv/exchanges/{exchange_id}/history"
        [ ( "exchange_id", identity exchangeId_path ) ]
        [ ( "period_id", Just <| identity periodId_query ), ( "time_start", Just <| identity timeStart_query ), ( "time_end", Just <| identity timeEnd_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.modelsExchangeTimeseriesItemDecoder)
        |> Api.withBearerToken auth_token

{-| List all periods

Get full list of supported time periods available for requesting OHLCV timeseries data.              ### Available periods              Time unit | Period identifiers --------- | ----------- Second | 1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC Minute | 1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN Hour | 1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRS Day | 1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAY Month | 1MTH, 2MTH, 3MTH, 4MTH, 6MTH Year | 1YRS, 2YRS, 3YRS, 4YRS, 5YRS              :::tip You can assume that we will not remove any periods from this response, however, we may add new ones. :::

-}
v1OhlcvPeriodsGet : String -> Api.Request (List Api.Data.V1TimeseriesPeriod)
v1OhlcvPeriodsGet auth_token =
    Api.request
        "GET"
        "/v1/ohlcv/periods"
        []
        []
        []
        Nothing
        (Json.Decode.list Api.Data.v1TimeseriesPeriodDecoder)
        |> Api.withBearerToken auth_token

{-| Historical data

Get OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data              :::info The OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV real-time data stream to get data without delay. :::

-}
v1OhlcvSymbolIdHistoryGet : String -> String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Bool -> String -> Api.Request (List Api.Data.V1TimeseriesItem)
v1OhlcvSymbolIdHistoryGet symbolId_path periodId_query timeStart_query timeEnd_query limit_query includeEmptyItems_query auth_token =
    Api.request
        "GET"
        "/v1/ohlcv/{symbol_id}/history"
        [ ( "symbol_id", identity symbolId_path ) ]
        [ ( "period_id", Just <| identity periodId_query ), ( "time_start", Maybe.map identity timeStart_query ), ( "time_end", Maybe.map identity timeEnd_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "include_empty_items", Maybe.map (\val -> if val then "true" else "false") includeEmptyItems_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.v1TimeseriesItemDecoder)
        |> Api.withBearerToken auth_token

{-| Latest data

Get OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data              :::info OHLCV Latest endpoint is just the shortcut to the OHLCV Historical endpoint with substituted `time_start` and `time_end` parameters.  The OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV real-time data stream to get data without delay. :::

-}
v1OhlcvSymbolIdLatestGet : String -> String -> Maybe Int -> Maybe Bool -> String -> Api.Request (List Api.Data.V1TimeseriesItem)
v1OhlcvSymbolIdLatestGet symbolId_path periodId_query limit_query includeEmptyItems_query auth_token =
    Api.request
        "GET"
        "/v1/ohlcv/{symbol_id}/latest"
        [ ( "symbol_id", identity symbolId_path ) ]
        [ ( "period_id", Just <| identity periodId_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "include_empty_items", Maybe.map (\val -> if val then "true" else "false") includeEmptyItems_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.v1TimeseriesItemDecoder)
        |> Api.withBearerToken auth_token
