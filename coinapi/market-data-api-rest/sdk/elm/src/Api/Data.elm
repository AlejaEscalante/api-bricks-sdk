{-
   CoinAPI Market Data REST API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: v1
   Contact: support@apibricks.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( ModelsExchangeTimeseriesItem
    , OptionsOptionExchangeGroup
    , OptionsStrike
    , V1Asset
    , V1Chain
    , V1ChainNetworkAddress
    , V1Exchange
    , V1ExchangeRate
    , V1ExchangeRates
    , V1ExchangeRatesRate
    , V1ExchangeRatesTimeseriesItem
    , V1GeneralData
    , V1Icon
    , V1LastTrade
    , V1ListingItem
    , V1Metric
    , V1MetricData
    , V1MetricInfo
    , V1OrderBook
    , V1OrderBookBase
    , V1OrderBookDepth
    , V1Quote
    , V1QuoteTrade
    , V1Symbol
    , V1SymbolMapping
    , V1TimeseriesItem
    , V1TimeseriesPeriod
    , V1Trade
    , encodeModelsExchangeTimeseriesItem
    , encodeOptionsOptionExchangeGroup
    , encodeOptionsStrike
    , encodeV1Asset
    , encodeV1Chain
    , encodeV1ChainNetworkAddress
    , encodeV1Exchange
    , encodeV1ExchangeRate
    , encodeV1ExchangeRates
    , encodeV1ExchangeRatesRate
    , encodeV1ExchangeRatesTimeseriesItem
    , encodeV1GeneralData
    , encodeV1Icon
    , encodeV1LastTrade
    , encodeV1ListingItem
    , encodeV1Metric
    , encodeV1MetricData
    , encodeV1MetricInfo
    , encodeV1OrderBook
    , encodeV1OrderBookBase
    , encodeV1OrderBookDepth
    , encodeV1Quote
    , encodeV1QuoteTrade
    , encodeV1Symbol
    , encodeV1SymbolMapping
    , encodeV1TimeseriesItem
    , encodeV1TimeseriesPeriod
    , encodeV1Trade
    , modelsExchangeTimeseriesItemDecoder
    , optionsOptionExchangeGroupDecoder
    , optionsStrikeDecoder
    , v1AssetDecoder
    , v1ChainDecoder
    , v1ChainNetworkAddressDecoder
    , v1ExchangeDecoder
    , v1ExchangeRateDecoder
    , v1ExchangeRatesDecoder
    , v1ExchangeRatesRateDecoder
    , v1ExchangeRatesTimeseriesItemDecoder
    , v1GeneralDataDecoder
    , v1IconDecoder
    , v1LastTradeDecoder
    , v1ListingItemDecoder
    , v1MetricDecoder
    , v1MetricDataDecoder
    , v1MetricInfoDecoder
    , v1OrderBookDecoder
    , v1OrderBookBaseDecoder
    , v1OrderBookDepthDecoder
    , v1QuoteDecoder
    , v1QuoteTradeDecoder
    , v1SymbolDecoder
    , v1SymbolMappingDecoder
    , v1TimeseriesItemDecoder
    , v1TimeseriesPeriodDecoder
    , v1TradeDecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode
import Uuid exposing (Uuid)


-- MODEL


{-| Represents a timeseries item with price and volume information.
-}
type alias ModelsExchangeTimeseriesItem =
    { timePeriodStart : Maybe Posix
    , timePeriodEnd : Maybe Posix
    , timeOpen : Maybe Posix
    , timeClose : Maybe Posix
    , priceOpen : Maybe Float
    , priceHigh : Maybe Float
    , priceLow : Maybe Float
    , priceClose : Maybe Float
    , volumeTraded : Maybe Float
    , tradesCount : Maybe Int
    , symbolIdExchange : Maybe String
    , symbolIdCoinapi : Maybe String
    }


{-| Represents an option exchange group data model.
-}
type alias OptionsOptionExchangeGroup =
    { assetIdBase : Maybe String
    , assetIdQuote : Maybe String
    , underlyingPrice : Maybe Float
    , timeExpiration : Maybe Posix
    , strikes : Maybe ( List OptionsStrike )
    }


{-| Represents a strike within the option exchange group.
-}
type alias OptionsStrike =
    { strikePrice : Maybe Float
    , call : Maybe V1QuoteTrade
    , put : Maybe V1QuoteTrade
    }


{-| Represents an asset.
-}
type alias V1Asset =
    { assetId : Maybe String
    , name : Maybe String
    , typeIsCrypto : Maybe Int
    , dataQuoteStart : Maybe Posix
    , dataQuoteEnd : Maybe Posix
    , dataOrderbookStart : Maybe Posix
    , dataOrderbookEnd : Maybe Posix
    , dataTradeStart : Maybe Posix
    , dataTradeEnd : Maybe Posix
    , dataSymbolsCount : Maybe Int
    , volume1hrsUsd : Maybe Float
    , volume1dayUsd : Maybe Float
    , volume1mthUsd : Maybe Float
    , priceUsd : Maybe Float
    , idIcon : Maybe Uuid
    , supplyCurrent : Maybe Float
    , supplyTotal : Maybe Float
    , supplyMax : Maybe Float
    , chainAddresses : Maybe ( List V1ChainNetworkAddress )
    , dataStart : Maybe String
    , dataEnd : Maybe String
    }


{-| Represents a blockchain chain.
-}
type alias V1Chain =
    { chainId : Maybe String
    , name : Maybe String
    }


{-| Contains information about assets' chain network addresses
-}
type alias V1ChainNetworkAddress =
    { chainId : Maybe String
    , networkId : Maybe String
    , address : Maybe String
    }


{-| Represents an exchange.
-}
type alias V1Exchange =
    { exchangeId : Maybe String
    , website : Maybe String
    , name : Maybe String
    , dataStart : Maybe String
    , dataEnd : Maybe String
    , dataQuoteStart : Maybe Posix
    , dataQuoteEnd : Maybe Posix
    , dataOrderbookStart : Maybe Posix
    , dataOrderbookEnd : Maybe Posix
    , dataTradeStart : Maybe Posix
    , dataTradeEnd : Maybe Posix
    , dataTradeCount : Maybe Int
    , dataSymbolsCount : Maybe Int
    , volume1hrsUsd : Maybe Float
    , volume1dayUsd : Maybe Float
    , volume1mthUsd : Maybe Float
    , metricId : Maybe ( List String )
    , icons : Maybe ( List V1Icon )
    , rank : Maybe Float
    , integrationStatus : Maybe String
    }


{-| Represents an exchange rate.
-}
type alias V1ExchangeRate =
    { time : Maybe Posix
    , assetIdBase : Maybe String
    , assetIdQuote : Maybe String
    , rate : Maybe Float
    }


{-| Represents exchange rates for a specific base asset.
-}
type alias V1ExchangeRates =
    { assetIdBase : Maybe String
    , rates : Maybe ( List V1ExchangeRatesRate )
    }


{-| Represents an exchange rate within a collection of exchange rates.
-}
type alias V1ExchangeRatesRate =
    { time : Maybe Posix
    , assetIdQuote : Maybe String
    , rate : Maybe Float
    }


{-| Represents an item in the exchange rate timeseries.
-}
type alias V1ExchangeRatesTimeseriesItem =
    { timePeriodStart : Maybe Posix
    , timePeriodEnd : Maybe Posix
    , timeOpen : Maybe Posix
    , timeClose : Maybe Posix
    , rateOpen : Maybe Float
    , rateHigh : Maybe Float
    , rateLow : Maybe Float
    , rateClose : Maybe Float
    }


{-| Class representation of general metric data. This class is an XML type with name 'general_data' and inherits from the BaseCsvModel class.
-}
type alias V1GeneralData =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , exchangeId : Maybe String
    , assetId : Maybe String
    , symbolId : Maybe String
    , metricId : Maybe String
    , valueDecimal : Maybe Float
    , valueText : Maybe String
    , valueTime : Maybe Posix
    }


{-| Represents an icon.
-}
type alias V1Icon =
    { exchangeId : Maybe String
    , assetId : Maybe String
    , url : Maybe String
    }


{-| Represents the last executed transaction.
-}
type alias V1LastTrade =
    { timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , uuid : Maybe Uuid
    , price : Maybe Float
    , size : Maybe Float
    , takerSide : Maybe String
    }


{-| Represents a listing item.
-}
type alias V1ListingItem =
    { metricId : Maybe String
    , symbolId : Maybe String
    , symbolIdExternal : Maybe String
    , exchangeId : Maybe String
    , assetId : Maybe String
    , assetIdExternal : Maybe String
    , chainId : Maybe String
    , networkId : Maybe String
    }


{-| Represents a metric.
-}
type alias V1Metric =
    { metricId : Maybe String
    , description : Maybe String
    }


{-| Represents a data model for metric data.
-}
type alias V1MetricData =
    { symbolId : Maybe String
    , time : Maybe Posix
    , value : Maybe Float
    }


{-| Represents a metric information.
-}
type alias V1MetricInfo =
    { metricId : Maybe String
    , description : Maybe String
    , sourceId : Maybe String
    }


{-| Represents an order book with additional information and functionality.
-}
type alias V1OrderBook =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , asks : Maybe AnyType
    , bids : Maybe AnyType
    }


{-| Represents the base model for order book data.
-}
type alias V1OrderBookBase =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , asks : Maybe AnyType
    , bids : Maybe AnyType
    }


{-| Represents the depth of an order book.
-}
type alias V1OrderBookDepth =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , askLevels : Maybe Int
    , bidLevels : Maybe Int
    , askDepth : Maybe Float
    , bidDepth : Maybe Float
    }


{-| Represents a quote data model.
-}
type alias V1Quote =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , askPrice : Maybe Float
    , askSize : Maybe Float
    , bidPrice : Maybe Float
    , bidSize : Maybe Float
    }


{-| Represents a quote trade data model.
-}
type alias V1QuoteTrade =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , askPrice : Maybe Float
    , askSize : Maybe Float
    , bidPrice : Maybe Float
    , bidSize : Maybe Float
    , lastTrade : Maybe V1LastTrade
    }


{-| Represents a symbol data model.
-}
type alias V1Symbol =
    { symbolId : Maybe String
    , exchangeId : Maybe String
    , symbolType : Maybe String
    , assetIdBase : Maybe String
    , assetIdQuote : Maybe String
    , assetIdUnit : Maybe String
    , futureContractUnit : Maybe Float
    , futureContractUnitAsset : Maybe String
    , futureDeliveryTime : Maybe Posix
    , optionTypeIsCall : Maybe Bool
    , optionStrikePrice : Maybe Float
    , optionContractUnit : Maybe Float
    , optionExerciseStyle : Maybe String
    , optionExpirationTime : Maybe Posix
    , contractDeliveryTime : Maybe Posix
    , contractUnit : Maybe Float
    , contractUnitAsset : Maybe String
    , contractId : Maybe String
    , contractDisplayName : Maybe String
    , contractDisplayDescription : Maybe String
    , dataStart : Maybe String
    , dataEnd : Maybe String
    , dataQuoteStart : Maybe Posix
    , dataQuoteEnd : Maybe Posix
    , dataOrderbookStart : Maybe Posix
    , dataOrderbookEnd : Maybe Posix
    , dataTradeStart : Maybe Posix
    , dataTradeEnd : Maybe Posix
    , indexId : Maybe String
    , indexDisplayName : Maybe String
    , indexDisplayDescription : Maybe String
    , volume1hrs : Maybe Float
    , volume1hrsUsd : Maybe Float
    , volume1day : Maybe Float
    , volume1dayUsd : Maybe Float
    , volume1mth : Maybe Float
    , volume1mthUsd : Maybe Float
    , price : Maybe Float
    , symbolIdExchange : Maybe String
    , assetIdBaseExchange : Maybe String
    , assetIdQuoteExchange : Maybe String
    , pricePrecision : Maybe Float
    , sizePrecision : Maybe Float
    , rawKvp : Maybe ( Dict.Dict String String )
    , volumeToUsd : Maybe Float
    }


{-| Represents symbol mapping information for exchange symbols.
-}
type alias V1SymbolMapping =
    { symbolId : Maybe String
    , symbolIdExchange : Maybe String
    , coinapiDatainfoId : Maybe Int
    , assetIdBaseExchange : Maybe String
    , assetIdQuoteExchange : Maybe String
    , assetIdBase : Maybe String
    , assetIdQuote : Maybe String
    , pricePrecision : Maybe Float
    , sizePrecision : Maybe Float
    }


{-| Represents a timeseries item with price and volume information.
-}
type alias V1TimeseriesItem =
    { timePeriodStart : Maybe Posix
    , timePeriodEnd : Maybe Posix
    , timeOpen : Maybe Posix
    , timeClose : Maybe Posix
    , priceOpen : Maybe Float
    , priceHigh : Maybe Float
    , priceLow : Maybe Float
    , priceClose : Maybe Float
    , volumeTraded : Maybe Float
    , tradesCount : Maybe Int
    }


{-| Represents a timeseries period used in exchange rate data.
-}
type alias V1TimeseriesPeriod =
    { periodId : Maybe String
    , lengthSeconds : Maybe Int
    , lengthMonths : Maybe Int
    , unitCount : Maybe Int
    , unitName : Maybe String
    , displayName : Maybe String
    }


{-| Represents a trade executed on the exchange.
-}
type alias V1Trade =
    { symbolId : Maybe String
    , timeExchange : Maybe Posix
    , timeCoinapi : Maybe Posix
    , uuid : Maybe Uuid
    , price : Maybe Float
    , size : Maybe Float
    , takerSide : Maybe String
    , idTrade : Maybe String
    , idOrderMaker : Maybe String
    , idOrderTaker : Maybe String
    }


-- ENCODER


encodeModelsExchangeTimeseriesItem : ModelsExchangeTimeseriesItem -> Json.Encode.Value
encodeModelsExchangeTimeseriesItem =
    encodeObject << encodeModelsExchangeTimeseriesItemPairs


encodeModelsExchangeTimeseriesItemWithTag : ( String, String ) -> ModelsExchangeTimeseriesItem -> Json.Encode.Value
encodeModelsExchangeTimeseriesItemWithTag (tagField, tag) model =
    encodeObject (encodeModelsExchangeTimeseriesItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeModelsExchangeTimeseriesItemPairs : ModelsExchangeTimeseriesItem -> List EncodedField
encodeModelsExchangeTimeseriesItemPairs model =
    let
        pairs =
            [ maybeEncode "time_period_start" Api.Time.encodeDateTime model.timePeriodStart
            , maybeEncode "time_period_end" Api.Time.encodeDateTime model.timePeriodEnd
            , maybeEncodeNullable "time_open" Api.Time.encodeDateTime model.timeOpen
            , maybeEncodeNullable "time_close" Api.Time.encodeDateTime model.timeClose
            , maybeEncodeNullable "price_open" Json.Encode.float model.priceOpen
            , maybeEncodeNullable "price_high" Json.Encode.float model.priceHigh
            , maybeEncodeNullable "price_low" Json.Encode.float model.priceLow
            , maybeEncodeNullable "price_close" Json.Encode.float model.priceClose
            , maybeEncode "volume_traded" Json.Encode.float model.volumeTraded
            , maybeEncode "trades_count" Json.Encode.int model.tradesCount
            , maybeEncodeNullable "symbol_id_exchange" Json.Encode.string model.symbolIdExchange
            , maybeEncodeNullable "symbol_id_coinapi" Json.Encode.string model.symbolIdCoinapi
            ]
    in
    pairs


encodeOptionsOptionExchangeGroup : OptionsOptionExchangeGroup -> Json.Encode.Value
encodeOptionsOptionExchangeGroup =
    encodeObject << encodeOptionsOptionExchangeGroupPairs


encodeOptionsOptionExchangeGroupWithTag : ( String, String ) -> OptionsOptionExchangeGroup -> Json.Encode.Value
encodeOptionsOptionExchangeGroupWithTag (tagField, tag) model =
    encodeObject (encodeOptionsOptionExchangeGroupPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOptionsOptionExchangeGroupPairs : OptionsOptionExchangeGroup -> List EncodedField
encodeOptionsOptionExchangeGroupPairs model =
    let
        pairs =
            [ maybeEncodeNullable "asset_id_base" Json.Encode.string model.assetIdBase
            , maybeEncodeNullable "asset_id_quote" Json.Encode.string model.assetIdQuote
            , maybeEncodeNullable "underlying_price" Json.Encode.float model.underlyingPrice
            , maybeEncode "time_expiration" Api.Time.encodeDateTime model.timeExpiration
            , maybeEncodeNullable "strikes" (Json.Encode.list encodeOptionsStrike) model.strikes
            ]
    in
    pairs


encodeOptionsStrike : OptionsStrike -> Json.Encode.Value
encodeOptionsStrike =
    encodeObject << encodeOptionsStrikePairs


encodeOptionsStrikeWithTag : ( String, String ) -> OptionsStrike -> Json.Encode.Value
encodeOptionsStrikeWithTag (tagField, tag) model =
    encodeObject (encodeOptionsStrikePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOptionsStrikePairs : OptionsStrike -> List EncodedField
encodeOptionsStrikePairs model =
    let
        pairs =
            [ maybeEncode "strike_price" Json.Encode.float model.strikePrice
            , maybeEncode "call" encodeV1QuoteTrade model.call
            , maybeEncode "put" encodeV1QuoteTrade model.put
            ]
    in
    pairs


encodeV1Asset : V1Asset -> Json.Encode.Value
encodeV1Asset =
    encodeObject << encodeV1AssetPairs


encodeV1AssetWithTag : ( String, String ) -> V1Asset -> Json.Encode.Value
encodeV1AssetWithTag (tagField, tag) model =
    encodeObject (encodeV1AssetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1AssetPairs : V1Asset -> List EncodedField
encodeV1AssetPairs model =
    let
        pairs =
            [ maybeEncodeNullable "asset_id" Json.Encode.string model.assetId
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "type_is_crypto" Json.Encode.int model.typeIsCrypto
            , maybeEncodeNullable "data_quote_start" Api.Time.encodeDateTime model.dataQuoteStart
            , maybeEncodeNullable "data_quote_end" Api.Time.encodeDateTime model.dataQuoteEnd
            , maybeEncodeNullable "data_orderbook_start" Api.Time.encodeDateTime model.dataOrderbookStart
            , maybeEncodeNullable "data_orderbook_end" Api.Time.encodeDateTime model.dataOrderbookEnd
            , maybeEncodeNullable "data_trade_start" Api.Time.encodeDateTime model.dataTradeStart
            , maybeEncodeNullable "data_trade_end" Api.Time.encodeDateTime model.dataTradeEnd
            , maybeEncodeNullable "data_symbols_count" Json.Encode.int model.dataSymbolsCount
            , maybeEncodeNullable "volume_1hrs_usd" Json.Encode.float model.volume1hrsUsd
            , maybeEncodeNullable "volume_1day_usd" Json.Encode.float model.volume1dayUsd
            , maybeEncodeNullable "volume_1mth_usd" Json.Encode.float model.volume1mthUsd
            , maybeEncodeNullable "price_usd" Json.Encode.float model.priceUsd
            , maybeEncodeNullable "id_icon" Uuid.encode model.idIcon
            , maybeEncodeNullable "supply_current" Json.Encode.float model.supplyCurrent
            , maybeEncodeNullable "supply_total" Json.Encode.float model.supplyTotal
            , maybeEncodeNullable "supply_max" Json.Encode.float model.supplyMax
            , maybeEncodeNullable "chain_addresses" (Json.Encode.list encodeV1ChainNetworkAddress) model.chainAddresses
            , maybeEncodeNullable "data_start" Json.Encode.string model.dataStart
            , maybeEncodeNullable "data_end" Json.Encode.string model.dataEnd
            ]
    in
    pairs


encodeV1Chain : V1Chain -> Json.Encode.Value
encodeV1Chain =
    encodeObject << encodeV1ChainPairs


encodeV1ChainWithTag : ( String, String ) -> V1Chain -> Json.Encode.Value
encodeV1ChainWithTag (tagField, tag) model =
    encodeObject (encodeV1ChainPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ChainPairs : V1Chain -> List EncodedField
encodeV1ChainPairs model =
    let
        pairs =
            [ maybeEncodeNullable "chain_id" Json.Encode.string model.chainId
            , maybeEncodeNullable "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeV1ChainNetworkAddress : V1ChainNetworkAddress -> Json.Encode.Value
encodeV1ChainNetworkAddress =
    encodeObject << encodeV1ChainNetworkAddressPairs


encodeV1ChainNetworkAddressWithTag : ( String, String ) -> V1ChainNetworkAddress -> Json.Encode.Value
encodeV1ChainNetworkAddressWithTag (tagField, tag) model =
    encodeObject (encodeV1ChainNetworkAddressPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ChainNetworkAddressPairs : V1ChainNetworkAddress -> List EncodedField
encodeV1ChainNetworkAddressPairs model =
    let
        pairs =
            [ maybeEncodeNullable "chain_id" Json.Encode.string model.chainId
            , maybeEncodeNullable "network_id" Json.Encode.string model.networkId
            , maybeEncodeNullable "address" Json.Encode.string model.address
            ]
    in
    pairs


encodeV1Exchange : V1Exchange -> Json.Encode.Value
encodeV1Exchange =
    encodeObject << encodeV1ExchangePairs


encodeV1ExchangeWithTag : ( String, String ) -> V1Exchange -> Json.Encode.Value
encodeV1ExchangeWithTag (tagField, tag) model =
    encodeObject (encodeV1ExchangePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ExchangePairs : V1Exchange -> List EncodedField
encodeV1ExchangePairs model =
    let
        pairs =
            [ maybeEncodeNullable "exchange_id" Json.Encode.string model.exchangeId
            , maybeEncodeNullable "website" Json.Encode.string model.website
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "data_start" Json.Encode.string model.dataStart
            , maybeEncodeNullable "data_end" Json.Encode.string model.dataEnd
            , maybeEncodeNullable "data_quote_start" Api.Time.encodeDateTime model.dataQuoteStart
            , maybeEncodeNullable "data_quote_end" Api.Time.encodeDateTime model.dataQuoteEnd
            , maybeEncodeNullable "data_orderbook_start" Api.Time.encodeDateTime model.dataOrderbookStart
            , maybeEncodeNullable "data_orderbook_end" Api.Time.encodeDateTime model.dataOrderbookEnd
            , maybeEncodeNullable "data_trade_start" Api.Time.encodeDateTime model.dataTradeStart
            , maybeEncodeNullable "data_trade_end" Api.Time.encodeDateTime model.dataTradeEnd
            , maybeEncodeNullable "data_trade_count" Json.Encode.int model.dataTradeCount
            , maybeEncodeNullable "data_symbols_count" Json.Encode.int model.dataSymbolsCount
            , maybeEncodeNullable "volume_1hrs_usd" Json.Encode.float model.volume1hrsUsd
            , maybeEncodeNullable "volume_1day_usd" Json.Encode.float model.volume1dayUsd
            , maybeEncodeNullable "volume_1mth_usd" Json.Encode.float model.volume1mthUsd
            , maybeEncodeNullable "metric_id" (Json.Encode.list Json.Encode.string) model.metricId
            , maybeEncodeNullable "icons" (Json.Encode.list encodeV1Icon) model.icons
            , maybeEncode "rank" Json.Encode.float model.rank
            , maybeEncodeNullable "integration_status" Json.Encode.string model.integrationStatus
            ]
    in
    pairs


encodeV1ExchangeRate : V1ExchangeRate -> Json.Encode.Value
encodeV1ExchangeRate =
    encodeObject << encodeV1ExchangeRatePairs


encodeV1ExchangeRateWithTag : ( String, String ) -> V1ExchangeRate -> Json.Encode.Value
encodeV1ExchangeRateWithTag (tagField, tag) model =
    encodeObject (encodeV1ExchangeRatePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ExchangeRatePairs : V1ExchangeRate -> List EncodedField
encodeV1ExchangeRatePairs model =
    let
        pairs =
            [ maybeEncode "time" Api.Time.encodeDateTime model.time
            , maybeEncodeNullable "asset_id_base" Json.Encode.string model.assetIdBase
            , maybeEncodeNullable "asset_id_quote" Json.Encode.string model.assetIdQuote
            , maybeEncode "rate" Json.Encode.float model.rate
            ]
    in
    pairs


encodeV1ExchangeRates : V1ExchangeRates -> Json.Encode.Value
encodeV1ExchangeRates =
    encodeObject << encodeV1ExchangeRatesPairs


encodeV1ExchangeRatesWithTag : ( String, String ) -> V1ExchangeRates -> Json.Encode.Value
encodeV1ExchangeRatesWithTag (tagField, tag) model =
    encodeObject (encodeV1ExchangeRatesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ExchangeRatesPairs : V1ExchangeRates -> List EncodedField
encodeV1ExchangeRatesPairs model =
    let
        pairs =
            [ maybeEncodeNullable "asset_id_base" Json.Encode.string model.assetIdBase
            , maybeEncodeNullable "rates" (Json.Encode.list encodeV1ExchangeRatesRate) model.rates
            ]
    in
    pairs


encodeV1ExchangeRatesRate : V1ExchangeRatesRate -> Json.Encode.Value
encodeV1ExchangeRatesRate =
    encodeObject << encodeV1ExchangeRatesRatePairs


encodeV1ExchangeRatesRateWithTag : ( String, String ) -> V1ExchangeRatesRate -> Json.Encode.Value
encodeV1ExchangeRatesRateWithTag (tagField, tag) model =
    encodeObject (encodeV1ExchangeRatesRatePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ExchangeRatesRatePairs : V1ExchangeRatesRate -> List EncodedField
encodeV1ExchangeRatesRatePairs model =
    let
        pairs =
            [ maybeEncode "time" Api.Time.encodeDateTime model.time
            , maybeEncodeNullable "asset_id_quote" Json.Encode.string model.assetIdQuote
            , maybeEncode "rate" Json.Encode.float model.rate
            ]
    in
    pairs


encodeV1ExchangeRatesTimeseriesItem : V1ExchangeRatesTimeseriesItem -> Json.Encode.Value
encodeV1ExchangeRatesTimeseriesItem =
    encodeObject << encodeV1ExchangeRatesTimeseriesItemPairs


encodeV1ExchangeRatesTimeseriesItemWithTag : ( String, String ) -> V1ExchangeRatesTimeseriesItem -> Json.Encode.Value
encodeV1ExchangeRatesTimeseriesItemWithTag (tagField, tag) model =
    encodeObject (encodeV1ExchangeRatesTimeseriesItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ExchangeRatesTimeseriesItemPairs : V1ExchangeRatesTimeseriesItem -> List EncodedField
encodeV1ExchangeRatesTimeseriesItemPairs model =
    let
        pairs =
            [ maybeEncode "time_period_start" Api.Time.encodeDateTime model.timePeriodStart
            , maybeEncode "time_period_end" Api.Time.encodeDateTime model.timePeriodEnd
            , maybeEncodeNullable "time_open" Api.Time.encodeDateTime model.timeOpen
            , maybeEncodeNullable "time_close" Api.Time.encodeDateTime model.timeClose
            , maybeEncodeNullable "rate_open" Json.Encode.float model.rateOpen
            , maybeEncodeNullable "rate_high" Json.Encode.float model.rateHigh
            , maybeEncodeNullable "rate_low" Json.Encode.float model.rateLow
            , maybeEncodeNullable "rate_close" Json.Encode.float model.rateClose
            ]
    in
    pairs


encodeV1GeneralData : V1GeneralData -> Json.Encode.Value
encodeV1GeneralData =
    encodeObject << encodeV1GeneralDataPairs


encodeV1GeneralDataWithTag : ( String, String ) -> V1GeneralData -> Json.Encode.Value
encodeV1GeneralDataWithTag (tagField, tag) model =
    encodeObject (encodeV1GeneralDataPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1GeneralDataPairs : V1GeneralData -> List EncodedField
encodeV1GeneralDataPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncodeNullable "exchange_id" Json.Encode.string model.exchangeId
            , maybeEncodeNullable "asset_id" Json.Encode.string model.assetId
            , maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncodeNullable "metric_id" Json.Encode.string model.metricId
            , maybeEncodeNullable "value_decimal" Json.Encode.float model.valueDecimal
            , maybeEncodeNullable "value_text" Json.Encode.string model.valueText
            , maybeEncodeNullable "value_time" Api.Time.encodeDateTime model.valueTime
            ]
    in
    pairs


encodeV1Icon : V1Icon -> Json.Encode.Value
encodeV1Icon =
    encodeObject << encodeV1IconPairs


encodeV1IconWithTag : ( String, String ) -> V1Icon -> Json.Encode.Value
encodeV1IconWithTag (tagField, tag) model =
    encodeObject (encodeV1IconPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1IconPairs : V1Icon -> List EncodedField
encodeV1IconPairs model =
    let
        pairs =
            [ maybeEncodeNullable "exchange_id" Json.Encode.string model.exchangeId
            , maybeEncodeNullable "asset_id" Json.Encode.string model.assetId
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeV1LastTrade : V1LastTrade -> Json.Encode.Value
encodeV1LastTrade =
    encodeObject << encodeV1LastTradePairs


encodeV1LastTradeWithTag : ( String, String ) -> V1LastTrade -> Json.Encode.Value
encodeV1LastTradeWithTag (tagField, tag) model =
    encodeObject (encodeV1LastTradePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1LastTradePairs : V1LastTrade -> List EncodedField
encodeV1LastTradePairs model =
    let
        pairs =
            [ maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncode "uuid" Uuid.encode model.uuid
            , maybeEncode "price" Json.Encode.float model.price
            , maybeEncode "size" Json.Encode.float model.size
            , maybeEncodeNullable "taker_side" Json.Encode.string model.takerSide
            ]
    in
    pairs


encodeV1ListingItem : V1ListingItem -> Json.Encode.Value
encodeV1ListingItem =
    encodeObject << encodeV1ListingItemPairs


encodeV1ListingItemWithTag : ( String, String ) -> V1ListingItem -> Json.Encode.Value
encodeV1ListingItemWithTag (tagField, tag) model =
    encodeObject (encodeV1ListingItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1ListingItemPairs : V1ListingItem -> List EncodedField
encodeV1ListingItemPairs model =
    let
        pairs =
            [ maybeEncodeNullable "metric_id" Json.Encode.string model.metricId
            , maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncodeNullable "symbol_id_external" Json.Encode.string model.symbolIdExternal
            , maybeEncodeNullable "exchange_id" Json.Encode.string model.exchangeId
            , maybeEncodeNullable "asset_id" Json.Encode.string model.assetId
            , maybeEncodeNullable "asset_id_external" Json.Encode.string model.assetIdExternal
            , maybeEncodeNullable "chain_id" Json.Encode.string model.chainId
            , maybeEncodeNullable "network_id" Json.Encode.string model.networkId
            ]
    in
    pairs


encodeV1Metric : V1Metric -> Json.Encode.Value
encodeV1Metric =
    encodeObject << encodeV1MetricPairs


encodeV1MetricWithTag : ( String, String ) -> V1Metric -> Json.Encode.Value
encodeV1MetricWithTag (tagField, tag) model =
    encodeObject (encodeV1MetricPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1MetricPairs : V1Metric -> List EncodedField
encodeV1MetricPairs model =
    let
        pairs =
            [ maybeEncodeNullable "metric_id" Json.Encode.string model.metricId
            , maybeEncodeNullable "description" Json.Encode.string model.description
            ]
    in
    pairs


encodeV1MetricData : V1MetricData -> Json.Encode.Value
encodeV1MetricData =
    encodeObject << encodeV1MetricDataPairs


encodeV1MetricDataWithTag : ( String, String ) -> V1MetricData -> Json.Encode.Value
encodeV1MetricDataWithTag (tagField, tag) model =
    encodeObject (encodeV1MetricDataPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1MetricDataPairs : V1MetricData -> List EncodedField
encodeV1MetricDataPairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time" Api.Time.encodeDateTime model.time
            , maybeEncode "value" Json.Encode.float model.value
            ]
    in
    pairs


encodeV1MetricInfo : V1MetricInfo -> Json.Encode.Value
encodeV1MetricInfo =
    encodeObject << encodeV1MetricInfoPairs


encodeV1MetricInfoWithTag : ( String, String ) -> V1MetricInfo -> Json.Encode.Value
encodeV1MetricInfoWithTag (tagField, tag) model =
    encodeObject (encodeV1MetricInfoPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1MetricInfoPairs : V1MetricInfo -> List EncodedField
encodeV1MetricInfoPairs model =
    let
        pairs =
            [ maybeEncodeNullable "metric_id" Json.Encode.string model.metricId
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "source_id" Json.Encode.string model.sourceId
            ]
    in
    pairs


encodeV1OrderBook : V1OrderBook -> Json.Encode.Value
encodeV1OrderBook =
    encodeObject << encodeV1OrderBookPairs


encodeV1OrderBookWithTag : ( String, String ) -> V1OrderBook -> Json.Encode.Value
encodeV1OrderBookWithTag (tagField, tag) model =
    encodeObject (encodeV1OrderBookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1OrderBookPairs : V1OrderBook -> List EncodedField
encodeV1OrderBookPairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncodeNullable "asks" encodeAnyType model.asks
            , maybeEncodeNullable "bids" encodeAnyType model.bids
            ]
    in
    pairs


encodeV1OrderBookBase : V1OrderBookBase -> Json.Encode.Value
encodeV1OrderBookBase =
    encodeObject << encodeV1OrderBookBasePairs


encodeV1OrderBookBaseWithTag : ( String, String ) -> V1OrderBookBase -> Json.Encode.Value
encodeV1OrderBookBaseWithTag (tagField, tag) model =
    encodeObject (encodeV1OrderBookBasePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1OrderBookBasePairs : V1OrderBookBase -> List EncodedField
encodeV1OrderBookBasePairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncodeNullable "asks" encodeAnyType model.asks
            , maybeEncodeNullable "bids" encodeAnyType model.bids
            ]
    in
    pairs


encodeV1OrderBookDepth : V1OrderBookDepth -> Json.Encode.Value
encodeV1OrderBookDepth =
    encodeObject << encodeV1OrderBookDepthPairs


encodeV1OrderBookDepthWithTag : ( String, String ) -> V1OrderBookDepth -> Json.Encode.Value
encodeV1OrderBookDepthWithTag (tagField, tag) model =
    encodeObject (encodeV1OrderBookDepthPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1OrderBookDepthPairs : V1OrderBookDepth -> List EncodedField
encodeV1OrderBookDepthPairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncode "ask_levels" Json.Encode.int model.askLevels
            , maybeEncode "bid_levels" Json.Encode.int model.bidLevels
            , maybeEncode "ask_depth" Json.Encode.float model.askDepth
            , maybeEncode "bid_depth" Json.Encode.float model.bidDepth
            ]
    in
    pairs


encodeV1Quote : V1Quote -> Json.Encode.Value
encodeV1Quote =
    encodeObject << encodeV1QuotePairs


encodeV1QuoteWithTag : ( String, String ) -> V1Quote -> Json.Encode.Value
encodeV1QuoteWithTag (tagField, tag) model =
    encodeObject (encodeV1QuotePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1QuotePairs : V1Quote -> List EncodedField
encodeV1QuotePairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncodeNullable "ask_price" Json.Encode.float model.askPrice
            , maybeEncodeNullable "ask_size" Json.Encode.float model.askSize
            , maybeEncodeNullable "bid_price" Json.Encode.float model.bidPrice
            , maybeEncodeNullable "bid_size" Json.Encode.float model.bidSize
            ]
    in
    pairs


encodeV1QuoteTrade : V1QuoteTrade -> Json.Encode.Value
encodeV1QuoteTrade =
    encodeObject << encodeV1QuoteTradePairs


encodeV1QuoteTradeWithTag : ( String, String ) -> V1QuoteTrade -> Json.Encode.Value
encodeV1QuoteTradeWithTag (tagField, tag) model =
    encodeObject (encodeV1QuoteTradePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1QuoteTradePairs : V1QuoteTrade -> List EncodedField
encodeV1QuoteTradePairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncodeNullable "ask_price" Json.Encode.float model.askPrice
            , maybeEncodeNullable "ask_size" Json.Encode.float model.askSize
            , maybeEncodeNullable "bid_price" Json.Encode.float model.bidPrice
            , maybeEncodeNullable "bid_size" Json.Encode.float model.bidSize
            , maybeEncode "last_trade" encodeV1LastTrade model.lastTrade
            ]
    in
    pairs


encodeV1Symbol : V1Symbol -> Json.Encode.Value
encodeV1Symbol =
    encodeObject << encodeV1SymbolPairs


encodeV1SymbolWithTag : ( String, String ) -> V1Symbol -> Json.Encode.Value
encodeV1SymbolWithTag (tagField, tag) model =
    encodeObject (encodeV1SymbolPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1SymbolPairs : V1Symbol -> List EncodedField
encodeV1SymbolPairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncodeNullable "exchange_id" Json.Encode.string model.exchangeId
            , maybeEncodeNullable "symbol_type" Json.Encode.string model.symbolType
            , maybeEncodeNullable "asset_id_base" Json.Encode.string model.assetIdBase
            , maybeEncodeNullable "asset_id_quote" Json.Encode.string model.assetIdQuote
            , maybeEncodeNullable "asset_id_unit" Json.Encode.string model.assetIdUnit
            , maybeEncodeNullable "future_contract_unit" Json.Encode.float model.futureContractUnit
            , maybeEncodeNullable "future_contract_unit_asset" Json.Encode.string model.futureContractUnitAsset
            , maybeEncodeNullable "future_delivery_time" Api.Time.encodeDateTime model.futureDeliveryTime
            , maybeEncodeNullable "option_type_is_call" Json.Encode.bool model.optionTypeIsCall
            , maybeEncodeNullable "option_strike_price" Json.Encode.float model.optionStrikePrice
            , maybeEncodeNullable "option_contract_unit" Json.Encode.float model.optionContractUnit
            , maybeEncodeNullable "option_exercise_style" Json.Encode.string model.optionExerciseStyle
            , maybeEncodeNullable "option_expiration_time" Api.Time.encodeDateTime model.optionExpirationTime
            , maybeEncodeNullable "contract_delivery_time" Api.Time.encodeDateTime model.contractDeliveryTime
            , maybeEncodeNullable "contract_unit" Json.Encode.float model.contractUnit
            , maybeEncodeNullable "contract_unit_asset" Json.Encode.string model.contractUnitAsset
            , maybeEncodeNullable "contract_id" Json.Encode.string model.contractId
            , maybeEncodeNullable "contract_display_name" Json.Encode.string model.contractDisplayName
            , maybeEncodeNullable "contract_display_description" Json.Encode.string model.contractDisplayDescription
            , maybeEncodeNullable "data_start" Json.Encode.string model.dataStart
            , maybeEncodeNullable "data_end" Json.Encode.string model.dataEnd
            , maybeEncodeNullable "data_quote_start" Api.Time.encodeDateTime model.dataQuoteStart
            , maybeEncodeNullable "data_quote_end" Api.Time.encodeDateTime model.dataQuoteEnd
            , maybeEncodeNullable "data_orderbook_start" Api.Time.encodeDateTime model.dataOrderbookStart
            , maybeEncodeNullable "data_orderbook_end" Api.Time.encodeDateTime model.dataOrderbookEnd
            , maybeEncodeNullable "data_trade_start" Api.Time.encodeDateTime model.dataTradeStart
            , maybeEncodeNullable "data_trade_end" Api.Time.encodeDateTime model.dataTradeEnd
            , maybeEncodeNullable "index_id" Json.Encode.string model.indexId
            , maybeEncodeNullable "index_display_name" Json.Encode.string model.indexDisplayName
            , maybeEncodeNullable "index_display_description" Json.Encode.string model.indexDisplayDescription
            , maybeEncodeNullable "volume_1hrs" Json.Encode.float model.volume1hrs
            , maybeEncodeNullable "volume_1hrs_usd" Json.Encode.float model.volume1hrsUsd
            , maybeEncodeNullable "volume_1day" Json.Encode.float model.volume1day
            , maybeEncodeNullable "volume_1day_usd" Json.Encode.float model.volume1dayUsd
            , maybeEncodeNullable "volume_1mth" Json.Encode.float model.volume1mth
            , maybeEncodeNullable "volume_1mth_usd" Json.Encode.float model.volume1mthUsd
            , maybeEncodeNullable "price" Json.Encode.float model.price
            , maybeEncodeNullable "symbol_id_exchange" Json.Encode.string model.symbolIdExchange
            , maybeEncodeNullable "asset_id_base_exchange" Json.Encode.string model.assetIdBaseExchange
            , maybeEncodeNullable "asset_id_quote_exchange" Json.Encode.string model.assetIdQuoteExchange
            , maybeEncodeNullable "price_precision" Json.Encode.float model.pricePrecision
            , maybeEncodeNullable "size_precision" Json.Encode.float model.sizePrecision
            , maybeEncodeNullable "raw_kvp" (Json.Encode.dict identity Json.Encode.string) model.rawKvp
            , maybeEncodeNullable "volume_to_usd" Json.Encode.float model.volumeToUsd
            ]
    in
    pairs


encodeV1SymbolMapping : V1SymbolMapping -> Json.Encode.Value
encodeV1SymbolMapping =
    encodeObject << encodeV1SymbolMappingPairs


encodeV1SymbolMappingWithTag : ( String, String ) -> V1SymbolMapping -> Json.Encode.Value
encodeV1SymbolMappingWithTag (tagField, tag) model =
    encodeObject (encodeV1SymbolMappingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1SymbolMappingPairs : V1SymbolMapping -> List EncodedField
encodeV1SymbolMappingPairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncodeNullable "symbol_id_exchange" Json.Encode.string model.symbolIdExchange
            , maybeEncode "coinapi_datainfo_id" Json.Encode.int model.coinapiDatainfoId
            , maybeEncodeNullable "asset_id_base_exchange" Json.Encode.string model.assetIdBaseExchange
            , maybeEncodeNullable "asset_id_quote_exchange" Json.Encode.string model.assetIdQuoteExchange
            , maybeEncodeNullable "asset_id_base" Json.Encode.string model.assetIdBase
            , maybeEncodeNullable "asset_id_quote" Json.Encode.string model.assetIdQuote
            , maybeEncodeNullable "price_precision" Json.Encode.float model.pricePrecision
            , maybeEncodeNullable "size_precision" Json.Encode.float model.sizePrecision
            ]
    in
    pairs


encodeV1TimeseriesItem : V1TimeseriesItem -> Json.Encode.Value
encodeV1TimeseriesItem =
    encodeObject << encodeV1TimeseriesItemPairs


encodeV1TimeseriesItemWithTag : ( String, String ) -> V1TimeseriesItem -> Json.Encode.Value
encodeV1TimeseriesItemWithTag (tagField, tag) model =
    encodeObject (encodeV1TimeseriesItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1TimeseriesItemPairs : V1TimeseriesItem -> List EncodedField
encodeV1TimeseriesItemPairs model =
    let
        pairs =
            [ maybeEncode "time_period_start" Api.Time.encodeDateTime model.timePeriodStart
            , maybeEncode "time_period_end" Api.Time.encodeDateTime model.timePeriodEnd
            , maybeEncodeNullable "time_open" Api.Time.encodeDateTime model.timeOpen
            , maybeEncodeNullable "time_close" Api.Time.encodeDateTime model.timeClose
            , maybeEncodeNullable "price_open" Json.Encode.float model.priceOpen
            , maybeEncodeNullable "price_high" Json.Encode.float model.priceHigh
            , maybeEncodeNullable "price_low" Json.Encode.float model.priceLow
            , maybeEncodeNullable "price_close" Json.Encode.float model.priceClose
            , maybeEncode "volume_traded" Json.Encode.float model.volumeTraded
            , maybeEncode "trades_count" Json.Encode.int model.tradesCount
            ]
    in
    pairs


encodeV1TimeseriesPeriod : V1TimeseriesPeriod -> Json.Encode.Value
encodeV1TimeseriesPeriod =
    encodeObject << encodeV1TimeseriesPeriodPairs


encodeV1TimeseriesPeriodWithTag : ( String, String ) -> V1TimeseriesPeriod -> Json.Encode.Value
encodeV1TimeseriesPeriodWithTag (tagField, tag) model =
    encodeObject (encodeV1TimeseriesPeriodPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1TimeseriesPeriodPairs : V1TimeseriesPeriod -> List EncodedField
encodeV1TimeseriesPeriodPairs model =
    let
        pairs =
            [ maybeEncodeNullable "period_id" Json.Encode.string model.periodId
            , maybeEncode "length_seconds" Json.Encode.int model.lengthSeconds
            , maybeEncode "length_months" Json.Encode.int model.lengthMonths
            , maybeEncodeNullable "unit_count" Json.Encode.int model.unitCount
            , maybeEncodeNullable "unit_name" Json.Encode.string model.unitName
            , maybeEncodeNullable "display_name" Json.Encode.string model.displayName
            ]
    in
    pairs


encodeV1Trade : V1Trade -> Json.Encode.Value
encodeV1Trade =
    encodeObject << encodeV1TradePairs


encodeV1TradeWithTag : ( String, String ) -> V1Trade -> Json.Encode.Value
encodeV1TradeWithTag (tagField, tag) model =
    encodeObject (encodeV1TradePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeV1TradePairs : V1Trade -> List EncodedField
encodeV1TradePairs model =
    let
        pairs =
            [ maybeEncodeNullable "symbol_id" Json.Encode.string model.symbolId
            , maybeEncode "time_exchange" Api.Time.encodeDateTime model.timeExchange
            , maybeEncode "time_coinapi" Api.Time.encodeDateTime model.timeCoinapi
            , maybeEncode "uuid" Uuid.encode model.uuid
            , maybeEncode "price" Json.Encode.float model.price
            , maybeEncode "size" Json.Encode.float model.size
            , maybeEncodeNullable "taker_side" Json.Encode.string model.takerSide
            , maybeEncodeNullable "id_trade" Json.Encode.string model.idTrade
            , maybeEncodeNullable "id_order_maker" Json.Encode.string model.idOrderMaker
            , maybeEncodeNullable "id_order_taker" Json.Encode.string model.idOrderTaker
            ]
    in
    pairs


-- DECODER


modelsExchangeTimeseriesItemDecoder : Json.Decode.Decoder ModelsExchangeTimeseriesItem
modelsExchangeTimeseriesItemDecoder =
    Json.Decode.succeed ModelsExchangeTimeseriesItem
        |> maybeDecode "time_period_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_period_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_open" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_close" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "price_open" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_high" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_low" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_close" Json.Decode.float Nothing
        |> maybeDecode "volume_traded" Json.Decode.float Nothing
        |> maybeDecode "trades_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "symbol_id_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_id_coinapi" Json.Decode.string Nothing


optionsOptionExchangeGroupDecoder : Json.Decode.Decoder OptionsOptionExchangeGroup
optionsOptionExchangeGroupDecoder =
    Json.Decode.succeed OptionsOptionExchangeGroup
        |> maybeDecodeNullable "asset_id_base" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote" Json.Decode.string Nothing
        |> maybeDecodeNullable "underlying_price" Json.Decode.float Nothing
        |> maybeDecode "time_expiration" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "strikes" (Json.Decode.list optionsStrikeDecoder) Nothing


optionsStrikeDecoder : Json.Decode.Decoder OptionsStrike
optionsStrikeDecoder =
    Json.Decode.succeed OptionsStrike
        |> maybeDecode "strike_price" Json.Decode.float Nothing
        |> maybeDecode "call" v1QuoteTradeDecoder Nothing
        |> maybeDecode "put" v1QuoteTradeDecoder Nothing


v1AssetDecoder : Json.Decode.Decoder V1Asset
v1AssetDecoder =
    Json.Decode.succeed V1Asset
        |> maybeDecodeNullable "asset_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "type_is_crypto" Json.Decode.int Nothing
        |> maybeDecodeNullable "data_quote_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_quote_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_symbols_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "volume_1hrs_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1day_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1mth_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "id_icon" Uuid.decoder Nothing
        |> maybeDecodeNullable "supply_current" Json.Decode.float Nothing
        |> maybeDecodeNullable "supply_total" Json.Decode.float Nothing
        |> maybeDecodeNullable "supply_max" Json.Decode.float Nothing
        |> maybeDecodeNullable "chain_addresses" (Json.Decode.list v1ChainNetworkAddressDecoder) Nothing
        |> maybeDecodeNullable "data_start" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_end" Json.Decode.string Nothing


v1ChainDecoder : Json.Decode.Decoder V1Chain
v1ChainDecoder =
    Json.Decode.succeed V1Chain
        |> maybeDecodeNullable "chain_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing


v1ChainNetworkAddressDecoder : Json.Decode.Decoder V1ChainNetworkAddress
v1ChainNetworkAddressDecoder =
    Json.Decode.succeed V1ChainNetworkAddress
        |> maybeDecodeNullable "chain_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "network_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing


v1ExchangeDecoder : Json.Decode.Decoder V1Exchange
v1ExchangeDecoder =
    Json.Decode.succeed V1Exchange
        |> maybeDecodeNullable "exchange_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "website" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_start" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_end" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_quote_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_quote_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "data_symbols_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "volume_1hrs_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1day_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1mth_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "metric_id" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "icons" (Json.Decode.list v1IconDecoder) Nothing
        |> maybeDecode "rank" Json.Decode.float Nothing
        |> maybeDecodeNullable "integration_status" Json.Decode.string Nothing


v1ExchangeRateDecoder : Json.Decode.Decoder V1ExchangeRate
v1ExchangeRateDecoder =
    Json.Decode.succeed V1ExchangeRate
        |> maybeDecode "time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "asset_id_base" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote" Json.Decode.string Nothing
        |> maybeDecode "rate" Json.Decode.float Nothing


v1ExchangeRatesDecoder : Json.Decode.Decoder V1ExchangeRates
v1ExchangeRatesDecoder =
    Json.Decode.succeed V1ExchangeRates
        |> maybeDecodeNullable "asset_id_base" Json.Decode.string Nothing
        |> maybeDecodeNullable "rates" (Json.Decode.list v1ExchangeRatesRateDecoder) Nothing


v1ExchangeRatesRateDecoder : Json.Decode.Decoder V1ExchangeRatesRate
v1ExchangeRatesRateDecoder =
    Json.Decode.succeed V1ExchangeRatesRate
        |> maybeDecode "time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "asset_id_quote" Json.Decode.string Nothing
        |> maybeDecode "rate" Json.Decode.float Nothing


v1ExchangeRatesTimeseriesItemDecoder : Json.Decode.Decoder V1ExchangeRatesTimeseriesItem
v1ExchangeRatesTimeseriesItemDecoder =
    Json.Decode.succeed V1ExchangeRatesTimeseriesItem
        |> maybeDecode "time_period_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_period_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_open" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_close" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "rate_open" Json.Decode.float Nothing
        |> maybeDecodeNullable "rate_high" Json.Decode.float Nothing
        |> maybeDecodeNullable "rate_low" Json.Decode.float Nothing
        |> maybeDecodeNullable "rate_close" Json.Decode.float Nothing


v1GeneralDataDecoder : Json.Decode.Decoder V1GeneralData
v1GeneralDataDecoder =
    Json.Decode.succeed V1GeneralData
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "exchange_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "metric_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "value_decimal" Json.Decode.float Nothing
        |> maybeDecodeNullable "value_text" Json.Decode.string Nothing
        |> maybeDecodeNullable "value_time" Api.Time.dateTimeDecoder Nothing


v1IconDecoder : Json.Decode.Decoder V1Icon
v1IconDecoder =
    Json.Decode.succeed V1Icon
        |> maybeDecodeNullable "exchange_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


v1LastTradeDecoder : Json.Decode.Decoder V1LastTrade
v1LastTradeDecoder =
    Json.Decode.succeed V1LastTrade
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "uuid" Uuid.decoder Nothing
        |> maybeDecode "price" Json.Decode.float Nothing
        |> maybeDecode "size" Json.Decode.float Nothing
        |> maybeDecodeNullable "taker_side" Json.Decode.string Nothing


v1ListingItemDecoder : Json.Decode.Decoder V1ListingItem
v1ListingItemDecoder =
    Json.Decode.succeed V1ListingItem
        |> maybeDecodeNullable "metric_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_id_external" Json.Decode.string Nothing
        |> maybeDecodeNullable "exchange_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_external" Json.Decode.string Nothing
        |> maybeDecodeNullable "chain_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "network_id" Json.Decode.string Nothing


v1MetricDecoder : Json.Decode.Decoder V1Metric
v1MetricDecoder =
    Json.Decode.succeed V1Metric
        |> maybeDecodeNullable "metric_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing


v1MetricDataDecoder : Json.Decode.Decoder V1MetricData
v1MetricDataDecoder =
    Json.Decode.succeed V1MetricData
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "value" Json.Decode.float Nothing


v1MetricInfoDecoder : Json.Decode.Decoder V1MetricInfo
v1MetricInfoDecoder =
    Json.Decode.succeed V1MetricInfo
        |> maybeDecodeNullable "metric_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_id" Json.Decode.string Nothing


v1OrderBookDecoder : Json.Decode.Decoder V1OrderBook
v1OrderBookDecoder =
    Json.Decode.succeed V1OrderBook
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "asks" anyTypeDecoder Nothing
        |> maybeDecodeNullable "bids" anyTypeDecoder Nothing


v1OrderBookBaseDecoder : Json.Decode.Decoder V1OrderBookBase
v1OrderBookBaseDecoder =
    Json.Decode.succeed V1OrderBookBase
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "asks" anyTypeDecoder Nothing
        |> maybeDecodeNullable "bids" anyTypeDecoder Nothing


v1OrderBookDepthDecoder : Json.Decode.Decoder V1OrderBookDepth
v1OrderBookDepthDecoder =
    Json.Decode.succeed V1OrderBookDepth
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "ask_levels" Json.Decode.int Nothing
        |> maybeDecode "bid_levels" Json.Decode.int Nothing
        |> maybeDecode "ask_depth" Json.Decode.float Nothing
        |> maybeDecode "bid_depth" Json.Decode.float Nothing


v1QuoteDecoder : Json.Decode.Decoder V1Quote
v1QuoteDecoder =
    Json.Decode.succeed V1Quote
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "ask_price" Json.Decode.float Nothing
        |> maybeDecodeNullable "ask_size" Json.Decode.float Nothing
        |> maybeDecodeNullable "bid_price" Json.Decode.float Nothing
        |> maybeDecodeNullable "bid_size" Json.Decode.float Nothing


v1QuoteTradeDecoder : Json.Decode.Decoder V1QuoteTrade
v1QuoteTradeDecoder =
    Json.Decode.succeed V1QuoteTrade
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "ask_price" Json.Decode.float Nothing
        |> maybeDecodeNullable "ask_size" Json.Decode.float Nothing
        |> maybeDecodeNullable "bid_price" Json.Decode.float Nothing
        |> maybeDecodeNullable "bid_size" Json.Decode.float Nothing
        |> maybeDecode "last_trade" v1LastTradeDecoder Nothing


v1SymbolDecoder : Json.Decode.Decoder V1Symbol
v1SymbolDecoder =
    Json.Decode.succeed V1Symbol
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "exchange_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_type" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_base" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_unit" Json.Decode.string Nothing
        |> maybeDecodeNullable "future_contract_unit" Json.Decode.float Nothing
        |> maybeDecodeNullable "future_contract_unit_asset" Json.Decode.string Nothing
        |> maybeDecodeNullable "future_delivery_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "option_type_is_call" Json.Decode.bool Nothing
        |> maybeDecodeNullable "option_strike_price" Json.Decode.float Nothing
        |> maybeDecodeNullable "option_contract_unit" Json.Decode.float Nothing
        |> maybeDecodeNullable "option_exercise_style" Json.Decode.string Nothing
        |> maybeDecodeNullable "option_expiration_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "contract_delivery_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "contract_unit" Json.Decode.float Nothing
        |> maybeDecodeNullable "contract_unit_asset" Json.Decode.string Nothing
        |> maybeDecodeNullable "contract_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "contract_display_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "contract_display_description" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_start" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_end" Json.Decode.string Nothing
        |> maybeDecodeNullable "data_quote_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_quote_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_orderbook_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "data_trade_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "index_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "index_display_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "index_display_description" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_1hrs" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1hrs_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1day" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1day_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1mth" Json.Decode.float Nothing
        |> maybeDecodeNullable "volume_1mth_usd" Json.Decode.float Nothing
        |> maybeDecodeNullable "price" Json.Decode.float Nothing
        |> maybeDecodeNullable "symbol_id_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_base_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_precision" Json.Decode.float Nothing
        |> maybeDecodeNullable "size_precision" Json.Decode.float Nothing
        |> maybeDecodeNullable "raw_kvp" (Json.Decode.dict Json.Decode.string) Nothing
        |> maybeDecodeNullable "volume_to_usd" Json.Decode.float Nothing


v1SymbolMappingDecoder : Json.Decode.Decoder V1SymbolMapping
v1SymbolMappingDecoder =
    Json.Decode.succeed V1SymbolMapping
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol_id_exchange" Json.Decode.string Nothing
        |> maybeDecode "coinapi_datainfo_id" Json.Decode.int Nothing
        |> maybeDecodeNullable "asset_id_base_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote_exchange" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_base" Json.Decode.string Nothing
        |> maybeDecodeNullable "asset_id_quote" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_precision" Json.Decode.float Nothing
        |> maybeDecodeNullable "size_precision" Json.Decode.float Nothing


v1TimeseriesItemDecoder : Json.Decode.Decoder V1TimeseriesItem
v1TimeseriesItemDecoder =
    Json.Decode.succeed V1TimeseriesItem
        |> maybeDecode "time_period_start" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_period_end" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_open" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "time_close" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "price_open" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_high" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_low" Json.Decode.float Nothing
        |> maybeDecodeNullable "price_close" Json.Decode.float Nothing
        |> maybeDecode "volume_traded" Json.Decode.float Nothing
        |> maybeDecode "trades_count" Json.Decode.int Nothing


v1TimeseriesPeriodDecoder : Json.Decode.Decoder V1TimeseriesPeriod
v1TimeseriesPeriodDecoder =
    Json.Decode.succeed V1TimeseriesPeriod
        |> maybeDecodeNullable "period_id" Json.Decode.string Nothing
        |> maybeDecode "length_seconds" Json.Decode.int Nothing
        |> maybeDecode "length_months" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "display_name" Json.Decode.string Nothing


v1TradeDecoder : Json.Decode.Decoder V1Trade
v1TradeDecoder =
    Json.Decode.succeed V1Trade
        |> maybeDecodeNullable "symbol_id" Json.Decode.string Nothing
        |> maybeDecode "time_exchange" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "time_coinapi" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "uuid" Uuid.decoder Nothing
        |> maybeDecode "price" Json.Decode.float Nothing
        |> maybeDecode "size" Json.Decode.float Nothing
        |> maybeDecodeNullable "taker_side" Json.Decode.string Nothing
        |> maybeDecodeNullable "id_trade" Json.Decode.string Nothing
        |> maybeDecodeNullable "id_order_maker" Json.Decode.string Nothing
        |> maybeDecodeNullable "id_order_taker" Json.Decode.string Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f