/*
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents symbol mapping information for exchange symbols.
 */
public class OASV1SymbolMapping implements OAS.MappedProperties {
    /**
     * The symbol ID.
     * @return symbolId
     */
    public String symbolId { get; set; }

    /**
     * The exchange-specific symbol ID.
     * @return symbolIdExchange
     */
    public String symbolIdExchange { get; set; }

    /**
     * The CoinAPI DataInfo ID.
     * @return coinapiDatainfoId
     */
    public Integer coinapiDatainfoId { get; set; }

    /**
     * The exchange-specific base asset ID.
     * @return assetIdBaseExchange
     */
    public String assetIdBaseExchange { get; set; }

    /**
     * The exchange-specific quote asset ID.
     * @return assetIdQuoteExchange
     */
    public String assetIdQuoteExchange { get; set; }

    /**
     * The base asset ID.
     * @return assetIdBase
     */
    public String assetIdBase { get; set; }

    /**
     * The quote asset ID.
     * @return assetIdQuote
     */
    public String assetIdQuote { get; set; }

    /**
     * The price precision.
     * @return pricePrecision
     */
    public Double pricePrecision { get; set; }

    /**
     * The size precision.
     * @return sizePrecision
     */
    public Double sizePrecision { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_id' => 'symbolId',
        'symbol_id_exchange' => 'symbolIdExchange',
        'coinapi_datainfo_id' => 'coinapiDatainfoId',
        'asset_id_base_exchange' => 'assetIdBaseExchange',
        'asset_id_quote_exchange' => 'assetIdQuoteExchange',
        'asset_id_base' => 'assetIdBase',
        'asset_id_quote' => 'assetIdQuote',
        'price_precision' => 'pricePrecision',
        'size_precision' => 'sizePrecision'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASV1SymbolMapping getExample() {
        OASV1SymbolMapping v1SymbolMapping = new OASV1SymbolMapping();
          v1SymbolMapping.symbolId = '';
          v1SymbolMapping.symbolIdExchange = '';
          v1SymbolMapping.coinapiDatainfoId = 0;
          v1SymbolMapping.assetIdBaseExchange = '';
          v1SymbolMapping.assetIdQuoteExchange = '';
          v1SymbolMapping.assetIdBase = '';
          v1SymbolMapping.assetIdQuote = '';
          v1SymbolMapping.pricePrecision = 1.3579;
          v1SymbolMapping.sizePrecision = 1.3579;
        return v1SymbolMapping;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASV1SymbolMapping) {           
            OASV1SymbolMapping v1SymbolMapping = (OASV1SymbolMapping) obj;
            return this.symbolId == v1SymbolMapping.symbolId
                && this.symbolIdExchange == v1SymbolMapping.symbolIdExchange
                && this.coinapiDatainfoId == v1SymbolMapping.coinapiDatainfoId
                && this.assetIdBaseExchange == v1SymbolMapping.assetIdBaseExchange
                && this.assetIdQuoteExchange == v1SymbolMapping.assetIdQuoteExchange
                && this.assetIdBase == v1SymbolMapping.assetIdBase
                && this.assetIdQuote == v1SymbolMapping.assetIdQuote
                && this.pricePrecision == v1SymbolMapping.pricePrecision
                && this.sizePrecision == v1SymbolMapping.sizePrecision;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (symbolId == null ? 0 : System.hashCode(symbolId));
        hashCode = (17 * hashCode) + (symbolIdExchange == null ? 0 : System.hashCode(symbolIdExchange));
        hashCode = (17 * hashCode) + (coinapiDatainfoId == null ? 0 : System.hashCode(coinapiDatainfoId));
        hashCode = (17 * hashCode) + (assetIdBaseExchange == null ? 0 : System.hashCode(assetIdBaseExchange));
        hashCode = (17 * hashCode) + (assetIdQuoteExchange == null ? 0 : System.hashCode(assetIdQuoteExchange));
        hashCode = (17 * hashCode) + (assetIdBase == null ? 0 : System.hashCode(assetIdBase));
        hashCode = (17 * hashCode) + (assetIdQuote == null ? 0 : System.hashCode(assetIdQuote));
        hashCode = (17 * hashCode) + (pricePrecision == null ? 0 : System.hashCode(pricePrecision));
        hashCode = (17 * hashCode) + (sizePrecision == null ? 0 : System.hashCode(sizePrecision));
        return hashCode;
    }
}

