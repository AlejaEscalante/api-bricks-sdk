<?php
/**
 * MetricsV1ApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CoinAPI Market Data REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MetricsV1ApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MetricsV1ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for v1MetricsAssetCurrentGet
     *
     * Current metrics for given asset.
     *
     */
    public function testV1MetricsAssetCurrentGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsAssetHistoryGet
     *
     * Historical metrics for asset.
     *
     */
    public function testV1MetricsAssetHistoryGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsAssetListingGet
     *
     * Listing of all supported metrics for asset.
     *
     */
    public function testV1MetricsAssetListingGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsExchangeCurrentGet
     *
     * Current metrics for given exchange.
     *
     */
    public function testV1MetricsExchangeCurrentGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsExchangeHistoryGet
     *
     * Historical metrics for the exchange.
     *
     */
    public function testV1MetricsExchangeHistoryGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsExchangeListingGet
     *
     * Listing of all supported exchange metrics.
     *
     */
    public function testV1MetricsExchangeListingGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsListingGet
     *
     * Listing of all supported metrics by CoinAPI.
     *
     */
    public function testV1MetricsListingGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsSymbolCurrentGet
     *
     * Current metrics for given symbol.
     *
     */
    public function testV1MetricsSymbolCurrentGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsSymbolHistoryGet
     *
     * Historical metrics for symbol.
     *
     */
    public function testV1MetricsSymbolHistoryGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1MetricsSymbolListingGet
     *
     * Listing of all supported metrics for symbol.
     *
     */
    public function testV1MetricsSymbolListingGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
