<?php
/**
 * MetadataApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CoinAPI Market Data REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.16.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MetadataApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MetadataApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for v1AssetsAssetIdGet
     *
     * List all assets by asset ID.
     *
     */
    public function testV1AssetsAssetIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1AssetsGet
     *
     * List all assets.
     *
     */
    public function testV1AssetsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1AssetsIconsSizeGet
     *
     * List all asset icons.
     *
     */
    public function testV1AssetsIconsSizeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ChainsChainIdGet
     *
     * List all chains by chain ID.
     *
     */
    public function testV1ChainsChainIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ChainsGet
     *
     * List all blockchain chains.
     *
     */
    public function testV1ChainsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ExchangesExchangeIdGet
     *
     * List all exchanges by exchange_id.
     *
     */
    public function testV1ExchangesExchangeIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ExchangesGet
     *
     * List all exchanges.
     *
     */
    public function testV1ExchangesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ExchangesIconsSizeGet
     *
     * List of icons for the exchanges.
     *
     */
    public function testV1ExchangesIconsSizeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1SymbolsExchangeIdActiveGet
     *
     * List all active symbols.
     *
     */
    public function testV1SymbolsExchangeIdActiveGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1SymbolsExchangeIdHistoryGet
     *
     * List all historical symbols for an exchange..
     *
     */
    public function testV1SymbolsExchangeIdHistoryGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1SymbolsMapExchangeIdGet
     *
     * List active symbol mapping for the exchange.
     *
     */
    public function testV1SymbolsMapExchangeIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
