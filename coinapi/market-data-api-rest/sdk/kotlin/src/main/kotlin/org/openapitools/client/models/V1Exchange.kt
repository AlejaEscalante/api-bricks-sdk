/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.V1Icon

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents an exchange.
 *
 * @param exchangeId Gets or sets the exchange ID.
 * @param website Gets or sets the website URL of the exchange.
 * @param name Gets or sets the name of the exchange.
 * @param dataStart 
 * @param dataEnd 
 * @param dataQuoteStart Gets or sets the start date of quote data.
 * @param dataQuoteEnd Gets or sets the end date of quote data.
 * @param dataOrderbookStart Gets or sets the start date of order book data.
 * @param dataOrderbookEnd Gets or sets the end date of order book data.
 * @param dataTradeStart Gets or sets the start date of trade data.
 * @param dataTradeEnd Gets or sets the end date of trade data.
 * @param dataTradeCount Gets or sets the number of trades.
 * @param dataSymbolsCount Gets or sets the number of symbols.
 * @param volume1hrsUsd Gets or sets the USD volume in the last 1 hour.
 * @param volume1dayUsd Gets or sets the USD volume in the last 1 day.
 * @param volume1mthUsd Gets or sets the USD volume in the last 1 month.
 * @param metricId Gets or sets the list of metric IDs.
 * @param icons Gets or sets the list of icons for the exchange.
 * @param rank Rank of the exchange.
 * @param integrationStatus Status of the integration
 */


data class V1Exchange (

    /* Gets or sets the exchange ID. */
    @Json(name = "exchange_id")
    val exchangeId: kotlin.String? = null,

    /* Gets or sets the website URL of the exchange. */
    @Json(name = "website")
    val website: kotlin.String? = null,

    /* Gets or sets the name of the exchange. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "data_start")
    val dataStart: kotlin.String? = null,

    @Json(name = "data_end")
    val dataEnd: kotlin.String? = null,

    /* Gets or sets the start date of quote data. */
    @Json(name = "data_quote_start")
    val dataQuoteStart: java.time.OffsetDateTime? = null,

    /* Gets or sets the end date of quote data. */
    @Json(name = "data_quote_end")
    val dataQuoteEnd: java.time.OffsetDateTime? = null,

    /* Gets or sets the start date of order book data. */
    @Json(name = "data_orderbook_start")
    val dataOrderbookStart: java.time.OffsetDateTime? = null,

    /* Gets or sets the end date of order book data. */
    @Json(name = "data_orderbook_end")
    val dataOrderbookEnd: java.time.OffsetDateTime? = null,

    /* Gets or sets the start date of trade data. */
    @Json(name = "data_trade_start")
    val dataTradeStart: java.time.OffsetDateTime? = null,

    /* Gets or sets the end date of trade data. */
    @Json(name = "data_trade_end")
    val dataTradeEnd: java.time.OffsetDateTime? = null,

    /* Gets or sets the number of trades. */
    @Json(name = "data_trade_count")
    val dataTradeCount: kotlin.Long? = null,

    /* Gets or sets the number of symbols. */
    @Json(name = "data_symbols_count")
    val dataSymbolsCount: kotlin.Long? = null,

    /* Gets or sets the USD volume in the last 1 hour. */
    @Json(name = "volume_1hrs_usd")
    val volume1hrsUsd: kotlin.Double? = null,

    /* Gets or sets the USD volume in the last 1 day. */
    @Json(name = "volume_1day_usd")
    val volume1dayUsd: kotlin.Double? = null,

    /* Gets or sets the USD volume in the last 1 month. */
    @Json(name = "volume_1mth_usd")
    val volume1mthUsd: kotlin.Double? = null,

    /* Gets or sets the list of metric IDs. */
    @Json(name = "metric_id")
    val metricId: kotlin.collections.List<kotlin.String>? = null,

    /* Gets or sets the list of icons for the exchange. */
    @Json(name = "icons")
    val icons: kotlin.collections.List<V1Icon>? = null,

    /* Rank of the exchange. */
    @Json(name = "rank")
    val rank: kotlin.Double? = null,

    /* Status of the integration */
    @Json(name = "integration_status")
    val integrationStatus: kotlin.String? = null

) {


}

