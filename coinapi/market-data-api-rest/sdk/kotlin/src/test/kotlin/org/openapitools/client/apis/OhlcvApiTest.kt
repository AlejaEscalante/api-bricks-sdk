/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.OhlcvApi
import org.openapitools.client.models.ModelsExchangeTimeseriesItem
import org.openapitools.client.models.V1TimeseriesItem
import org.openapitools.client.models.V1TimeseriesPeriod

class OhlcvApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OhlcvApi
        //val apiInstance = OhlcvApi()

        // to test v1OhlcvExchangesExchangeIdHistoryGet
        should("test v1OhlcvExchangesExchangeIdHistoryGet") {
            // uncomment below to test v1OhlcvExchangesExchangeIdHistoryGet
            //val exchangeId : kotlin.String = exchangeId_example // kotlin.String | Exchange identifier of requested timeseries (from the Metadata -> Exchanges)
            //val periodId : kotlin.String = periodId_example // kotlin.String | Identifier of requested timeseries period (e.g. `5SEC` or `1DAY`)
            //val timeStart : kotlin.String = timeStart_example // kotlin.String | Timeseries starting time in ISO 8601
            //val timeEnd : kotlin.String = timeEnd_example // kotlin.String | Timeseries ending time in ISO 8601
            //val result : kotlin.collections.List<ModelsExchangeTimeseriesItem> = apiInstance.v1OhlcvExchangesExchangeIdHistoryGet(exchangeId, periodId, timeStart, timeEnd)
            //result shouldBe ("TODO")
        }

        // to test v1OhlcvPeriodsGet
        should("test v1OhlcvPeriodsGet") {
            // uncomment below to test v1OhlcvPeriodsGet
            //val result : kotlin.collections.List<V1TimeseriesPeriod> = apiInstance.v1OhlcvPeriodsGet()
            //result shouldBe ("TODO")
        }

        // to test v1OhlcvSymbolIdHistoryGet
        should("test v1OhlcvSymbolIdHistoryGet") {
            // uncomment below to test v1OhlcvSymbolIdHistoryGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | Symbol identifier of requested timeseries (from the Metadata -> Symbols)
            //val periodId : kotlin.String = periodId_example // kotlin.String | Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`)
            //val timeStart : kotlin.String = timeStart_example // kotlin.String | Timeseries starting time in ISO 8601
            //val timeEnd : kotlin.String = timeEnd_example // kotlin.String | Timeseries ending time in ISO 8601
            //val limit : kotlin.Int = 56 // kotlin.Int | Amount of items to return (mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
            //val result : kotlin.collections.List<V1TimeseriesItem> = apiInstance.v1OhlcvSymbolIdHistoryGet(symbolId, periodId, timeStart, timeEnd, limit)
            //result shouldBe ("TODO")
        }

        // to test v1OhlcvSymbolIdLatestGet
        should("test v1OhlcvSymbolIdLatestGet") {
            // uncomment below to test v1OhlcvSymbolIdLatestGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | Symbol identifier of requested timeseries (from the Metadata -> Symbols)
            //val periodId : kotlin.String = periodId_example // kotlin.String | Identifier of requested timeseries period (e.g. `5SEC` or `2MTH`)
            //val limit : kotlin.Int = 56 // kotlin.Int | Amount of items to return (mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
            //val includeEmptyItems : kotlin.Boolean = true // kotlin.Boolean | 
            //val result : kotlin.collections.List<V1TimeseriesItem> = apiInstance.v1OhlcvSymbolIdLatestGet(symbolId, periodId, limit, includeEmptyItems)
            //result shouldBe ("TODO")
        }

    }
}
