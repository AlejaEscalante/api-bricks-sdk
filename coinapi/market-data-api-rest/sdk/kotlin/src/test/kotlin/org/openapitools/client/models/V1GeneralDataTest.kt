/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.V1GeneralData

class V1GeneralDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of V1GeneralData
        //val modelInstance = V1GeneralData()

        // to test the property `entryTime` - Gets or sets the entry time for the data point.
        should("test entryTime") {
            // uncomment below to test the property
            //modelInstance.entryTime shouldBe ("TODO")
        }

        // to test the property `recvTime` - Gets or sets the received time for the data point.
        should("test recvTime") {
            // uncomment below to test the property
            //modelInstance.recvTime shouldBe ("TODO")
        }

        // to test the property `exchangeId` - Gets or sets the identifier for the exchange.
        should("test exchangeId") {
            // uncomment below to test the property
            //modelInstance.exchangeId shouldBe ("TODO")
        }

        // to test the property `assetId` - Gets or sets the identifier for the asset.
        should("test assetId") {
            // uncomment below to test the property
            //modelInstance.assetId shouldBe ("TODO")
        }

        // to test the property `symbolId` - Gets or sets the identifier for the symbol.
        should("test symbolId") {
            // uncomment below to test the property
            //modelInstance.symbolId shouldBe ("TODO")
        }

        // to test the property `metricId` - Gets or sets the identifier for the metric.
        should("test metricId") {
            // uncomment below to test the property
            //modelInstance.metricId shouldBe ("TODO")
        }

        // to test the property `valueDecimal` - Gets or sets the decimal value for the metric.
        should("test valueDecimal") {
            // uncomment below to test the property
            //modelInstance.valueDecimal shouldBe ("TODO")
        }

        // to test the property `valueText` - Gets or sets the textual representation of the value for the metric.
        should("test valueText") {
            // uncomment below to test the property
            //modelInstance.valueText shouldBe ("TODO")
        }

        // to test the property `valueTime` - Gets or sets the timestamp value for the metric.
        should("test valueTime") {
            // uncomment below to test the property
            //modelInstance.valueTime shouldBe ("TODO")
        }

    }
}
