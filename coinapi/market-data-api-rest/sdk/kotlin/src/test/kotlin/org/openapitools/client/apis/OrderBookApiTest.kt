/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.OrderBookApi
import org.openapitools.client.models.V1OrderBook
import org.openapitools.client.models.V1OrderBookBase
import org.openapitools.client.models.V1OrderBookDepth

class OrderBookApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderBookApi
        //val apiInstance = OrderBookApi()

        // to test v1OrderbooksSymbolIdCurrentGet
        should("test v1OrderbooksSymbolIdCurrentGet") {
            // uncomment below to test v1OrderbooksSymbolIdCurrentGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | The symbol ID (from the Metadata -> Symbols)
            //val limitLevels : kotlin.Int = 56 // kotlin.Int | The maximum number of levels to include in the response.
            //val result : V1OrderBookBase = apiInstance.v1OrderbooksSymbolIdCurrentGet(symbolId, limitLevels)
            //result shouldBe ("TODO")
        }

        // to test v1OrderbooksSymbolIdDepthCurrentGet
        should("test v1OrderbooksSymbolIdDepthCurrentGet") {
            // uncomment below to test v1OrderbooksSymbolIdDepthCurrentGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | The symbol ID (from the Metadata -> Symbols)
            //val limitLevels : kotlin.Int = 56 // kotlin.Int | The maximum number of levels to include in the response.
            //val result : V1OrderBookDepth = apiInstance.v1OrderbooksSymbolIdDepthCurrentGet(symbolId, limitLevels)
            //result shouldBe ("TODO")
        }

        // to test v1OrderbooksSymbolIdHistoryGet
        should("test v1OrderbooksSymbolIdHistoryGet") {
            // uncomment below to test v1OrderbooksSymbolIdHistoryGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | Symbol identifier for requested timeseries (from the Metadata -> Symbols)
            //val date : kotlin.String = date_example // kotlin.String | Date in ISO 8601, returned data is for the whole given day (preferred method, required if 'time_start' is not provided)
            //val timeStart : kotlin.String = timeStart_example // kotlin.String | Starting time in ISO 8601 (deprecated, use 'date' instead)
            //val timeEnd : kotlin.String = timeEnd_example // kotlin.String | Timeseries ending time in ISO 8601 (deprecated, use 'date' instead)
            //val limit : kotlin.Int = 56 // kotlin.Int | Amount of items to return (optional, minimum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
            //val limitLevels : kotlin.Int = 56 // kotlin.Int | Maximum amount of levels from each side of the book to include in response (optional)
            //val result : kotlin.collections.List<V1OrderBook> = apiInstance.v1OrderbooksSymbolIdHistoryGet(symbolId, date, timeStart, timeEnd, limit, limitLevels)
            //result shouldBe ("TODO")
        }

        // to test v1OrderbooksSymbolIdLatestGet
        should("test v1OrderbooksSymbolIdLatestGet") {
            // uncomment below to test v1OrderbooksSymbolIdLatestGet
            //val symbolId : kotlin.String = symbolId_example // kotlin.String | Symbol identifier of requested timeseries (from the Metadata -> Symbols)
            //val limit : kotlin.Int = 56 // kotlin.Int | Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)
            //val limitLevels : kotlin.Int = 56 // kotlin.Int | Maximum amount of levels from each side of the book to include in response (optional)
            //val result : kotlin.collections.List<V1OrderBook> = apiInstance.v1OrderbooksSymbolIdLatestGet(symbolId, limit, limitLevels)
            //result shouldBe ("TODO")
        }

    }
}
