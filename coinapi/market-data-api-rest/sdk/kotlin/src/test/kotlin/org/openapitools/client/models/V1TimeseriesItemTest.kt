/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.V1TimeseriesItem

class V1TimeseriesItemTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of V1TimeseriesItem
        //val modelInstance = V1TimeseriesItem()

        // to test the property `timePeriodStart` - The start time of the time period.
        should("test timePeriodStart") {
            // uncomment below to test the property
            //modelInstance.timePeriodStart shouldBe ("TODO")
        }

        // to test the property `timePeriodEnd` - The end time of the time period.
        should("test timePeriodEnd") {
            // uncomment below to test the property
            //modelInstance.timePeriodEnd shouldBe ("TODO")
        }

        // to test the property `timeOpen` - The time when the price opened.
        should("test timeOpen") {
            // uncomment below to test the property
            //modelInstance.timeOpen shouldBe ("TODO")
        }

        // to test the property `timeClose` - The time when the price closed.
        should("test timeClose") {
            // uncomment below to test the property
            //modelInstance.timeClose shouldBe ("TODO")
        }

        // to test the property `priceOpen` - The opening price.
        should("test priceOpen") {
            // uncomment below to test the property
            //modelInstance.priceOpen shouldBe ("TODO")
        }

        // to test the property `priceHigh` - The highest price during the time period.
        should("test priceHigh") {
            // uncomment below to test the property
            //modelInstance.priceHigh shouldBe ("TODO")
        }

        // to test the property `priceLow` - The lowest price during the time period.
        should("test priceLow") {
            // uncomment below to test the property
            //modelInstance.priceLow shouldBe ("TODO")
        }

        // to test the property `priceClose` - The closing price.
        should("test priceClose") {
            // uncomment below to test the property
            //modelInstance.priceClose shouldBe ("TODO")
        }

        // to test the property `volumeTraded` - The total volume traded during the time period. This could be zero if there was not transactions and there was only orderbook activity.
        should("test volumeTraded") {
            // uncomment below to test the property
            //modelInstance.volumeTraded shouldBe ("TODO")
        }

        // to test the property `tradesCount` - The number of trades executed during the time period. This could be zero if there was not transactions and there was only orderbook activity.
        should("test tradesCount") {
            // uncomment below to test the property
            //modelInstance.tradesCount shouldBe ("TODO")
        }

    }
}
