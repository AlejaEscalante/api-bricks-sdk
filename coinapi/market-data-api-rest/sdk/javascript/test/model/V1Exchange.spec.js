/**
 * CoinAPI Market Data REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoinApiMarketDataRestApi);
  }
}(this, function(expect, CoinApiMarketDataRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoinApiMarketDataRestApi.V1Exchange();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('V1Exchange', function() {
    it('should create an instance of V1Exchange', function() {
      // uncomment below and update the code to test V1Exchange
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be.a(CoinApiMarketDataRestApi.V1Exchange);
    });

    it('should have the property exchangeId (base name: "exchange_id")', function() {
      // uncomment below and update the code to test the property exchangeId
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataStart (base name: "data_start")', function() {
      // uncomment below and update the code to test the property dataStart
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataEnd (base name: "data_end")', function() {
      // uncomment below and update the code to test the property dataEnd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataQuoteStart (base name: "data_quote_start")', function() {
      // uncomment below and update the code to test the property dataQuoteStart
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataQuoteEnd (base name: "data_quote_end")', function() {
      // uncomment below and update the code to test the property dataQuoteEnd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataOrderbookStart (base name: "data_orderbook_start")', function() {
      // uncomment below and update the code to test the property dataOrderbookStart
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataOrderbookEnd (base name: "data_orderbook_end")', function() {
      // uncomment below and update the code to test the property dataOrderbookEnd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataTradeStart (base name: "data_trade_start")', function() {
      // uncomment below and update the code to test the property dataTradeStart
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataTradeEnd (base name: "data_trade_end")', function() {
      // uncomment below and update the code to test the property dataTradeEnd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataTradeCount (base name: "data_trade_count")', function() {
      // uncomment below and update the code to test the property dataTradeCount
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property dataSymbolsCount (base name: "data_symbols_count")', function() {
      // uncomment below and update the code to test the property dataSymbolsCount
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property volume1hrsUsd (base name: "volume_1hrs_usd")', function() {
      // uncomment below and update the code to test the property volume1hrsUsd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property volume1dayUsd (base name: "volume_1day_usd")', function() {
      // uncomment below and update the code to test the property volume1dayUsd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property volume1mthUsd (base name: "volume_1mth_usd")', function() {
      // uncomment below and update the code to test the property volume1mthUsd
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property metricId (base name: "metric_id")', function() {
      // uncomment below and update the code to test the property metricId
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property icons (base name: "icons")', function() {
      // uncomment below and update the code to test the property icons
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property rank (base name: "rank")', function() {
      // uncomment below and update the code to test the property rank
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

    it('should have the property integrationStatus (base name: "integration_status")', function() {
      // uncomment below and update the code to test the property integrationStatus
      //var instance = new CoinApiMarketDataRestApi.V1Exchange();
      //expect(instance).to.be();
    });

  });

}));
