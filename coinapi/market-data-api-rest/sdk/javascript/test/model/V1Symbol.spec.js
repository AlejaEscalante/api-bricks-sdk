/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RestApi);
  }
}(this, function(expect, RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RestApi.V1Symbol();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('V1Symbol', function() {
    it('should create an instance of V1Symbol', function() {
      // uncomment below and update the code to test V1Symbol
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be.a(RestApi.V1Symbol);
    });

    it('should have the property symbolId (base name: "symbol_id")', function() {
      // uncomment below and update the code to test the property symbolId
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property exchangeId (base name: "exchange_id")', function() {
      // uncomment below and update the code to test the property exchangeId
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property symbolType (base name: "symbol_type")', function() {
      // uncomment below and update the code to test the property symbolType
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property assetIdBase (base name: "asset_id_base")', function() {
      // uncomment below and update the code to test the property assetIdBase
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property assetIdQuote (base name: "asset_id_quote")', function() {
      // uncomment below and update the code to test the property assetIdQuote
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property assetIdUnit (base name: "asset_id_unit")', function() {
      // uncomment below and update the code to test the property assetIdUnit
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property futureContractUnit (base name: "future_contract_unit")', function() {
      // uncomment below and update the code to test the property futureContractUnit
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property futureContractUnitAsset (base name: "future_contract_unit_asset")', function() {
      // uncomment below and update the code to test the property futureContractUnitAsset
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property futureDeliveryTime (base name: "future_delivery_time")', function() {
      // uncomment below and update the code to test the property futureDeliveryTime
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property optionTypeIsCall (base name: "option_type_is_call")', function() {
      // uncomment below and update the code to test the property optionTypeIsCall
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property optionStrikePrice (base name: "option_strike_price")', function() {
      // uncomment below and update the code to test the property optionStrikePrice
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property optionContractUnit (base name: "option_contract_unit")', function() {
      // uncomment below and update the code to test the property optionContractUnit
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property optionExerciseStyle (base name: "option_exercise_style")', function() {
      // uncomment below and update the code to test the property optionExerciseStyle
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property optionExpirationTime (base name: "option_expiration_time")', function() {
      // uncomment below and update the code to test the property optionExpirationTime
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractDeliveryTime (base name: "contract_delivery_time")', function() {
      // uncomment below and update the code to test the property contractDeliveryTime
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractUnit (base name: "contract_unit")', function() {
      // uncomment below and update the code to test the property contractUnit
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractUnitAsset (base name: "contract_unit_asset")', function() {
      // uncomment below and update the code to test the property contractUnitAsset
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contract_id")', function() {
      // uncomment below and update the code to test the property contractId
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractDisplayName (base name: "contract_display_name")', function() {
      // uncomment below and update the code to test the property contractDisplayName
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property contractDisplayDescription (base name: "contract_display_description")', function() {
      // uncomment below and update the code to test the property contractDisplayDescription
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataStart (base name: "data_start")', function() {
      // uncomment below and update the code to test the property dataStart
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataEnd (base name: "data_end")', function() {
      // uncomment below and update the code to test the property dataEnd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataQuoteStart (base name: "data_quote_start")', function() {
      // uncomment below and update the code to test the property dataQuoteStart
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataQuoteEnd (base name: "data_quote_end")', function() {
      // uncomment below and update the code to test the property dataQuoteEnd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataOrderbookStart (base name: "data_orderbook_start")', function() {
      // uncomment below and update the code to test the property dataOrderbookStart
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataOrderbookEnd (base name: "data_orderbook_end")', function() {
      // uncomment below and update the code to test the property dataOrderbookEnd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataTradeStart (base name: "data_trade_start")', function() {
      // uncomment below and update the code to test the property dataTradeStart
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property dataTradeEnd (base name: "data_trade_end")', function() {
      // uncomment below and update the code to test the property dataTradeEnd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property indexId (base name: "index_id")', function() {
      // uncomment below and update the code to test the property indexId
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property indexDisplayName (base name: "index_display_name")', function() {
      // uncomment below and update the code to test the property indexDisplayName
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property indexDisplayDescription (base name: "index_display_description")', function() {
      // uncomment below and update the code to test the property indexDisplayDescription
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1hrs (base name: "volume_1hrs")', function() {
      // uncomment below and update the code to test the property volume1hrs
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1hrsUsd (base name: "volume_1hrs_usd")', function() {
      // uncomment below and update the code to test the property volume1hrsUsd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1day (base name: "volume_1day")', function() {
      // uncomment below and update the code to test the property volume1day
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1dayUsd (base name: "volume_1day_usd")', function() {
      // uncomment below and update the code to test the property volume1dayUsd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1mth (base name: "volume_1mth")', function() {
      // uncomment below and update the code to test the property volume1mth
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volume1mthUsd (base name: "volume_1mth_usd")', function() {
      // uncomment below and update the code to test the property volume1mthUsd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property symbolIdExchange (base name: "symbol_id_exchange")', function() {
      // uncomment below and update the code to test the property symbolIdExchange
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property assetIdBaseExchange (base name: "asset_id_base_exchange")', function() {
      // uncomment below and update the code to test the property assetIdBaseExchange
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property assetIdQuoteExchange (base name: "asset_id_quote_exchange")', function() {
      // uncomment below and update the code to test the property assetIdQuoteExchange
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property pricePrecision (base name: "price_precision")', function() {
      // uncomment below and update the code to test the property pricePrecision
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property sizePrecision (base name: "size_precision")', function() {
      // uncomment below and update the code to test the property sizePrecision
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property rawKvp (base name: "raw_kvp")', function() {
      // uncomment below and update the code to test the property rawKvp
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

    it('should have the property volumeToUsd (base name: "volume_to_usd")', function() {
      // uncomment below and update the code to test the property volumeToUsd
      //var instance = new RestApi.V1Symbol();
      //expect(instance).to.be();
    });

  });

}));
