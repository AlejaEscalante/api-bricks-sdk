/*
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: support@apibricks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.V1OrderBookBase;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrderBookL3Api {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OrderBookL3Api() {
        this(Configuration.getDefaultApiClient());
    }

    public OrderBookL3Api(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v1Orderbooks3CurrentGet
     * @param filterSymbolId Comma or semicolon delimited parts of symbol identifier used to filter the response. (optional)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1Orderbooks3CurrentGetCall(@javax.annotation.Nullable String filterSymbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/orderbooks3/current";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (filterSymbolId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_symbol_id", filterSymbolId));
        }

        if (limitLevels != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit_levels", limitLevels));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json",
            "application/x-msgpack"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1Orderbooks3CurrentGetValidateBeforeCall(@javax.annotation.Nullable String filterSymbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback _callback) throws ApiException {
        return v1Orderbooks3CurrentGetCall(filterSymbolId, limitLevels, _callback);

    }

    /**
     * Current order books
     * 
     * @param filterSymbolId Comma or semicolon delimited parts of symbol identifier used to filter the response. (optional)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @return List&lt;V1OrderBookBase&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public List<V1OrderBookBase> v1Orderbooks3CurrentGet(@javax.annotation.Nullable String filterSymbolId, @javax.annotation.Nullable Integer limitLevels) throws ApiException {
        ApiResponse<List<V1OrderBookBase>> localVarResp = v1Orderbooks3CurrentGetWithHttpInfo(filterSymbolId, limitLevels);
        return localVarResp.getData();
    }

    /**
     * Current order books
     * 
     * @param filterSymbolId Comma or semicolon delimited parts of symbol identifier used to filter the response. (optional)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @return ApiResponse&lt;List&lt;V1OrderBookBase&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<V1OrderBookBase>> v1Orderbooks3CurrentGetWithHttpInfo(@javax.annotation.Nullable String filterSymbolId, @javax.annotation.Nullable Integer limitLevels) throws ApiException {
        okhttp3.Call localVarCall = v1Orderbooks3CurrentGetValidateBeforeCall(filterSymbolId, limitLevels, null);
        Type localVarReturnType = new TypeToken<List<V1OrderBookBase>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Current order books (asynchronously)
     * 
     * @param filterSymbolId Comma or semicolon delimited parts of symbol identifier used to filter the response. (optional)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1Orderbooks3CurrentGetAsync(@javax.annotation.Nullable String filterSymbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback<List<V1OrderBookBase>> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1Orderbooks3CurrentGetValidateBeforeCall(filterSymbolId, limitLevels, _callback);
        Type localVarReturnType = new TypeToken<List<V1OrderBookBase>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v1Orderbooks3SymbolIdCurrentGet
     * @param symbolId The symbol ID (from the Metadata -&gt; Symbols) (required)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1Orderbooks3SymbolIdCurrentGetCall(@javax.annotation.Nonnull String symbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/orderbooks3/{symbol_id}/current"
            .replace("{" + "symbol_id" + "}", localVarApiClient.escapeString(symbolId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limitLevels != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit_levels", limitLevels));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json",
            "application/x-msgpack"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1Orderbooks3SymbolIdCurrentGetValidateBeforeCall(@javax.annotation.Nonnull String symbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbolId' is set
        if (symbolId == null) {
            throw new ApiException("Missing the required parameter 'symbolId' when calling v1Orderbooks3SymbolIdCurrentGet(Async)");
        }

        return v1Orderbooks3SymbolIdCurrentGetCall(symbolId, limitLevels, _callback);

    }

    /**
     * Current order book by symbol_id
     * Retrieves the current order book for the specified symbol.
     * @param symbolId The symbol ID (from the Metadata -&gt; Symbols) (required)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @return V1OrderBookBase
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public V1OrderBookBase v1Orderbooks3SymbolIdCurrentGet(@javax.annotation.Nonnull String symbolId, @javax.annotation.Nullable Integer limitLevels) throws ApiException {
        ApiResponse<V1OrderBookBase> localVarResp = v1Orderbooks3SymbolIdCurrentGetWithHttpInfo(symbolId, limitLevels);
        return localVarResp.getData();
    }

    /**
     * Current order book by symbol_id
     * Retrieves the current order book for the specified symbol.
     * @param symbolId The symbol ID (from the Metadata -&gt; Symbols) (required)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @return ApiResponse&lt;V1OrderBookBase&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<V1OrderBookBase> v1Orderbooks3SymbolIdCurrentGetWithHttpInfo(@javax.annotation.Nonnull String symbolId, @javax.annotation.Nullable Integer limitLevels) throws ApiException {
        okhttp3.Call localVarCall = v1Orderbooks3SymbolIdCurrentGetValidateBeforeCall(symbolId, limitLevels, null);
        Type localVarReturnType = new TypeToken<V1OrderBookBase>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Current order book by symbol_id (asynchronously)
     * Retrieves the current order book for the specified symbol.
     * @param symbolId The symbol ID (from the Metadata -&gt; Symbols) (required)
     * @param limitLevels The maximum number of levels to include in the response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1Orderbooks3SymbolIdCurrentGetAsync(@javax.annotation.Nonnull String symbolId, @javax.annotation.Nullable Integer limitLevels, final ApiCallback<V1OrderBookBase> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1Orderbooks3SymbolIdCurrentGetValidateBeforeCall(symbolId, limitLevels, _callback);
        Type localVarReturnType = new TypeToken<V1OrderBookBase>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
