--  CoinAPI Market Data REST API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: v1
--  Contact: support@apibricks.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.15.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");



   type ModelsExchangeTimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Price_Open : Swagger.Number;
       Price_High : Swagger.Number;
       Price_Low : Swagger.Number;
       Price_Close : Swagger.Number;
       Volume_Traded : Swagger.Number;
       Trades_Count : Swagger.Nullable_Long;
       Symbol_Id_Exchange : Swagger.Nullable_UString;
       Symbol_Id_Coinapi : Swagger.Nullable_UString;
     end record;


   package ModelsExchangeTimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ModelsExchangeTimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ModelsExchangeTimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ModelsExchangeTimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ModelsExchangeTimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ModelsExchangeTimeseriesItem_Type_Vectors.Vector);



   type V1ChainNetworkAddress_Type is
     record
       Chain_Id : Swagger.Nullable_UString;
       Network_Id : Swagger.Nullable_UString;
       Address : Swagger.Nullable_UString;
     end record;


   package V1ChainNetworkAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ChainNetworkAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ChainNetworkAddress_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ChainNetworkAddress_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ChainNetworkAddress_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ChainNetworkAddress_Type_Vectors.Vector);



   type V1Chain_Type is
     record
       Chain_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
     end record;


   package V1Chain_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Chain_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Chain_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Chain_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Chain_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Chain_Type_Vectors.Vector);



   type V1ExchangeRate_Type is
     record
       Time : Swagger.Nullable_Date;
       Asset_Id_Base : Swagger.Nullable_UString;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Rate : Swagger.Number;
     end record;


   package V1ExchangeRate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRate_Type_Vectors.Vector);



   type V1ExchangeRatesRate_Type is
     record
       Time : Swagger.Nullable_Date;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Rate : Swagger.Number;
     end record;


   package V1ExchangeRatesRate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRatesRate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRatesRate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRatesRate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRatesRate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRatesRate_Type_Vectors.Vector);



   type V1ExchangeRatesTimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Rate_Open : Swagger.Number;
       Rate_High : Swagger.Number;
       Rate_Low : Swagger.Number;
       Rate_Close : Swagger.Number;
     end record;


   package V1ExchangeRatesTimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRatesTimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRatesTimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRatesTimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRatesTimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRatesTimeseriesItem_Type_Vectors.Vector);



   type V1GeneralData_Type is
     record
       Entry_Time : Swagger.Nullable_Date;
       Recv_Time : Swagger.Nullable_Date;
       Exchange_Id : Swagger.Nullable_UString;
       Asset_Id : Swagger.Nullable_UString;
       Symbol_Id : Swagger.Nullable_UString;
       Metric_Id : Swagger.Nullable_UString;
       Value_Decimal : Swagger.Number;
       Value_Text : Swagger.Nullable_UString;
       Value_Time : Swagger.Nullable_Date;
     end record;


   package V1GeneralData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1GeneralData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1GeneralData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1GeneralData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1GeneralData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1GeneralData_Type_Vectors.Vector);



   type V1Icon_Type is
     record
       Exchange_Id : Swagger.Nullable_UString;
       Asset_Id : Swagger.Nullable_UString;
       Url : Swagger.Nullable_UString;
     end record;


   package V1Icon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Icon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Icon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Icon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Icon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Icon_Type_Vectors.Vector);



   type V1LastTrade_Type is
     record
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Uuid : Swagger.Nullable_UString;
       Price : Swagger.Number;
       Size : Swagger.Number;
       Taker_Side : Swagger.Nullable_UString;
     end record;


   package V1LastTrade_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1LastTrade_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1LastTrade_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1LastTrade_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1LastTrade_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1LastTrade_Type_Vectors.Vector);



   type V1ListingItem_Type is
     record
       Metric_Id : Swagger.Nullable_UString;
       Symbol_Id : Swagger.Nullable_UString;
       Symbol_Id_External : Swagger.Nullable_UString;
       Exchange_Id : Swagger.Nullable_UString;
       Asset_Id : Swagger.Nullable_UString;
       Asset_Id_External : Swagger.Nullable_UString;
       Chain_Id : Swagger.Nullable_UString;
       Network_Id : Swagger.Nullable_UString;
     end record;


   package V1ListingItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ListingItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ListingItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ListingItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ListingItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ListingItem_Type_Vectors.Vector);



   type V1MetricData_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time : Swagger.Nullable_Date;
       Value : Swagger.Number;
     end record;


   package V1MetricData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1MetricData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1MetricData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1MetricData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1MetricData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1MetricData_Type_Vectors.Vector);



   type V1MetricInfo_Type is
     record
       Metric_Id : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Source_Id : Swagger.Nullable_UString;
     end record;


   package V1MetricInfo_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1MetricInfo_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1MetricInfo_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1MetricInfo_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1MetricInfo_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1MetricInfo_Type_Vectors.Vector);



   type V1Metric_Type is
     record
       Metric_Id : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
     end record;


   package V1Metric_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Metric_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Metric_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Metric_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Metric_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Metric_Type_Vectors.Vector);



   type V1OrderBookDepth_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Ask_Levels : Swagger.Nullable_Long;
       Bid_Levels : Swagger.Nullable_Long;
       Ask_Depth : Swagger.Number;
       Bid_Depth : Swagger.Number;
     end record;


   package V1OrderBookDepth_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1OrderBookDepth_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1OrderBookDepth_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1OrderBookDepth_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1OrderBookDepth_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1OrderBookDepth_Type_Vectors.Vector);



   type V1Quote_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Ask_Price : Swagger.Number;
       Ask_Size : Swagger.Number;
       Bid_Price : Swagger.Number;
       Bid_Size : Swagger.Number;
     end record;


   package V1Quote_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Quote_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Quote_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Quote_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Quote_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Quote_Type_Vectors.Vector);



   type V1SymbolMapping_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Symbol_Id_Exchange : Swagger.Nullable_UString;
       Coinapi_Datainfo_Id : Swagger.Nullable_Integer;
       Asset_Id_Base_Exchange : Swagger.Nullable_UString;
       Asset_Id_Quote_Exchange : Swagger.Nullable_UString;
       Asset_Id_Base : Swagger.Nullable_UString;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Price_Precision : Swagger.Number;
       Size_Precision : Swagger.Number;
     end record;


   package V1SymbolMapping_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1SymbolMapping_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1SymbolMapping_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1SymbolMapping_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1SymbolMapping_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1SymbolMapping_Type_Vectors.Vector);



   type V1Symbol_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Exchange_Id : Swagger.Nullable_UString;
       Symbol_Type : Swagger.Nullable_UString;
       Asset_Id_Base : Swagger.Nullable_UString;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Asset_Id_Unit : Swagger.Nullable_UString;
       Future_Contract_Unit : Swagger.Number;
       Future_Contract_Unit_Asset : Swagger.Nullable_UString;
       Future_Delivery_Time : Swagger.Nullable_Date;
       Option_Type_Is_Call : Swagger.Nullable_Boolean;
       Option_Strike_Price : Swagger.Number;
       Option_Contract_Unit : Swagger.Number;
       Option_Exercise_Style : Swagger.Nullable_UString;
       Option_Expiration_Time : Swagger.Nullable_Date;
       Contract_Delivery_Time : Swagger.Nullable_Date;
       Contract_Unit : Swagger.Number;
       Contract_Unit_Asset : Swagger.Nullable_UString;
       Contract_Id : Swagger.Nullable_UString;
       Contract_Display_Name : Swagger.Nullable_UString;
       Contract_Display_Description : Swagger.Nullable_UString;
       Data_Start : Swagger.Nullable_UString;
       Data_End : Swagger.Nullable_UString;
       Data_Quote_Start : Swagger.Nullable_Date;
       Data_Quote_End : Swagger.Nullable_Date;
       Data_Orderbook_Start : Swagger.Nullable_Date;
       Data_Orderbook_End : Swagger.Nullable_Date;
       Data_Trade_Start : Swagger.Nullable_Date;
       Data_Trade_End : Swagger.Nullable_Date;
       Index_Id : Swagger.Nullable_UString;
       Index_Display_Name : Swagger.Nullable_UString;
       Index_Display_Description : Swagger.Nullable_UString;
       Volume_1hrs : Swagger.Number;
       Volume_1hrs_Usd : Swagger.Number;
       Volume_1day : Swagger.Number;
       Volume_1day_Usd : Swagger.Number;
       Volume_1mth : Swagger.Number;
       Volume_1mth_Usd : Swagger.Number;
       Price : Swagger.Number;
       Symbol_Id_Exchange : Swagger.Nullable_UString;
       Asset_Id_Base_Exchange : Swagger.Nullable_UString;
       Asset_Id_Quote_Exchange : Swagger.Nullable_UString;
       Price_Precision : Swagger.Number;
       Size_Precision : Swagger.Number;
       Raw_Kvp : Swagger.UString_Map;
       Volume_To_Usd : Swagger.Number;
     end record;


   package V1Symbol_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Symbol_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Symbol_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Symbol_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Symbol_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Symbol_Type_Vectors.Vector);



   type V1TimeseriesItem_Type is
     record
       Time_Period_Start : Swagger.Nullable_Date;
       Time_Period_End : Swagger.Nullable_Date;
       Time_Open : Swagger.Nullable_Date;
       Time_Close : Swagger.Nullable_Date;
       Price_Open : Swagger.Number;
       Price_High : Swagger.Number;
       Price_Low : Swagger.Number;
       Price_Close : Swagger.Number;
       Volume_Traded : Swagger.Number;
       Trades_Count : Swagger.Nullable_Long;
     end record;


   package V1TimeseriesItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1TimeseriesItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1TimeseriesItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1TimeseriesItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1TimeseriesItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1TimeseriesItem_Type_Vectors.Vector);



   type V1TimeseriesPeriod_Type is
     record
       Period_Id : Swagger.Nullable_UString;
       Length_Seconds : Swagger.Nullable_Integer;
       Length_Months : Swagger.Nullable_Integer;
       Unit_Count : Swagger.Nullable_Integer;
       Unit_Name : Swagger.Nullable_UString;
       Display_Name : Swagger.Nullable_UString;
     end record;


   package V1TimeseriesPeriod_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1TimeseriesPeriod_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1TimeseriesPeriod_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1TimeseriesPeriod_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1TimeseriesPeriod_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1TimeseriesPeriod_Type_Vectors.Vector);



   type V1Trade_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Uuid : Swagger.Nullable_UString;
       Price : Swagger.Number;
       Size : Swagger.Number;
       Taker_Side : Swagger.Nullable_UString;
       Id_Trade : Swagger.Nullable_UString;
       Id_Order_Maker : Swagger.Nullable_UString;
       Id_Order_Taker : Swagger.Nullable_UString;
     end record;


   package V1Trade_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Trade_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Trade_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Trade_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Trade_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Trade_Type_Vectors.Vector);



   type OptionsStrike_Type is
     record
       Strike_Price : Swagger.Number;
       Call : .Models.V1QuoteTrade_Type;
       Put : .Models.V1QuoteTrade_Type;
     end record;


   package OptionsStrike_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptionsStrike_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptionsStrike_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptionsStrike_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptionsStrike_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptionsStrike_Type_Vectors.Vector);



   type OptionsOptionExchangeGroup_Type is
     record
       Asset_Id_Base : Swagger.Nullable_UString;
       Asset_Id_Quote : Swagger.Nullable_UString;
       Underlying_Price : Swagger.Number;
       Time_Expiration : Swagger.Nullable_Date;
       Strikes : .Models.OptionsStrike_Type_Vectors.Vector;
     end record;


   package OptionsOptionExchangeGroup_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptionsOptionExchangeGroup_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptionsOptionExchangeGroup_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptionsOptionExchangeGroup_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptionsOptionExchangeGroup_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptionsOptionExchangeGroup_Type_Vectors.Vector);



   type V1Asset_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Type_Is_Crypto : Swagger.Nullable_Integer;
       Data_Quote_Start : Swagger.Nullable_Date;
       Data_Quote_End : Swagger.Nullable_Date;
       Data_Orderbook_Start : Swagger.Nullable_Date;
       Data_Orderbook_End : Swagger.Nullable_Date;
       Data_Trade_Start : Swagger.Nullable_Date;
       Data_Trade_End : Swagger.Nullable_Date;
       Data_Symbols_Count : Swagger.Nullable_Long;
       Volume_1hrs_Usd : Swagger.Number;
       Volume_1day_Usd : Swagger.Number;
       Volume_1mth_Usd : Swagger.Number;
       Price_Usd : Swagger.Number;
       Id_Icon : Swagger.Nullable_UString;
       Supply_Current : Swagger.Number;
       Supply_Total : Swagger.Number;
       Supply_Max : Swagger.Number;
       Chain_Addresses : .Models.V1ChainNetworkAddress_Type_Vectors.Vector;
       Data_Start : Swagger.Nullable_UString;
       Data_End : Swagger.Nullable_UString;
     end record;


   package V1Asset_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Asset_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Asset_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Asset_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Asset_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Asset_Type_Vectors.Vector);



   type V1ExchangeRates_Type is
     record
       Asset_Id_Base : Swagger.Nullable_UString;
       Rates : .Models.V1ExchangeRatesRate_Type_Vectors.Vector;
     end record;


   package V1ExchangeRates_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1ExchangeRates_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1ExchangeRates_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1ExchangeRates_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1ExchangeRates_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1ExchangeRates_Type_Vectors.Vector);



   type V1Exchange_Type is
     record
       Exchange_Id : Swagger.Nullable_UString;
       Website : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Data_Start : Swagger.Nullable_UString;
       Data_End : Swagger.Nullable_UString;
       Data_Quote_Start : Swagger.Nullable_Date;
       Data_Quote_End : Swagger.Nullable_Date;
       Data_Orderbook_Start : Swagger.Nullable_Date;
       Data_Orderbook_End : Swagger.Nullable_Date;
       Data_Trade_Start : Swagger.Nullable_Date;
       Data_Trade_End : Swagger.Nullable_Date;
       Data_Trade_Count : Swagger.Nullable_Long;
       Data_Symbols_Count : Swagger.Nullable_Long;
       Volume_1hrs_Usd : Swagger.Number;
       Volume_1day_Usd : Swagger.Number;
       Volume_1mth_Usd : Swagger.Number;
       Metric_Id : Swagger.UString_Vectors.Vector;
       Icons : .Models.V1Icon_Type_Vectors.Vector;
       Rank : Swagger.Number;
       Integration_Status : Swagger.Nullable_UString;
     end record;


   package V1Exchange_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1Exchange_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1Exchange_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1Exchange_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1Exchange_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1Exchange_Type_Vectors.Vector);



   type V1OrderBookBase_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Asks : .Models.AnyType_Type;
       Bids : .Models.AnyType_Type;
     end record;


   package V1OrderBookBase_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1OrderBookBase_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1OrderBookBase_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1OrderBookBase_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1OrderBookBase_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1OrderBookBase_Type_Vectors.Vector);



   type V1OrderBook_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Asks : .Models.AnyType_Type;
       Bids : .Models.AnyType_Type;
     end record;


   package V1OrderBook_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1OrderBook_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1OrderBook_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1OrderBook_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1OrderBook_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1OrderBook_Type_Vectors.Vector);



   type V1QuoteTrade_Type is
     record
       Symbol_Id : Swagger.Nullable_UString;
       Time_Exchange : Swagger.Nullable_Date;
       Time_Coinapi : Swagger.Nullable_Date;
       Ask_Price : Swagger.Number;
       Ask_Size : Swagger.Number;
       Bid_Price : Swagger.Number;
       Bid_Size : Swagger.Number;
       Last_Trade : .Models.V1LastTrade_Type;
     end record;


   package V1QuoteTrade_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.V1QuoteTrade_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.V1QuoteTrade_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in V1QuoteTrade_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.V1QuoteTrade_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out V1QuoteTrade_Type_Vectors.Vector);


end .Models;
