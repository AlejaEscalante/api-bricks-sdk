openapi: 3.0.1
info:
  title: Push API
  description: ''
  contact:
    name: COINAPI LTD
    url: https://www.coinapi.io
    email: support@coinapi.io
  license:
    name: MIT License
    url: https://github.com/coinapi/coinapi-sdk/blob/master/LICENSE
  version: v1
servers:
  - url: https://data-push-api.flatfiles.coinapi.io
paths:
  /api/data-storage/types:
    get:
      tags:
        - DataStorageEndpoint
      responses:
        '200':
          description: OK
  /api/data-storage/endpoint:
    get:
      tags:
        - DataStorageEndpoint
      responses:
        '200':
          description: OK
    post:
      tags:
        - DataStorageEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataStorageEndpoint'
          text/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataStorageEndpoint'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataStorageEndpoint'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - DataStorageEndpoint
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/metadata/exchanges:
    get:
      tags:
        - Metadata
      summary: List all exchanges
      description: "Get a detailed list of exchanges provided by the system.\r\n            \r\n:::info\r\nProperties of the output are providing aggregated information from across all symbols related to the specific exchange. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source.\r\n:::"
      parameters:
        - name: filter_exchange_id
          in: query
          description: 'Comma or semicolon delimited exchange identifiers used to filter response. (optional, eg. `BITSTAMP;GEMINI`)'
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
  '/api/metadata/exchanges/{exchange_id}':
    get:
      tags:
        - Metadata
      summary: List all exchanges by exchange_id
      parameters:
        - name: exchange_id
          in: path
          description: The ID of the exchange.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY",
    "data_quote_start": "2015-02-15T12:53:50.343+00:00",
    "data_quote_end": "2018-03-09T23:34:52.58+00:00",
    "data_orderbook_start": "2015-02-15T12:53:50.343+00:00",
    "data_orderbook_end": "2018-03-09T23:34:52.58+00:00",
    "data_trade_start": "2013-06-12T14:24:24+00:00",
    "data_trade_end": "2017-11-01T16:30:39.7077259+00:00",
    "data_symbols_count": 2
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)",
    "data_quote_start": "2015-03-29T21:46:06.263+00:00",
    "data_quote_end": "2019-11-03T18:22:29.1837496+00:00",
    "data_orderbook_start": "2015-03-29T21:46:06.263+00:00",
    "data_orderbook_end": "2019-11-03T18:23:53.2859878+00:00",
    "data_trade_start": "2015-03-29T21:46:08.703+00:00",
    "data_trade_end": "2019-11-03T18:21:48.277+00:00",
    "data_symbols_count": 403
  }
]
  /api/push-orders/calculate-price:
    post:
      tags:
        - FlatFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          text/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
        required: true
      responses:
        '200':
          description: OK
  /api/push-orders/estimate-daily-price:
    post:
      tags:
        - FlatFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          text/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
        required: true
      responses:
        '200':
          description: OK
  /api/push-orders:
    post:
      tags:
        - FlatFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          text/json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Coinapi.DataDeliveryTask'
      responses:
        '200':
          description: OK
    get:
      tags:
        - FlatFiles
      responses:
        '200':
          description: OK
    delete:
      tags:
        - FlatFiles
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/push-orders/account-balance:
    get:
      tags:
        - FlatFiles
      responses:
        '200':
          description: OK
  /api/metadata/schemas:
    get:
      tags:
        - Schemas
      responses:
        '200':
          description: OK
  '/api/metadata/symbols/{exchange_id}':
    get:
      tags:
        - Metadata
      summary: List of symbols for the exchange
      parameters:
        - name: exchange_id
          in: path
          description: The ID of the exchange (from the Metadata -> Exchanges)
          required: true
          schema:
            type: string
        - name: filter_symbol_id
          in: query
          description: The filter for symbol ID.
          schema:
            type: string
        - name: filter_asset_id
          in: query
          description: The filter for asset ID.
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Symbol'
              examples:
                Example response:
                  value: [
  {
    "symbol_id": "KRAKENFTS_PERP_BTC_USD",
    "exchange_id": "KRAKENFTS",
    "symbol_type": "PERPETUAL",
    "asset_id_base": "BTC",
    "asset_id_quote": "USD",
    "asset_id_unit": "USD",
    "future_contract_unit": 1.000000000,
    "future_contract_unit_asset": "USD",
    "data_start": "2019-10-30",
    "data_end": "2021-03-03",
    "data_quote_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_quote_end": "2021-03-03T13:51:45.697+00:00",
    "data_orderbook_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_orderbook_end": "2020-08-05T14:37:32.008+00:00",
    "data_trade_start": "2019-10-30T16:38:52.162+00:00",
    "data_trade_end": "2021-03-03T13:46:25.781+00:00",
    "symbol_id_exchange": "pi_xbtusd",
    "asset_id_base_exchange": "XBT",
    "asset_id_quote_exchange": "USD",
    "price_precision": 0.100000000,
    "size_precision": 1.000000000
  },
  {
    "symbol_id": "POLONIEX_SPOT_LTC_USDC",
    "exchange_id": "POLONIEX",
    "symbol_type": "SPOT",
    "asset_id_base": "LTC",
    "asset_id_quote": "USDC",
    "data_start": "2018-11-20",
    "data_end": "2021-03-01",
    "data_quote_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_quote_end": "2021-03-01T16:07:09.3475456+00:00",
    "data_orderbook_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_orderbook_end": "2020-08-05T14:37:20.269578+00:00",
    "data_trade_start": "2018-11-20T15:25:38+00:00",
    "data_trade_end": "2021-03-01T16:03:18+00:00",
    "symbol_id_exchange": "USDC_LTC",
    "asset_id_base_exchange": "LTC",
    "asset_id_quote_exchange": "USDC",
    "price_precision": 0.000000010,
    "size_precision": 0.000000010
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Symbol'
              examples:
                Example response:
                  value: [
  {
    "symbol_id": "KRAKENFTS_PERP_BTC_USD",
    "exchange_id": "KRAKENFTS",
    "symbol_type": "PERPETUAL",
    "asset_id_base": "BTC",
    "asset_id_quote": "USD",
    "asset_id_unit": "USD",
    "future_contract_unit": 1.000000000,
    "future_contract_unit_asset": "USD",
    "data_start": "2019-10-30",
    "data_end": "2021-03-03",
    "data_quote_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_quote_end": "2021-03-03T13:51:45.697+00:00",
    "data_orderbook_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_orderbook_end": "2020-08-05T14:37:32.008+00:00",
    "data_trade_start": "2019-10-30T16:38:52.162+00:00",
    "data_trade_end": "2021-03-03T13:46:25.781+00:00",
    "symbol_id_exchange": "pi_xbtusd",
    "asset_id_base_exchange": "XBT",
    "asset_id_quote_exchange": "USD",
    "price_precision": 0.100000000,
    "size_precision": 1.000000000
  },
  {
    "symbol_id": "POLONIEX_SPOT_LTC_USDC",
    "exchange_id": "POLONIEX",
    "symbol_type": "SPOT",
    "asset_id_base": "LTC",
    "asset_id_quote": "USDC",
    "data_start": "2018-11-20",
    "data_end": "2021-03-01",
    "data_quote_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_quote_end": "2021-03-01T16:07:09.3475456+00:00",
    "data_orderbook_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_orderbook_end": "2020-08-05T14:37:20.269578+00:00",
    "data_trade_start": "2018-11-20T15:25:38+00:00",
    "data_trade_end": "2021-03-01T16:03:18+00:00",
    "symbol_id_exchange": "USDC_LTC",
    "asset_id_base_exchange": "LTC",
    "asset_id_quote_exchange": "USDC",
    "price_precision": 0.000000010,
    "size_precision": 0.000000010
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Symbol'
              examples:
                Example response:
                  value: [
  {
    "symbol_id": "KRAKENFTS_PERP_BTC_USD",
    "exchange_id": "KRAKENFTS",
    "symbol_type": "PERPETUAL",
    "asset_id_base": "BTC",
    "asset_id_quote": "USD",
    "asset_id_unit": "USD",
    "future_contract_unit": 1.000000000,
    "future_contract_unit_asset": "USD",
    "data_start": "2019-10-30",
    "data_end": "2021-03-03",
    "data_quote_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_quote_end": "2021-03-03T13:51:45.697+00:00",
    "data_orderbook_start": "2019-10-30T16:53:10.3262317+00:00",
    "data_orderbook_end": "2020-08-05T14:37:32.008+00:00",
    "data_trade_start": "2019-10-30T16:38:52.162+00:00",
    "data_trade_end": "2021-03-03T13:46:25.781+00:00",
    "symbol_id_exchange": "pi_xbtusd",
    "asset_id_base_exchange": "XBT",
    "asset_id_quote_exchange": "USD",
    "price_precision": 0.100000000,
    "size_precision": 1.000000000
  },
  {
    "symbol_id": "POLONIEX_SPOT_LTC_USDC",
    "exchange_id": "POLONIEX",
    "symbol_type": "SPOT",
    "asset_id_base": "LTC",
    "asset_id_quote": "USDC",
    "data_start": "2018-11-20",
    "data_end": "2021-03-01",
    "data_quote_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_quote_end": "2021-03-01T16:07:09.3475456+00:00",
    "data_orderbook_start": "2018-11-20T15:24:58.4128803+00:00",
    "data_orderbook_end": "2020-08-05T14:37:20.269578+00:00",
    "data_trade_start": "2018-11-20T15:25:38+00:00",
    "data_trade_end": "2021-03-01T16:03:18+00:00",
    "symbol_id_exchange": "USDC_LTC",
    "asset_id_base_exchange": "LTC",
    "asset_id_quote_exchange": "USDC",
    "price_precision": 0.000000010,
    "size_precision": 0.000000010
  }
]
components:
  schemas:
    Coinapi.DataDeliveryTask:
      required:
        - exchange
      type: object
      properties:
        id:
          type: string
          format: uuid
        idOrganization:
          type: string
          format: uuid
        exchange:
          maxLength: 255
          minLength: 0
          type: string
        symbols:
          type: string
          nullable: true
        schema:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        date_from:
          type: string
          format: date-time
          nullable: true
        date_to:
          type: string
          format: date-time
          nullable: true
        priceHistorical:
          type: number
          format: double
        priceDailyUpdates:
          type: number
          format: double
        encoding:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        compression:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        idDataStorageEndpoint:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        status:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        statusDescription:
          type: string
          nullable: true
        isDeleted:
          type: integer
          format: int32
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
      additionalProperties: false
    Coinapi.DataStorageEndpoint:
      required:
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        type:
          maxLength: 255
          minLength: 0
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        url:
          maxLength: 500
          minLength: 0
          type: string
          nullable: true
        username:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        bucket:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        prefix:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        region:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        port:
          type: integer
          format: int32
          nullable: true
        useSFTP:
          type: boolean
        privateKey:
          type: string
          nullable: true
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        status:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        statusDescription:
          type: string
          nullable: true
        isDeleted:
          type: boolean
        timeoutSeconds:
          type: integer
          format: int32
          nullable: true
        maxConcurrentConnections:
          type: integer
          format: int32
          nullable: true
        organization:
          $ref: '#/components/schemas/Coinapi.Organization'
      additionalProperties: false
    Coinapi.Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        stripeId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        quickNodeId:
          type: string
          nullable: true
        isDeleting:
          type: integer
          format: int32
        company:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        vatIdType:
          type: string
          nullable: true
        vatIdValue:
          type: string
          nullable: true
        purchaseOrder:
          type: string
          nullable: true
        coupon:
          type: string
          nullable: true
        billingEmail:
          type: string
          nullable: true
        autoRechargeEnabled:
          type: integer
          format: int32
        autoRechargeBalanceGoesBelowUsd:
          type: integer
          format: int32
        autoRechargeBalanceBackUpToUsd:
          type: integer
          format: int32
        paygEnabled:
          type: integer
          format: int32
        creditBalance:
          type: integer
          format: int32
        creditUninvoicedCurrent:
          type: integer
          format: int32
        creditUninvoicedLimit:
          type: integer
          format: int32
      additionalProperties: false
    Metadata.Exchange:
      type: object
      properties:
        exchange_id:
          type: string
          description: Gets or sets the exchange ID.
          nullable: true
        website:
          type: string
          description: Gets or sets the website URL of the exchange.
          nullable: true
        name:
          type: string
          description: Gets or sets the name of the exchange.
          nullable: true
        data_start:
          type: string
          description: Gets the start date of the exchange's data.
          nullable: true
          readOnly: true
        data_end:
          type: string
          description: Gets the end date of the exchange's data.
          nullable: true
          readOnly: true
        data_quote_start:
          type: string
          description: Gets or sets the start date of quote data.
          format: date-time
          nullable: true
        data_quote_end:
          type: string
          description: Gets or sets the end date of quote data.
          format: date-time
          nullable: true
        data_orderbook_start:
          type: string
          description: Gets or sets the start date of order book data.
          format: date-time
          nullable: true
        data_orderbook_end:
          type: string
          description: Gets or sets the end date of order book data.
          format: date-time
          nullable: true
        data_trade_start:
          type: string
          description: Gets or sets the start date of trade data.
          format: date-time
          nullable: true
        data_trade_end:
          type: string
          description: Gets or sets the end date of trade data.
          format: date-time
          nullable: true
        data_trade_count:
          type: integer
          description: Gets or sets the number of trades.
          format: int64
          nullable: true
        data_symbols_count:
          type: integer
          description: Gets or sets the number of symbols.
          format: int64
          nullable: true
      additionalProperties: false
      description: Represents an exchange.
    Metadata.Symbol:
      type: object
      properties:
        symbol_id:
          type: string
          description: Gets or sets the symbol identifier.
          nullable: true
        exchange_id:
          type: string
          description: Gets or sets the exchange identifier.
          nullable: true
        symbol_type:
          type: string
          description: Gets or sets the symbol type.
          nullable: true
        asset_id_base:
          type: string
          description: Gets or sets the base asset identifier.
          nullable: true
        asset_id_quote:
          type: string
          description: Gets or sets the quote asset identifier.
          nullable: true
        asset_id_unit:
          type: string
          description: Gets or sets the unit asset identifier.
          nullable: true
        future_contract_unit:
          type: number
          description: Gets or sets the contract unit for futures.
          format: double
          nullable: true
        future_contract_unit_asset:
          type: string
          description: Gets or sets the asset used as the unit for futures contract.
          nullable: true
        future_delivery_time:
          type: string
          description: Gets or sets the future delivery time for futures contract.
          format: date-time
          nullable: true
        option_type_is_call:
          type: boolean
          description: Gets or sets a value indicating whether the option type is a call.
          nullable: true
        option_strike_price:
          type: number
          description: Gets or sets the strike price for options.
          format: double
          nullable: true
        option_contract_unit:
          type: number
          description: Gets or sets the contract unit for options.
          format: double
          nullable: true
        option_exercise_style:
          type: string
          description: Gets or sets the exercise style for options.
          nullable: true
        option_expiration_time:
          type: string
          description: Gets or sets the expiration time for options.
          format: date-time
          nullable: true
        contract_delivery_time:
          type: string
          description: Gets or sets the delivery time for contracts.
          format: date-time
          nullable: true
        contract_unit:
          type: number
          description: Gets or sets the contract unit for contracts.
          format: double
          nullable: true
        contract_unit_asset:
          type: string
          description: Gets or sets the asset used as the unit for contracts.
          nullable: true
        contract_id:
          type: string
          description: Gets or sets the contract identifier.
          nullable: true
        contract_display_name:
          type: string
          description: Gets or sets the display name of the contract.
          nullable: true
        contract_display_description:
          type: string
          description: Gets or sets the display description of the contract.
          nullable: true
        data_start:
          type: string
          description: Gets the start date of the data in string format ("yyyy-MM-dd").
          nullable: true
          readOnly: true
        data_end:
          type: string
          description: Gets the end date of the data in string format ("yyyy-MM-dd").
          nullable: true
          readOnly: true
        data_quote_start:
          type: string
          description: Gets or sets the start date of quote data.
          format: date-time
          nullable: true
        data_quote_end:
          type: string
          description: Gets or sets the end date of quote data.
          format: date-time
          nullable: true
        data_orderbook_start:
          type: string
          description: Gets or sets the start date of order book data.
          format: date-time
          nullable: true
        data_orderbook_end:
          type: string
          description: Gets or sets the end date of order book data.
          format: date-time
          nullable: true
        data_trade_start:
          type: string
          description: Gets or sets the start date of trade data.
          format: date-time
          nullable: true
        data_trade_end:
          type: string
          description: Gets or sets the end date of trade data.
          format: date-time
          nullable: true
        index_id:
          type: string
          description: Gets or sets the index identifier.
          nullable: true
        index_display_name:
          type: string
          description: Gets or sets the display name of the index.
          nullable: true
        index_display_description:
          type: string
          description: Gets or sets the display description of the index.
          nullable: true
        symbol_id_exchange:
          type: string
          description: Gets or sets the symbol identifier in the exchange.
          nullable: true
        asset_id_base_exchange:
          type: string
          description: Gets or sets the base asset identifier in the exchange.
          nullable: true
        asset_id_quote_exchange:
          type: string
          description: Gets or sets the quote asset identifier in the exchange.
          nullable: true
        price_precision:
          type: number
          description: Gets or sets the price precision.
          format: double
          nullable: true
        size_precision:
          type: number
          description: Gets or sets the size precision.
          format: double
          nullable: true
      additionalProperties: false
      description: Represents a symbol data model.
  securitySchemes:
    ApiKey:
      type: apiKey
      description: CoinApi API key needed to access the endpoints
      name: X-CoinAPI-Key
      in: header
security:
  - ApiKey: [ ]
tags:
  - name: Metadata
    description: <span data-status-page="28923"></span>
  - name: Symbols
    description: Controller for retrieving symbol information.