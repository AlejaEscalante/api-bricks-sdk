{-
   REST API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: v1
   Contact: support@apibricks.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.ContentExtraction exposing
    ( v1ExtractorGet
    , v1ExtractorItemGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode


{-| Extract and classify SEC filing content 

Retrieves filing content from the EDGAR database and intelligently classifies it according to form type and item categories.    ### Supported Form Types    Form Type | Description  ----------|------------  8-K      | Current report filing  10-K     | Annual report filing  10-Q     | Quarterly report filing    ### Content Classification  - 8-K forms: Content classified by item numbers (e.g., 1.01, 2.01)  - 10-K/10-Q forms: Items categorized by their respective part and item structure    :::note  Both HTML and plain text documents are supported for content extraction.  :::

-}
v1ExtractorGet : String -> Maybe DTOExtractorType -> Api.Request Api.Data.DTOFilingExtractResultDto
v1ExtractorGet accessionNumber_query type__query =
    Api.request
        "GET"
        "/v1/extractor"
        []
        [ ( "accession_number", Just <| identity accessionNumber_query ), ( "type", Maybe.map Api.Data.stringFromDTOExtractorType type__query ) ]
        []
        Nothing
        Api.Data.dTOFilingExtractResultDtoDecoder


{-| Extract specific item content from SEC filing

Retrieves filing content from the EDGAR database and returns only the text content of the specified item number.    ### Item Number Format    Form Type | Item Format Examples  -----------|-------------------  8-K       | 1.01, 2.01, 7.01  10-K      | 1, 2, 3  10-K/10-Q | PartI 1, PartII 2    :::tip  For best results, ensure the item number matches exactly with the filing's structure.  :::

-}
v1ExtractorItemGet : String -> String -> Maybe DTOExtractorType -> Api.Request String
v1ExtractorItemGet accessionNumber_query itemNumber_query type__query =
    Api.request
        "GET"
        "/v1/extractor/item"
        []
        [ ( "accession_number", Just <| identity accessionNumber_query ), ( "item_number", Just <| identity itemNumber_query ), ( "type", Maybe.map Api.Data.stringFromDTOExtractorType type__query ) ]
        []
        Nothing
        Json.Decode.string

