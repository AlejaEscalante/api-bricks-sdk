/*
REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: support@apibricks.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOFilingExtractResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOFilingExtractResultDto{}

// DTOFilingExtractResultDto Represents the result of a filing extraction.
type DTOFilingExtractResultDto struct {
	AccessionNumber NullableString `json:"accession_number,omitempty"`
	FormType NullableString `json:"form_type,omitempty"`
	Items []DTOFilingItemDto `json:"items,omitempty"`
}

// NewDTOFilingExtractResultDto instantiates a new DTOFilingExtractResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOFilingExtractResultDto() *DTOFilingExtractResultDto {
	this := DTOFilingExtractResultDto{}
	return &this
}

// NewDTOFilingExtractResultDtoWithDefaults instantiates a new DTOFilingExtractResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOFilingExtractResultDtoWithDefaults() *DTOFilingExtractResultDto {
	this := DTOFilingExtractResultDto{}
	return &this
}

// GetAccessionNumber returns the AccessionNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DTOFilingExtractResultDto) GetAccessionNumber() string {
	if o == nil || IsNil(o.AccessionNumber.Get()) {
		var ret string
		return ret
	}
	return *o.AccessionNumber.Get()
}

// GetAccessionNumberOk returns a tuple with the AccessionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DTOFilingExtractResultDto) GetAccessionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessionNumber.Get(), o.AccessionNumber.IsSet()
}

// HasAccessionNumber returns a boolean if a field has been set.
func (o *DTOFilingExtractResultDto) HasAccessionNumber() bool {
	if o != nil && o.AccessionNumber.IsSet() {
		return true
	}

	return false
}

// SetAccessionNumber gets a reference to the given NullableString and assigns it to the AccessionNumber field.
func (o *DTOFilingExtractResultDto) SetAccessionNumber(v string) {
	o.AccessionNumber.Set(&v)
}
// SetAccessionNumberNil sets the value for AccessionNumber to be an explicit nil
func (o *DTOFilingExtractResultDto) SetAccessionNumberNil() {
	o.AccessionNumber.Set(nil)
}

// UnsetAccessionNumber ensures that no value is present for AccessionNumber, not even an explicit nil
func (o *DTOFilingExtractResultDto) UnsetAccessionNumber() {
	o.AccessionNumber.Unset()
}

// GetFormType returns the FormType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DTOFilingExtractResultDto) GetFormType() string {
	if o == nil || IsNil(o.FormType.Get()) {
		var ret string
		return ret
	}
	return *o.FormType.Get()
}

// GetFormTypeOk returns a tuple with the FormType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DTOFilingExtractResultDto) GetFormTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormType.Get(), o.FormType.IsSet()
}

// HasFormType returns a boolean if a field has been set.
func (o *DTOFilingExtractResultDto) HasFormType() bool {
	if o != nil && o.FormType.IsSet() {
		return true
	}

	return false
}

// SetFormType gets a reference to the given NullableString and assigns it to the FormType field.
func (o *DTOFilingExtractResultDto) SetFormType(v string) {
	o.FormType.Set(&v)
}
// SetFormTypeNil sets the value for FormType to be an explicit nil
func (o *DTOFilingExtractResultDto) SetFormTypeNil() {
	o.FormType.Set(nil)
}

// UnsetFormType ensures that no value is present for FormType, not even an explicit nil
func (o *DTOFilingExtractResultDto) UnsetFormType() {
	o.FormType.Unset()
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DTOFilingExtractResultDto) GetItems() []DTOFilingItemDto {
	if o == nil {
		var ret []DTOFilingItemDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DTOFilingExtractResultDto) GetItemsOk() ([]DTOFilingItemDto, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *DTOFilingExtractResultDto) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []DTOFilingItemDto and assigns it to the Items field.
func (o *DTOFilingExtractResultDto) SetItems(v []DTOFilingItemDto) {
	o.Items = v
}

func (o DTOFilingExtractResultDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOFilingExtractResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessionNumber.IsSet() {
		toSerialize["accession_number"] = o.AccessionNumber.Get()
	}
	if o.FormType.IsSet() {
		toSerialize["form_type"] = o.FormType.Get()
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableDTOFilingExtractResultDto struct {
	value *DTOFilingExtractResultDto
	isSet bool
}

func (v NullableDTOFilingExtractResultDto) Get() *DTOFilingExtractResultDto {
	return v.value
}

func (v *NullableDTOFilingExtractResultDto) Set(val *DTOFilingExtractResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOFilingExtractResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOFilingExtractResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOFilingExtractResultDto(val *DTOFilingExtractResultDto) *NullableDTOFilingExtractResultDto {
	return &NullableDTOFilingExtractResultDto{value: val, isSet: true}
}

func (v NullableDTOFilingExtractResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOFilingExtractResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


