/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. <br/> This API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>       <br/><br/> Implemented Standards:\n\n * [HTTP1.0](https://datatracker.ietf.org/doc/html/rfc1945)\n * [HTTP1.1](https://datatracker.ietf.org/doc/html/rfc2616)\n * [HTTP2.0](https://datatracker.ietf.org/doc/html/rfc7540)\n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASBalance
 */
public class OASBalance implements OAS.MappedProperties {
    /**
     * Exchange identifier used to identify the routing destination.
     * @return exchangeId
     */
    public String exchangeId { get; set; }

    /**
     * Get data
     * @return data
     */
    public List<OASBalanceData> data { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'exchange_id' => 'exchangeId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASBalance() {
        data = new List<OASBalanceData>();
    }

    public static OASBalance getExample() {
        OASBalance balance = new OASBalance();
          balance.exchangeId = 'KRAKEN';
          balance.data = new List<OASBalanceData>{OASBalanceData.getExample()};
        return balance;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBalance) {           
            OASBalance balance = (OASBalance) obj;
            return this.exchangeId == balance.exchangeId
                && this.data == balance.data;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (exchangeId == null ? 0 : System.hashCode(exchangeId));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        return hashCode;
    }
}

