#
# REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Contact: support@apibricks.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represents the result of a filing extraction.

.PARAMETER AccessionNumber
No description available.
.PARAMETER FormType
No description available.
.PARAMETER Items
No description available.
.OUTPUTS

DTOFilingExtractResultDto<PSCustomObject>
#>

function Initialize-DTOFilingExtractResultDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccessionNumber},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FormType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Items}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DTOFilingExtractResultDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "accession_number" = ${AccessionNumber}
            "form_type" = ${FormType}
            "items" = ${Items}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DTOFilingExtractResultDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DTOFilingExtractResultDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DTOFilingExtractResultDto<PSCustomObject>
#>
function ConvertFrom-JsonToDTOFilingExtractResultDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DTOFilingExtractResultDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DTOFilingExtractResultDto
        $AllProperties = ("accession_number", "form_type", "items")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accession_number"))) { #optional property not found
            $AccessionNumber = $null
        } else {
            $AccessionNumber = $JsonParameters.PSobject.Properties["accession_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "form_type"))) { #optional property not found
            $FormType = $null
        } else {
            $FormType = $JsonParameters.PSobject.Properties["form_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "items"))) { #optional property not found
            $Items = $null
        } else {
            $Items = $JsonParameters.PSobject.Properties["items"].value
        }

        $PSO = [PSCustomObject]@{
            "accession_number" = ${AccessionNumber}
            "form_type" = ${FormType}
            "items" = ${Items}
        }

        return $PSO
    }

}

